{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ButtonDecorator = exports.ButtonBase = exports.Button = exports[\"default\"] = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"@enact/core/internal/prop-types\"));\n\nvar _kind = _interopRequireDefault(require(\"@enact/core/kind\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"prop-types\"));\n\nvar _compose = _interopRequireDefault(require(\"ramda/src/compose\"));\n\nvar _ComponentOverride = _interopRequireDefault(require(\"../ComponentOverride\"));\n\nvar _ForwardRef = _interopRequireDefault(require(\"../ForwardRef\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _ButtonModule = _interopRequireDefault(require(\"./Button.module.css\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * A basic button component structure without any behaviors applied to it.\n *\n * @class ButtonBase\n * @memberof ui/Button\n * @ui\n * @public\n */\n\n\nvar ButtonBase = (0, _kind[\"default\"])({\n  name: 'ui:Button',\n  propTypes:\n  /** @lends ui/Button.ButtonBase.prototype */\n  {\n    /**\n     * Called with a reference to the root component.\n     *\n     * When using {@link ui/Button.Button}, the `ref` prop is forwarded to this component\n     * as `componentRef`.\n     *\n     * @type {Object|Function}\n     * @public\n     */\n    componentRef: _propTypes[\"default\"].ref,\n\n    /**\n     * Customizes the component by mapping the supplied collection of CSS class names to the\n     * corresponding internal elements and states of this component.\n     *\n     * The following classes are supported:\n     *\n     * * `button` - The root component class\n     * * `bg` - The background node of the button\n     * * `client` - The content node of the button\n     * * `hasIcon` - Applied when there is an `icon` present\n     * * `icon` - The icon node, when `icon` is set\n     * * `large` - Applied when `size` prop is `'large'`\n     * * `minWidth` - Applied when `minWidth` prop is `true`\n     * * `pressed` - Applied when `pressed` prop is `true`\n     * * `selected` - Applied when `selected` prop is `true`\n     * * `small` - Applied when `size` prop is `'small'`\n     *\n     * @type {Object}\n     * @public\n     */\n    css: _propTypes2[\"default\"].object,\n\n    /**\n     * Additional DOM nodes which may be necessary for decorating the Button.\n     *\n     * @type {Node}\n     * @private\n     */\n    decoration: _propTypes2[\"default\"].node,\n\n    /**\n     * Applies the `disabled` class.\n     *\n     * When `true`, the button is shown as disabled.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    disabled: _propTypes2[\"default\"].bool,\n\n    /**\n     * The icon displayed within the Button.\n     *\n     * The icon will be displayed before the natural reading order of the text, regardless\n     * of locale. Any string that is valid for its {@link ui/Button.Button.iconComponent} is\n     * valid here. If `icon` is specified as a string and `iconButton` is undefined, the icon is\n     * not rendered.\n     *\n     * This also supports a custom icon, in the form of a DOM node or a Component,\n     * with the caveat that if you supply a custom icon, you are responsible for sizing and\n     * locale positioning of the custom component.\n     *\n     * Setting this to `true` means the `iconComponent` will be rendered but with empty content.\n     * This may be useful if you've customized the `iconComponent` to render the icon content\n     * externally.\n     *\n     * @type {Node|Boolean}\n     * @public\n     */\n    icon: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].node, _propTypes2[\"default\"].bool]),\n\n    /**\n     * The component used to render the [icon]{@link ui/Button.ButtonBase.icon}.\n     *\n     * This component will receive the `icon` class to customize its styling.\n     * If [icon]{@link ui/Button.ButtonBase.icon} is not assigned or is false, this component\n     * will not be rendered.\n     *\n     * If this is a component rather than an HTML element string, this component will also\n     * receive the `size` and `iconFlip` (as `flip`) properties and should be configured to\n     * handle it.\n     *\n     * @type {Component|Node}\n     * @public\n     */\n    iconComponent: _propTypes[\"default\"].componentOverride,\n\n    /**\n     * Flips the icon.\n     *\n     * @see {@link ui/Icon.Icon#flip}\n     * @type {String}\n     * @public\n     */\n    iconFlip: _propTypes2[\"default\"].string,\n\n    /**\n     * Enforces a minimum width for the component.\n     *\n     * Applies the `minWidth` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default true\n     * @public\n     */\n    minWidth: _propTypes2[\"default\"].bool,\n\n    /**\n     * Indicates the component is depressed.\n     *\n     * Applies the `pressed` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    pressed: _propTypes2[\"default\"].bool,\n\n    /**\n     * Indicates the component is selected.\n     *\n     * Applies the `selected` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    selected: _propTypes2[\"default\"].bool,\n\n    /**\n     * The size of the button.\n     *\n     * Applies the CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {String}\n     * @public\n     */\n    size: _propTypes2[\"default\"].string\n  },\n  defaultProps: {\n    disabled: false,\n    minWidth: true,\n    pressed: false,\n    selected: false\n  },\n  styles: {\n    css: _ButtonModule[\"default\"],\n    className: 'button',\n    publicClassNames: true\n  },\n  computed: {\n    className: function className(_ref) {\n      var icon = _ref.icon,\n          minWidth = _ref.minWidth,\n          pressed = _ref.pressed,\n          selected = _ref.selected,\n          size = _ref.size,\n          styler = _ref.styler;\n      return styler.append({\n        hasIcon: !!icon,\n        minWidth: minWidth,\n        pressed: pressed,\n        selected: selected\n      }, size);\n    },\n    icon: function icon(_ref2) {\n      var css = _ref2.css,\n          _icon = _ref2.icon,\n          iconComponent = _ref2.iconComponent,\n          iconFlip = _ref2.iconFlip,\n          size = _ref2.size;\n      if (_icon == null || _icon === false) return; // Establish the base collection of props for the most basic `iconComponent` type, an\n      // HTML element string.\n\n      var props = {\n        className: css.icon,\n        component: iconComponent\n      }; // Add in additional props that any Component supplied to `iconComponent` should be\n      // configured to handle.\n\n      if (typeof iconComponent !== 'string') {\n        props.size = size; // the following inadvertently triggers a linting rule\n        // eslint-disable-next-line enact/prop-types\n\n        props.flip = iconFlip;\n      }\n\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ComponentOverride[\"default\"], _objectSpread(_objectSpread({}, props), {}, {\n        children: _icon\n      }));\n    }\n  },\n  render: function render(_ref3) {\n    var children = _ref3.children,\n        componentRef = _ref3.componentRef,\n        css = _ref3.css,\n        decoration = _ref3.decoration,\n        disabled = _ref3.disabled,\n        icon = _ref3.icon,\n        rest = _objectWithoutProperties(_ref3, [\"children\", \"componentRef\", \"css\", \"decoration\", \"disabled\", \"icon\"]);\n\n    delete rest.iconComponent;\n    delete rest.iconFlip;\n    delete rest.minWidth;\n    delete rest.pressed;\n    delete rest.selected;\n    delete rest.size;\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(\"div\", _objectSpread(_objectSpread({\n      role: \"button\"\n    }, rest), {}, {\n      \"aria-disabled\": disabled,\n      disabled: disabled,\n      ref: componentRef,\n      children: [decoration ? /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n        className: css.decoration,\n        children: decoration\n      }) : null, /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n        className: css.bg\n      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(\"div\", {\n        className: css.client,\n        children: [icon, children]\n      })]\n    }));\n  }\n});\n/**\n * A higher-order component that adds touch support to a [ButtonBase]{@link ui/Button.ButtonBase}.\n *\n * @hoc\n * @memberof ui/Button\n * @mixes ui/Touchable.Touchable\n * @public\n */\n\nexports.ButtonBase = ButtonBase;\nvar ButtonDecorator = (0, _compose[\"default\"])((0, _ForwardRef[\"default\"])({\n  prop: 'componentRef'\n}), (0, _Touchable[\"default\"])({\n  activeProp: 'pressed'\n}));\n/**\n * A minimally-styled button component with touch support.\n *\n * @class Button\n * @memberof ui/Button\n * @extends ui/Button.ButtonBase\n * @mixes ui/Button.ButtonDecorator\n * @omit componentRef\n * @ui\n * @public\n */\n\nexports.ButtonDecorator = ButtonDecorator;\nvar Button = ButtonDecorator(ButtonBase);\nexports.Button = Button;\nvar _default = Button;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/tak43/remaking/node_modules/@enact/ui/Button/Button.js"],"names":["Object","defineProperty","exports","value","ButtonDecorator","ButtonBase","Button","_propTypes","_interopRequireDefault","require","_kind","_propTypes2","_compose","_ComponentOverride","_ForwardRef","_Touchable","_ButtonModule","_jsxRuntime","obj","__esModule","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","name","propTypes","componentRef","ref","css","decoration","node","disabled","bool","icon","oneOfType","iconComponent","componentOverride","iconFlip","string","minWidth","pressed","selected","size","defaultProps","styles","className","publicClassNames","computed","_ref","styler","append","hasIcon","_ref2","_icon","props","component","flip","jsx","children","render","_ref3","rest","jsxs","role","bg","client","prop","activeProp","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ButtonDecorator = exports.ButtonBase = exports.Button = exports[\"default\"] = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"@enact/core/internal/prop-types\"));\n\nvar _kind = _interopRequireDefault(require(\"@enact/core/kind\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"prop-types\"));\n\nvar _compose = _interopRequireDefault(require(\"ramda/src/compose\"));\n\nvar _ComponentOverride = _interopRequireDefault(require(\"../ComponentOverride\"));\n\nvar _ForwardRef = _interopRequireDefault(require(\"../ForwardRef\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _ButtonModule = _interopRequireDefault(require(\"./Button.module.css\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * A basic button component structure without any behaviors applied to it.\n *\n * @class ButtonBase\n * @memberof ui/Button\n * @ui\n * @public\n */\nvar ButtonBase = (0, _kind[\"default\"])({\n  name: 'ui:Button',\n  propTypes:\n  /** @lends ui/Button.ButtonBase.prototype */\n  {\n    /**\n     * Called with a reference to the root component.\n     *\n     * When using {@link ui/Button.Button}, the `ref` prop is forwarded to this component\n     * as `componentRef`.\n     *\n     * @type {Object|Function}\n     * @public\n     */\n    componentRef: _propTypes[\"default\"].ref,\n\n    /**\n     * Customizes the component by mapping the supplied collection of CSS class names to the\n     * corresponding internal elements and states of this component.\n     *\n     * The following classes are supported:\n     *\n     * * `button` - The root component class\n     * * `bg` - The background node of the button\n     * * `client` - The content node of the button\n     * * `hasIcon` - Applied when there is an `icon` present\n     * * `icon` - The icon node, when `icon` is set\n     * * `large` - Applied when `size` prop is `'large'`\n     * * `minWidth` - Applied when `minWidth` prop is `true`\n     * * `pressed` - Applied when `pressed` prop is `true`\n     * * `selected` - Applied when `selected` prop is `true`\n     * * `small` - Applied when `size` prop is `'small'`\n     *\n     * @type {Object}\n     * @public\n     */\n    css: _propTypes2[\"default\"].object,\n\n    /**\n     * Additional DOM nodes which may be necessary for decorating the Button.\n     *\n     * @type {Node}\n     * @private\n     */\n    decoration: _propTypes2[\"default\"].node,\n\n    /**\n     * Applies the `disabled` class.\n     *\n     * When `true`, the button is shown as disabled.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    disabled: _propTypes2[\"default\"].bool,\n\n    /**\n     * The icon displayed within the Button.\n     *\n     * The icon will be displayed before the natural reading order of the text, regardless\n     * of locale. Any string that is valid for its {@link ui/Button.Button.iconComponent} is\n     * valid here. If `icon` is specified as a string and `iconButton` is undefined, the icon is\n     * not rendered.\n     *\n     * This also supports a custom icon, in the form of a DOM node or a Component,\n     * with the caveat that if you supply a custom icon, you are responsible for sizing and\n     * locale positioning of the custom component.\n     *\n     * Setting this to `true` means the `iconComponent` will be rendered but with empty content.\n     * This may be useful if you've customized the `iconComponent` to render the icon content\n     * externally.\n     *\n     * @type {Node|Boolean}\n     * @public\n     */\n    icon: _propTypes2[\"default\"].oneOfType([_propTypes2[\"default\"].node, _propTypes2[\"default\"].bool]),\n\n    /**\n     * The component used to render the [icon]{@link ui/Button.ButtonBase.icon}.\n     *\n     * This component will receive the `icon` class to customize its styling.\n     * If [icon]{@link ui/Button.ButtonBase.icon} is not assigned or is false, this component\n     * will not be rendered.\n     *\n     * If this is a component rather than an HTML element string, this component will also\n     * receive the `size` and `iconFlip` (as `flip`) properties and should be configured to\n     * handle it.\n     *\n     * @type {Component|Node}\n     * @public\n     */\n    iconComponent: _propTypes[\"default\"].componentOverride,\n\n    /**\n     * Flips the icon.\n     *\n     * @see {@link ui/Icon.Icon#flip}\n     * @type {String}\n     * @public\n     */\n    iconFlip: _propTypes2[\"default\"].string,\n\n    /**\n     * Enforces a minimum width for the component.\n     *\n     * Applies the `minWidth` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default true\n     * @public\n     */\n    minWidth: _propTypes2[\"default\"].bool,\n\n    /**\n     * Indicates the component is depressed.\n     *\n     * Applies the `pressed` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    pressed: _propTypes2[\"default\"].bool,\n\n    /**\n     * Indicates the component is selected.\n     *\n     * Applies the `selected` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    selected: _propTypes2[\"default\"].bool,\n\n    /**\n     * The size of the button.\n     *\n     * Applies the CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {String}\n     * @public\n     */\n    size: _propTypes2[\"default\"].string\n  },\n  defaultProps: {\n    disabled: false,\n    minWidth: true,\n    pressed: false,\n    selected: false\n  },\n  styles: {\n    css: _ButtonModule[\"default\"],\n    className: 'button',\n    publicClassNames: true\n  },\n  computed: {\n    className: function className(_ref) {\n      var icon = _ref.icon,\n          minWidth = _ref.minWidth,\n          pressed = _ref.pressed,\n          selected = _ref.selected,\n          size = _ref.size,\n          styler = _ref.styler;\n      return styler.append({\n        hasIcon: !!icon,\n        minWidth: minWidth,\n        pressed: pressed,\n        selected: selected\n      }, size);\n    },\n    icon: function icon(_ref2) {\n      var css = _ref2.css,\n          _icon = _ref2.icon,\n          iconComponent = _ref2.iconComponent,\n          iconFlip = _ref2.iconFlip,\n          size = _ref2.size;\n      if (_icon == null || _icon === false) return; // Establish the base collection of props for the most basic `iconComponent` type, an\n      // HTML element string.\n\n      var props = {\n        className: css.icon,\n        component: iconComponent\n      }; // Add in additional props that any Component supplied to `iconComponent` should be\n      // configured to handle.\n\n      if (typeof iconComponent !== 'string') {\n        props.size = size; // the following inadvertently triggers a linting rule\n        // eslint-disable-next-line enact/prop-types\n\n        props.flip = iconFlip;\n      }\n\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_ComponentOverride[\"default\"], _objectSpread(_objectSpread({}, props), {}, {\n        children: _icon\n      }));\n    }\n  },\n  render: function render(_ref3) {\n    var children = _ref3.children,\n        componentRef = _ref3.componentRef,\n        css = _ref3.css,\n        decoration = _ref3.decoration,\n        disabled = _ref3.disabled,\n        icon = _ref3.icon,\n        rest = _objectWithoutProperties(_ref3, [\"children\", \"componentRef\", \"css\", \"decoration\", \"disabled\", \"icon\"]);\n\n    delete rest.iconComponent;\n    delete rest.iconFlip;\n    delete rest.minWidth;\n    delete rest.pressed;\n    delete rest.selected;\n    delete rest.size;\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(\"div\", _objectSpread(_objectSpread({\n      role: \"button\"\n    }, rest), {}, {\n      \"aria-disabled\": disabled,\n      disabled: disabled,\n      ref: componentRef,\n      children: [decoration ? /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n        className: css.decoration,\n        children: decoration\n      }) : null, /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n        className: css.bg\n      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)(\"div\", {\n        className: css.client,\n        children: [icon, children]\n      })]\n    }));\n  }\n});\n/**\n * A higher-order component that adds touch support to a [ButtonBase]{@link ui/Button.ButtonBase}.\n *\n * @hoc\n * @memberof ui/Button\n * @mixes ui/Touchable.Touchable\n * @public\n */\n\nexports.ButtonBase = ButtonBase;\nvar ButtonDecorator = (0, _compose[\"default\"])((0, _ForwardRef[\"default\"])({\n  prop: 'componentRef'\n}), (0, _Touchable[\"default\"])({\n  activeProp: 'pressed'\n}));\n/**\n * A minimally-styled button component with touch support.\n *\n * @class Button\n * @memberof ui/Button\n * @extends ui/Button.ButtonBase\n * @mixes ui/Button.ButtonDecorator\n * @omit componentRef\n * @ui\n * @public\n */\n\nexports.ButtonDecorator = ButtonDecorator;\nvar Button = ButtonDecorator(ButtonBase);\nexports.Button = Button;\nvar _default = Button;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}