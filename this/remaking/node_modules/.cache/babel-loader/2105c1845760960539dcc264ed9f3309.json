{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScrollBase = exports.useScroll = exports.constants = exports.assignPropertiesOf = exports[\"default\"] = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _handle = require(\"@enact/core/handle\");\n\nvar _keymap = require(\"@enact/core/keymap\");\n\nvar _platform = require(\"@enact/core/platform\");\n\nvar _Registry = _interopRequireDefault(require(\"@enact/core/internal/Registry\"));\n\nvar _util = require(\"@enact/core/util\");\n\nvar _clamp = _interopRequireDefault(require(\"ramda/src/clamp\"));\n\nvar _react = require(\"react\");\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _ForwardRef = _interopRequireDefault(require(\"../ForwardRef\"));\n\nvar _Resizable = require(\"../Resizable\");\n\nvar _resolution = _interopRequireDefault(require(\"../resolution\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _ScrollAnimator = _interopRequireDefault(require(\"./ScrollAnimator\"));\n\nvar _utilDOM = _interopRequireDefault(require(\"./utilDOM\"));\n\nvar _utilEvent = _interopRequireDefault(require(\"./utilEvent\"));\n\nvar _useScrollModule = _interopRequireDefault(require(\"./useScroll.module.css\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar constants = {\n  animationDuration: 1000,\n  epsilon: 1,\n  flickConfig: {\n    maxDuration: null\n  },\n  isPageDown: (0, _keymap.is)('pageDown'),\n  isPageUp: (0, _keymap.is)('pageUp'),\n  nop: function nop() {},\n  overscrollDefaultRatio: 0.5,\n  overscrollTypeNone: 0,\n  overscrollTypeHold: 1,\n  overscrollTypeOnce: 2,\n  overscrollTypeDone: 9,\n  overscrollVelocityFactor: 300,\n  // scrollMode 'native'\n  paginationPageMultiplier: 0.66,\n  scrollStopWaiting: 200,\n  scrollWheelPageMultiplierForMaxPixel: 0.2 // The ratio of the maximum distance scrolled by wheel to the size of the viewport.\n\n},\n    animationDuration = constants.animationDuration,\n    epsilon = constants.epsilon,\n    flickConfig = constants.flickConfig,\n    isPageDown = constants.isPageDown,\n    isPageUp = constants.isPageUp,\n    overscrollDefaultRatio = constants.overscrollDefaultRatio,\n    overscrollTypeDone = constants.overscrollTypeDone,\n    overscrollTypeHold = constants.overscrollTypeHold,\n    overscrollTypeNone = constants.overscrollTypeNone,\n    overscrollTypeOnce = constants.overscrollTypeOnce,\n    overscrollVelocityFactor = constants.overscrollVelocityFactor,\n    paginationPageMultiplier = constants.paginationPageMultiplier,\n    scrollStopWaiting = constants.scrollStopWaiting,\n    scrollWheelPageMultiplierForMaxPixel = constants.scrollWheelPageMultiplierForMaxPixel;\nexports.constants = constants;\nvar TouchableDiv = (0, _ForwardRef[\"default\"])({\n  prop: 'componentRef'\n}, (0, _Touchable[\"default\"])(function (_ref) {\n  var componentRef = _ref.componentRef,\n      rest = _objectWithoutProperties(_ref, [\"componentRef\"]);\n\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    ref: componentRef\n  }));\n}));\n\nvar useForceUpdate = function useForceUpdate() {\n  return (0, _react.useReducer)(function (x) {\n    return x + 1;\n  }, 0);\n};\n/**\n * A custom hook that passes scrollable behavior information as its render prop.\n *\n * @class\n * @memberof ui/useScroll\n * @ui\n * @private\n */\n\n\nvar useScrollBase = function useScrollBase(props) {\n  var childProps = props.childProps,\n      children = props.children,\n      className = props.className,\n      clientSize = props.clientSize,\n      voiceDisabled = props['data-webos-voice-disabled'],\n      voiceFocused = props['data-webos-voice-focused'],\n      voiceGroupLabel = props['data-webos-voice-group-label'],\n      assignProperties = props.assignProperties,\n      dataSize = props.dataSize,\n      direction = props.direction,\n      horizontalScrollbar = props.horizontalScrollbar,\n      horizontalScrollbarHandle = props.horizontalScrollbarHandle,\n      itemRenderer = props.itemRenderer,\n      itemSize = props.itemSize,\n      itemSizes = props.itemSizes,\n      noScrollByDrag = props.noScrollByDrag,\n      noScrollByWheel = props.noScrollByWheel,\n      overhang = props.overhang,\n      overscrollEffectOn = props.overscrollEffectOn,\n      pageScroll = props.pageScroll,\n      role = props.role,\n      rtl = props.rtl,\n      scrollContainerRef = props.scrollContainerRef,\n      scrollContentHandle = props.scrollContentHandle,\n      scrollContentRef = props.scrollContentRef,\n      scrollMode = props.scrollMode,\n      setScrollContainerHandle = props.setScrollContainerHandle,\n      snapToCenter = props.snapToCenter,\n      spacing = props.spacing,\n      spotlightContainerDisabled = props.spotlightContainerDisabled,\n      verticalScrollbar = props.verticalScrollbar,\n      verticalScrollbarHandle = props.verticalScrollbarHandle,\n      wrap = props.wrap,\n      rest = _objectWithoutProperties(props, [\"childProps\", \"children\", \"className\", \"clientSize\", \"data-webos-voice-disabled\", \"data-webos-voice-focused\", \"data-webos-voice-group-label\", \"assignProperties\", \"dataSize\", \"direction\", \"horizontalScrollbar\", \"horizontalScrollbarHandle\", \"itemRenderer\", \"itemSize\", \"itemSizes\", \"noScrollByDrag\", \"noScrollByWheel\", \"overhang\", \"overscrollEffectOn\", \"pageScroll\", \"role\", \"rtl\", \"scrollContainerRef\", \"scrollContentHandle\", \"scrollContentRef\", \"scrollMode\", \"setScrollContainerHandle\", \"snapToCenter\", \"spacing\", \"spotlightContainerDisabled\", \"verticalScrollbar\", \"verticalScrollbarHandle\", \"wrap\"]),\n      scrollClasses = (0, _classnames[\"default\"])(_useScrollModule[\"default\"].scroll, className); // The following props are the one having the same naming function in this scope.\n  // So it is better to use props[propName]\n  // instead of extracting it from the `props` and renaming it\n\n\n  delete rest.addEventListeners;\n  delete rest.applyOverscrollEffect;\n  delete rest.cbScrollTo;\n  delete rest.clearOverscrollEffect;\n  delete rest.handleResizeWindow;\n  delete rest.onFlick;\n  delete rest.onKeyDown;\n  delete rest.onMouseDown;\n  delete rest.onScroll;\n  delete rest.onScrollStart;\n  delete rest.onScrollStop;\n  delete rest.onWheel;\n  delete rest.removeEventListeners;\n  delete rest.scrollStopOnScroll; // scrollMode 'native'\n\n  delete rest.scrollTo;\n  delete rest.start; // scrollMode 'native'\n\n  delete rest.stop; // scrollMode 'translate'\n  // Mutable value and Hooks\n\n  var _useForceUpdate = useForceUpdate(),\n      _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),\n      forceUpdate = _useForceUpdate2[1];\n\n  var context = (0, _react.useContext)(_Resizable.ResizeContext);\n\n  var _useState = (0, _react.useState)(horizontalScrollbar === 'visible'),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHorizontalScrollbarVisible = _useState2[0],\n      setIsHorizontalScrollbarVisible = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(verticalScrollbar === 'visible'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isVerticalScrollbarVisible = _useState4[0],\n      setIsVerticalScrollbarVisible = _useState4[1];\n\n  var mutableRef = (0, _react.useRef)({\n    overscrollEnabled: !!props.applyOverscrollEffect,\n    // Enable the early bail out of repeated scrolling to the same position\n    animationInfo: null,\n    resizeRegistry: null,\n    // constants\n    pixelPerLine: 39,\n    scrollWheelMultiplierForDeltaPixel: 1.5,\n    // The ratio of wheel 'delta' units to pixels scrolled.\n    // status\n    deferScrollTo: true,\n    isScrollAnimationTargetAccumulated: false,\n    // overscroll\n    lastInputType: null,\n    overscrollStatus: {\n      horizontal: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      },\n      vertical: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      }\n    },\n    // bounds info\n    bounds: {\n      clientWidth: 0,\n      clientHeight: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      maxTop: 0,\n      maxLeft: 0\n    },\n    // wheel/drag/flick info\n    wheelDirection: 0,\n    isDragging: false,\n    isTouching: false,\n    // scrollMode 'native'\n    // scroll info\n    scrolling: false,\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollToInfo: null,\n    // scroll animator\n    animator: null,\n    // scroll status observer\n    observerOnScroll: [],\n    // non-declared-variable.\n    accumulatedTargetX: null,\n    accumulatedTargetY: null,\n    flickTarget: null,\n    dragStartX: null,\n    dragStartY: null,\n    scrollStopJob: null,\n    prevState: {\n      isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n      isVerticalScrollbarVisible: isVerticalScrollbarVisible\n    }\n  });\n\n  if (mutableRef.current.animator == null) {\n    mutableRef.current.animator = new _ScrollAnimator[\"default\"]();\n  }\n\n  (0, _react.useLayoutEffect)(function () {\n    if (setScrollContainerHandle) {\n      setScrollContainerHandle({\n        animator: mutableRef.current.animator,\n        applyOverscrollEffect: applyOverscrollEffect,\n        bounds: mutableRef.current.bounds,\n        calculateDistanceByWheel: calculateDistanceByWheel,\n        canScrollHorizontally: canScrollHorizontally,\n        canScrollVertically: canScrollVertically,\n        checkAndApplyOverscrollEffect: checkAndApplyOverscrollEffect,\n        getScrollBounds: getScrollBounds,\n\n        get isDragging() {\n          return mutableRef.current.isDragging;\n        },\n\n        set isDragging(val) {\n          mutableRef.current.isDragging = val;\n        },\n\n        get isScrollAnimationTargetAccumulated() {\n          return mutableRef.current.isScrollAnimationTargetAccumulated;\n        },\n\n        set isScrollAnimationTargetAccumulated(val) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = val;\n        },\n\n        get lastInputType() {\n          return mutableRef.current.lastInputType;\n        },\n\n        set lastInputType(val) {\n          mutableRef.current.lastInputType = val;\n        },\n\n        get rtl() {\n          return rtl;\n        },\n\n        get scrollBounds() {\n          return getScrollBounds();\n        },\n\n        get scrollHeight() {\n          return mutableRef.current.bounds.scrollHeight;\n        },\n\n        get scrolling() {\n          return mutableRef.current.scrolling;\n        },\n\n        get scrollLeft() {\n          return mutableRef.current.scrollLeft;\n        },\n\n        scrollTo: scrollTo,\n        scrollToAccumulatedTarget: scrollToAccumulatedTarget,\n\n        get scrollToInfo() {\n          return mutableRef.current.scrollToInfo;\n        },\n\n        get scrollTop() {\n          return mutableRef.current.scrollTop;\n        },\n\n        setOverscrollStatus: setOverscrollStatus,\n        showScrollbarTrack: showScrollbarTrack,\n        start: start,\n        startHidingScrollbarTrack: startHidingScrollbarTrack,\n        stop: stop,\n\n        get wheelDirection() {\n          return mutableRef.current.wheelDirection;\n        },\n\n        set wheelDirection(val) {\n          mutableRef.current.wheelDirection = val;\n        }\n\n      });\n    }\n  });\n  (0, _react.useLayoutEffect)(function () {\n    if (props.cbScrollTo) {\n      props.cbScrollTo(scrollTo);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    var containerRef = scrollContainerRef.current;\n\n    if (!containerRef) {\n      return;\n    }\n\n    if (typeof ResizeObserver === 'function') {\n      var resizeObserver = new ResizeObserver(function () {\n        if (scrollContentHandle.current && scrollContentHandle.current.syncClientSize) {\n          scrollContentHandle.current.syncClientSize();\n        }\n      });\n      resizeObserver.observe(containerRef);\n      return function () {\n        if (resizeObserver) {\n          resizeObserver.disconnect();\n          resizeObserver = null;\n        }\n      };\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    mutableRef.current.resizeRegistry.parent = context; // componentWillUnmount\n\n    return function () {\n      var _mutableRef$current = mutableRef.current,\n          animator = _mutableRef$current.animator,\n          resizeRegistry = _mutableRef$current.resizeRegistry,\n          scrolling = _mutableRef$current.scrolling,\n          scrollStopJob = _mutableRef$current.scrollStopJob; // eslint-disable-line react-hooks/exhaustive-deps\n\n      resizeRegistry.parent = null; // Before call cancelAnimationFrame, you must send scrollStop Event.\n\n      if (scrolling) {\n        forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n      }\n\n      scrollStopJob.stop(); // scrollMode 'translate' [\n\n      if (animator.isAnimating()) {\n        animator.stop();\n      } // scrollMode 'translate' ]\n\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useEffect)(function () {\n    addEventListeners();\n    return function () {\n      removeEventListeners();\n    };\n  }); // scrollMode 'translate' [[\n  // TODO: consider replacing forceUpdate() by storing bounds in state rather than a non-\n  // state member.\n\n  var enqueueForceUpdate = (0, _react.useCallback)(function () {\n    scrollContentHandle.current.calculateMetrics(scrollContentHandle.current.props);\n    forceUpdate();\n  }, [forceUpdate, scrollContentHandle]);\n\n  function handleResizeWindow() {\n    var propsHandleResizeWindow = props.handleResizeWindow; // `handleSize` in `ui/resolution.ResolutionDecorator` should be executed first.\n\n    setTimeout(function () {\n      if (propsHandleResizeWindow) {\n        propsHandleResizeWindow();\n      }\n\n      if (scrollMode === 'translate') {\n        scrollTo({\n          position: {\n            x: 0,\n            y: 0\n          },\n          animate: false\n        });\n      } else {\n        scrollContentRef.current.style.scrollBehavior = null;\n        scrollContentHandle.current.scrollToPosition(0, 0);\n        scrollContentRef.current.style.scrollBehavior = 'smooth';\n      }\n\n      enqueueForceUpdate();\n    });\n  }\n\n  var handleResize = (0, _react.useCallback)(function (ev) {\n    if (ev.action === 'invalidateBounds') {\n      enqueueForceUpdate();\n    }\n  }, [enqueueForceUpdate]); // scrollMode 'translate' ]]\n\n  if (mutableRef.current.resizeRegistry == null) {\n    mutableRef.current.resizeRegistry = _Registry[\"default\"].create(handleResize);\n  }\n\n  (0, _react.useLayoutEffect)(function () {\n    var ref = mutableRef.current;\n\n    if (scrollMode === 'translate') {\n      ref.scrollStopJob = new _util.Job(doScrollStop, scrollStopWaiting);\n    } else {\n      ref.scrollStopJob = new _util.Job(scrollStopOnScroll, scrollStopWaiting);\n    }\n\n    return function () {\n      if (ref.scrolling) {\n        ref.scrollStopJob.run();\n      }\n\n      ref.scrollStopJob.stop();\n    };\n  }, [direction, isHorizontalScrollbarVisible, isVerticalScrollbarVisible, rtl, scrollMode, spotlightContainerDisabled]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useEffect)(function () {\n    var hasDataSizeChanged = scrollContentHandle.current.hasDataSizeChanged,\n        _mutableRef$current2 = mutableRef.current,\n        prevState = _mutableRef$current2.prevState,\n        resizeRegistry = _mutableRef$current2.resizeRegistry,\n        scrollToInfo = _mutableRef$current2.scrollToInfo; // Need to sync calculated client size if it is different from the real size\n\n    if (scrollContentHandle.current.syncClientSize) {\n      // If we actually synced, we need to reset scroll position.\n      if (scrollContentHandle.current.syncClientSize()) {\n        setScrollLeft(0);\n        setScrollTop(0);\n      }\n    }\n\n    clampScrollPosition(); // scrollMode 'translate'\n\n    if (hasDataSizeChanged === false && (isHorizontalScrollbarVisible && !prevState.isHorizontalScrollbarVisible || isVerticalScrollbarVisible && !prevState.isVerticalScrollbarVisible)) {\n      mutableRef.current.deferScrollTo = false;\n      updateScrollbarTrackSize();\n    } else {\n      updateScrollbars();\n    }\n\n    if (scrollToInfo !== null) {\n      if (!mutableRef.current.deferScrollTo) {\n        scrollTo(scrollToInfo);\n      }\n    } // publish container resize changes\n\n\n    var horizontal = isHorizontalScrollbarVisible !== prevState.isHorizontalScrollbarVisible;\n    var vertical = isVerticalScrollbarVisible !== prevState.isVerticalScrollbarVisible;\n\n    if (horizontal || vertical) {\n      resizeRegistry.notify({});\n    }\n  }); // scrollMode 'translate' [[\n\n  function clampScrollPosition() {\n    var bounds = getScrollBounds();\n\n    if (mutableRef.current.scrollTop > bounds.maxTop) {\n      mutableRef.current.scrollTop = bounds.maxTop;\n    }\n\n    if (mutableRef.current.scrollLeft > bounds.maxLeft) {\n      mutableRef.current.scrollLeft = bounds.maxLeft;\n    }\n  } // scrollMode 'translate' ]]\n  // drag/flick event handlers\n\n\n  function getRtlX(x) {\n    return rtl ? -x : x;\n  }\n\n  function onMouseDown(ev) {\n    if (snapToCenter) {\n      ev.preventDefault();\n    }\n\n    if ((0, _handle.forwardWithPrevent)('onMouseDown', ev, props) && !snapToCenter) {\n      stop();\n    }\n  } // scrollMode 'native' [[\n\n\n  function onTouchStart() {\n    mutableRef.current.isTouching = true;\n  } // scrollMode 'native' ]]\n\n\n  function onDragStart(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'dragstart') return;\n      (0, _handle.forward)('onDragStart', ev, props);\n      stop();\n      mutableRef.current.isDragging = true;\n      mutableRef.current.dragStartX = mutableRef.current.scrollLeft + getRtlX(ev.x);\n      mutableRef.current.dragStartY = mutableRef.current.scrollTop + ev.y;\n    } else {\n      if (!mutableRef.current.isTouching) {\n        stop();\n        mutableRef.current.isDragging = true;\n      } // these values are used also for touch inputs\n\n\n      mutableRef.current.dragStartX = mutableRef.current.scrollLeft + getRtlX(ev.x);\n      mutableRef.current.dragStartY = mutableRef.current.scrollTop + ev.y;\n    }\n  }\n\n  function onDrag(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'drag') {\n        return;\n      }\n\n      mutableRef.current.lastInputType = 'drag';\n      (0, _handle.forward)('onDrag', ev, props);\n      start({\n        targetX: direction === 'vertical' ? 0 : mutableRef.current.dragStartX - getRtlX(ev.x),\n        // 'horizontal' or 'both'\n        targetY: direction === 'horizontal' ? 0 : mutableRef.current.dragStartY - ev.y,\n        // 'vertical' or 'both'\n        animate: false,\n        overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n      });\n    } else {\n      var targetX = direction === 'vertical' ? 0 : mutableRef.current.dragStartX - getRtlX(ev.x),\n          // 'horizontal' or 'both'\n      targetY = direction === 'horizontal' ? 0 : mutableRef.current.dragStartY - ev.y; // 'vertical' or 'both'\n\n      mutableRef.current.lastInputType = 'drag';\n\n      if (!mutableRef.current.isTouching) {\n        start({\n          targetX: targetX,\n          targetY: targetY,\n          animate: false,\n          overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n        });\n      } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n        checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollTypeHold);\n      }\n    }\n  }\n\n  function onDragEnd(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'dragend') {\n        return;\n      }\n\n      mutableRef.current.isDragging = false;\n      (0, _handle.forward)('onDragEnd', ev, props);\n\n      if (mutableRef.current.flickTarget) {\n        var _mutableRef$current$f = mutableRef.current.flickTarget,\n            targetX = _mutableRef$current$f.targetX,\n            targetY = _mutableRef$current$f.targetY,\n            duration = _mutableRef$current$f.duration;\n        mutableRef.current.lastInputType = 'drag';\n        mutableRef.current.isScrollAnimationTargetAccumulated = false;\n        start({\n          targetX: targetX,\n          targetY: targetY,\n          duration: duration,\n          overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n        });\n      } else {\n        stop();\n      }\n\n      if (mutableRef.current.overscrollEnabled) {\n        // not check overscrollEffectOn && overscrollEffectOn.drag for safety\n        clearAllOverscrollEffects();\n      }\n\n      mutableRef.current.flickTarget = null;\n    } else {\n      mutableRef.current.isDragging = false;\n      mutableRef.current.lastInputType = 'drag';\n\n      if (mutableRef.current.flickTarget) {\n        var _mutableRef$current$f2 = mutableRef.current.flickTarget,\n            _targetX = _mutableRef$current$f2.targetX,\n            _targetY = _mutableRef$current$f2.targetY;\n\n        if (!mutableRef.current.isTouching) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = false;\n          start({\n            targetX: _targetX,\n            targetY: _targetY,\n            overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n          });\n        } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n          checkAndApplyOverscrollEffectOnDrag(_targetX, _targetY, overscrollTypeOnce);\n        }\n      } else if (!mutableRef.current.isTouching) {\n        stop();\n      }\n\n      if (mutableRef.current.overscrollEnabled) {\n        // not check overscrollEffectOn && overscrollEffectOn.drag for safety\n        clearAllOverscrollEffects();\n      }\n\n      mutableRef.current.isTouching = false;\n      mutableRef.current.flickTarget = null;\n    }\n  }\n\n  function onFlick(ev) {\n    var isVerticalFlick = ev.direction === 'vertical';\n\n    if (scrollMode === 'translate' || !mutableRef.current.isTouching) {\n      // except touch input in 'native' mode\n      mutableRef.current.flickTarget = mutableRef.current.animator.simulate(mutableRef.current.scrollLeft, mutableRef.current.scrollTop, direction !== 'vertical' && !isVerticalFlick ? getRtlX(-ev.velocityX) : 0, direction !== 'horizontal' && isVerticalFlick ? -ev.velocityY : 0);\n    } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n      // overscroll is required on touch input in 'native' mode\n      mutableRef.current.flickTarget = {\n        targetX: mutableRef.current.scrollLeft + (!isVerticalFlick ? getRtlX(-ev.velocityX) : 0) * overscrollVelocityFactor,\n        // 'horizontal' or 'both'\n        targetY: mutableRef.current.scrollTop + (isVerticalFlick ? -ev.velocityY : 0) * overscrollVelocityFactor // 'vertical' or 'both'\n\n      };\n    }\n\n    if (props.onFlick) {\n      (0, _handle.forward)('onFlick', ev, props);\n    }\n  }\n\n  function calculateDistanceByWheel(deltaMode, delta, maxPixel) {\n    if (deltaMode === 0) {\n      delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * mutableRef.current.scrollWheelMultiplierForDeltaPixel));\n    } else if (deltaMode === 1) {\n      // line; firefox\n      delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * mutableRef.current.pixelPerLine * mutableRef.current.scrollWheelMultiplierForDeltaPixel));\n    } else if (deltaMode === 2) {\n      // page\n      delta = delta < 0 ? -maxPixel : maxPixel;\n    }\n\n    return delta;\n  }\n  /*\n   * wheel event handler;\n   * - for horizontal scroll, supports wheel action on any children nodes since web engine cannot support this\n   * - for vertical scroll, supports wheel action on scrollbars only\n   */\n\n\n  function onWheel(ev) {\n    if (mutableRef.current.isDragging) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else {\n      var bounds = getScrollBounds(),\n          canScrollH = canScrollHorizontally(bounds),\n          canScrollV = canScrollVertically(bounds),\n          eventDeltaMode = ev.deltaMode,\n          eventDelta = -ev.wheelDeltaY || ev.deltaY;\n      var delta = 0;\n      mutableRef.current.lastInputType = 'wheel';\n\n      if (noScrollByWheel) {\n        if (scrollMode === 'native' && canScrollV) {\n          ev.preventDefault();\n        }\n\n        return;\n      }\n\n      if (snapToCenter) {\n        if (scrollMode === 'native' && (canScrollV || canScrollH)) {\n          ev.preventDefault();\n          (0, _handle.forward)('onWheel', ev, props);\n          return;\n        }\n      }\n\n      if (scrollMode === 'translate') {\n        if (canScrollV) {\n          delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n        } else if (canScrollH) {\n          delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n        }\n\n        var dir = Math.sign(delta);\n\n        if (dir !== mutableRef.current.wheelDirection) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = false;\n          mutableRef.current.wheelDirection = dir;\n        }\n\n        (0, _handle.forward)('onWheel', {\n          delta: delta,\n          horizontalScrollbarHandle: horizontalScrollbarHandle,\n          verticalScrollbarHandle: verticalScrollbarHandle\n        }, props);\n\n        if (delta !== 0) {\n          scrollToAccumulatedTarget(delta, canScrollV, overscrollEffectOn && overscrollEffectOn.wheel);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      } else {\n        // scrollMode 'native'\n        var overscrollEffectRequired = mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.wheel;\n        var needToHideScrollbarTrack = false;\n\n        if (props.onWheel) {\n          (0, _handle.forward)('onWheel', ev, props);\n          return;\n        }\n\n        showScrollbarTrack(bounds); // FIXME This routine is a temporary support for horizontal wheel scroll.\n        // FIXME If web engine supports horizontal wheel, this routine should be refined or removed.\n\n        if (canScrollV) {\n          // This routine handles wheel events on scrollbars for vertical scroll.\n          if (eventDelta < 0 && mutableRef.current.scrollTop > 0 || eventDelta > 0 && mutableRef.current.scrollTop < bounds.maxTop) {\n            // Not to check if ev.target is a descendant of a wrapped component which may have a lot of nodes in it.\n            if (horizontalScrollbarHandle.current && horizontalScrollbarHandle.current.getContainerRef && _utilDOM[\"default\"].containsDangerously(horizontalScrollbarHandle.current.getContainerRef(), ev.target) || verticalScrollbarHandle.current && verticalScrollbarHandle.current.getContainerRef && _utilDOM[\"default\"].containsDangerously(verticalScrollbarHandle.current.getContainerRef(), ev.target)) {\n              delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n              needToHideScrollbarTrack = !delta;\n              ev.preventDefault();\n            } else if (overscrollEffectRequired) {\n              checkAndApplyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n\n            ev.stopPropagation();\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && mutableRef.current.scrollTop <= 0 || eventDelta > 0 && mutableRef.current.scrollTop >= bounds.maxTop)) {\n              applyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n\n            needToHideScrollbarTrack = true;\n          }\n        } else if (canScrollH) {\n          // this routine handles wheel events on any children for horizontal scroll.\n          if (eventDelta < 0 && mutableRef.current.scrollLeft > 0 || eventDelta > 0 && mutableRef.current.scrollLeft < bounds.maxLeft) {\n            delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n            needToHideScrollbarTrack = !delta;\n            ev.preventDefault();\n            ev.stopPropagation();\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && mutableRef.current.scrollLeft <= 0 || eventDelta > 0 && mutableRef.current.scrollLeft >= bounds.maxLeft)) {\n              applyOverscrollEffect('horizontal', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n\n            needToHideScrollbarTrack = true;\n          }\n        }\n\n        if (delta !== 0) {\n          var _dir = Math.sign(delta); // Not to accumulate scroll position if wheel direction is different from hold direction\n\n\n          if (_dir !== mutableRef.current.wheelDirection) {\n            mutableRef.current.isScrollAnimationTargetAccumulated = false;\n            mutableRef.current.wheelDirection = _dir;\n          }\n\n          scrollToAccumulatedTarget(delta, canScrollV, overscrollEffectOn && overscrollEffectOn.wheel);\n        }\n\n        if (needToHideScrollbarTrack) {\n          startHidingScrollbarTrack();\n        }\n      }\n    }\n  } // scrollMode 'translate' [[\n\n\n  function scrollByPage(keyCode) {\n    var bounds = getScrollBounds(),\n        canScrollV = canScrollVertically(bounds),\n        pageDistance = (isPageUp(keyCode) ? -1 : 1) * (canScrollV ? bounds.clientHeight : bounds.clientWidth) * paginationPageMultiplier;\n    mutableRef.current.lastInputType = 'pageKey';\n    scrollToAccumulatedTarget(pageDistance, canScrollV, overscrollEffectOn && overscrollEffectOn.pageKey);\n  } // scrollMode 'translate' ]]\n  // scrollMode 'native' [[\n\n\n  function onScroll(ev) {\n    var _ev$target = ev.target,\n        scrollLeft = _ev$target.scrollLeft,\n        scrollTop = _ev$target.scrollTop;\n    var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds);\n\n    if (!mutableRef.current.scrolling) {\n      scrollStartOnScroll();\n    }\n\n    if (rtl && canScrollH) {\n      scrollLeft = _platform.platform.ios || _platform.platform.safari || _platform.platform.chrome >= 85 ? -scrollLeft : bounds.maxLeft - scrollLeft;\n    }\n\n    if (scrollLeft !== mutableRef.current.scrollLeft) {\n      setScrollLeft(scrollLeft);\n    }\n\n    if (scrollTop !== mutableRef.current.scrollTop) {\n      setScrollTop(scrollTop);\n    }\n\n    if (scrollContentHandle.current.didScroll) {\n      scrollContentHandle.current.didScroll(mutableRef.current.scrollLeft, mutableRef.current.scrollTop);\n    }\n\n    forwardScrollEvent('onScroll');\n    mutableRef.current.scrollStopJob.start();\n  } // scrollMode 'native' ]]\n\n\n  function onKeyDown(ev) {\n    if (scrollMode === 'translate') {\n      if (props.onKeyDown) {\n        (0, _handle.forward)('onKeyDown', ev, props);\n      } else if (isPageUp(ev.keyCode) || isPageDown(ev.keyCode)) {\n        scrollByPage(ev.keyCode);\n      }\n    } else {\n      (0, _handle.forward)('onKeyDown', ev, props);\n    }\n  }\n\n  function scrollToAccumulatedTarget(delta, vertical, overscrollEffect) {\n    if (!mutableRef.current.isScrollAnimationTargetAccumulated) {\n      mutableRef.current.accumulatedTargetX = mutableRef.current.scrollLeft;\n      mutableRef.current.accumulatedTargetY = mutableRef.current.scrollTop;\n      mutableRef.current.isScrollAnimationTargetAccumulated = true;\n    }\n\n    if (vertical) {\n      mutableRef.current.accumulatedTargetY += delta;\n    } else {\n      mutableRef.current.accumulatedTargetX += delta;\n    }\n\n    start({\n      targetX: mutableRef.current.accumulatedTargetX,\n      targetY: mutableRef.current.accumulatedTargetY,\n      overscrollEffect: overscrollEffect\n    });\n  } // overscroll effect\n\n\n  function getEdgeFromPosition(position, maxPosition) {\n    if (position <= 0) {\n      return 'before';\n    } else if (position >= maxPosition - epsilon) {\n      return 'after';\n    } else {\n      return null;\n    }\n  }\n\n  function setOverscrollStatus(orientation, edge, overscrollEffectType, ratio) {\n    var status = mutableRef.current.overscrollStatus[orientation][edge];\n    status.type = overscrollEffectType;\n    status.ratio = ratio;\n  }\n\n  function getOverscrollStatus(orientation, edge) {\n    return mutableRef.current.overscrollStatus[orientation][edge];\n  }\n\n  function calculateOverscrollRatio(orientation, position) {\n    var bounds = getScrollBounds(),\n        isVertical = orientation === 'vertical',\n        baseSize = isVertical ? bounds.clientHeight : bounds.clientWidth,\n        maxPos = bounds[isVertical ? 'maxTop' : 'maxLeft'];\n    var overDistance = 0;\n\n    if (position < 0) {\n      overDistance = -position;\n    } else if (position > maxPos) {\n      overDistance = position - maxPos;\n    } else {\n      return 0;\n    }\n\n    return Math.min(1, 2 * overDistance / baseSize);\n  }\n\n  function applyOverscrollEffect(orientation, edge, overscrollEffectType) {\n    var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : overscrollDefaultRatio;\n    props.applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n    setOverscrollStatus(orientation, edge, overscrollEffectType === overscrollTypeOnce ? overscrollTypeDone : overscrollEffectType, ratio);\n  }\n\n  function checkAndApplyOverscrollEffect(orientation, edge, overscrollEffectType) {\n    var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : overscrollDefaultRatio;\n    var isVertical = orientation === 'vertical',\n        curPos = isVertical ? mutableRef.current.scrollTop : mutableRef.current.scrollLeft,\n        maxPos = getScrollBounds()[isVertical ? 'maxTop' : 'maxLeft'];\n\n    if (edge === 'before' && curPos <= 0 || edge === 'after' && curPos >= maxPos - epsilon) {\n      // Already on the edge\n      applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n    } else {\n      setOverscrollStatus(orientation, edge, overscrollEffectType, ratio);\n    }\n  }\n\n  function clearOverscrollEffect(orientation, edge) {\n    if (getOverscrollStatus(orientation, edge).type !== overscrollTypeNone) {\n      if (props.clearOverscrollEffect) {\n        props.clearOverscrollEffect(orientation, edge);\n      } else {\n        applyOverscrollEffect(orientation, edge, overscrollTypeNone, 0);\n      }\n    }\n  }\n\n  function clearAllOverscrollEffects() {\n    ['horizontal', 'vertical'].forEach(function (orientation) {\n      ['before', 'after'].forEach(function (edge) {\n        clearOverscrollEffect(orientation, edge);\n      });\n    });\n  }\n\n  function applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollEffectType) {\n    if (edge) {\n      var oppositeEdge = edge === 'before' ? 'after' : 'before',\n          ratio = calculateOverscrollRatio(orientation, targetPosition);\n      applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n      clearOverscrollEffect(orientation, oppositeEdge);\n    } else {\n      clearOverscrollEffect(orientation, 'before');\n      clearOverscrollEffect(orientation, 'after');\n    }\n  } // scrollMode 'native' [[\n\n\n  function checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollEffectType) {\n    var bounds = getScrollBounds();\n\n    if (canScrollHorizontally(bounds)) {\n      applyOverscrollEffectOnDrag('horizontal', getEdgeFromPosition(targetX, bounds.maxLeft), targetX, overscrollEffectType);\n    }\n\n    if (canScrollVertically(bounds)) {\n      applyOverscrollEffectOnDrag('vertical', getEdgeFromPosition(targetY, bounds.maxTop), targetY, overscrollEffectType);\n    }\n  } // scrollMode 'native' ]]\n\n\n  function checkAndApplyOverscrollEffectOnScroll(orientation) {\n    ['before', 'after'].forEach(function (edge) {\n      var _getOverscrollStatus = getOverscrollStatus(orientation, edge),\n          ratio = _getOverscrollStatus.ratio,\n          overscrollEffectType = _getOverscrollStatus.type;\n\n      if (overscrollEffectType === overscrollTypeOnce) {\n        checkAndApplyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n      }\n    });\n  }\n\n  function checkAndApplyOverscrollEffectOnStart(orientation, edge, targetPosition) {\n    if (mutableRef.current.isDragging) {\n      applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollTypeHold);\n    } else if (edge) {\n      checkAndApplyOverscrollEffect(orientation, edge, overscrollTypeOnce);\n    }\n  } // call scroll callbacks\n\n\n  var addObserverOnScroll = (0, _react.useCallback)(function (fn) {\n    var observerOnScroll = mutableRef.current.observerOnScroll;\n\n    if (typeof fn === 'function' && !observerOnScroll.includes(fn)) {\n      observerOnScroll.push(fn);\n    }\n  }, []);\n  var removeObserverOnScroll = (0, _react.useCallback)(function (fn) {\n    var observerOnScroll = mutableRef.current.observerOnScroll;\n    var index = observerOnScroll.indexOf(fn);\n\n    if (index !== -1) {\n      observerOnScroll.splice(index, 1);\n    }\n  }, []);\n\n  function forwardScrollEvent(type, reachedEdgeInfo) {\n    var data = {\n      scrollLeft: mutableRef.current.scrollLeft,\n      scrollTop: mutableRef.current.scrollTop,\n      moreInfo: getMoreInfo(),\n      reachedEdgeInfo: reachedEdgeInfo\n    };\n    (0, _handle.forward)(type, data, props);\n\n    if (type === 'onScroll') {\n      mutableRef.current.observerOnScroll.forEach(function (fn) {\n        return fn(data);\n      });\n    }\n  } // scrollMode 'native' [[\n  // call scroll callbacks and update scrollbars for native scroll\n\n\n  function scrollStartOnScroll() {\n    mutableRef.current.scrolling = true;\n    showScrollbarTrack(getScrollBounds());\n    forwardScrollEvent('onScrollStart');\n  }\n\n  function scrollStopOnScroll() {\n    if (props.scrollStopOnScroll) {\n      props.scrollStopOnScroll();\n    }\n\n    if (mutableRef.current.overscrollEnabled && !mutableRef.current.isDragging) {\n      // not check overscrollEffectOn && overscrollEffectOn for safety\n      clearAllOverscrollEffects();\n    }\n\n    mutableRef.current.lastInputType = null;\n    mutableRef.current.isScrollAnimationTargetAccumulated = false;\n    mutableRef.current.scrolling = false;\n    forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n    startHidingScrollbarTrack();\n  } // scrollMode 'native' ]]\n  // update scroll position\n\n\n  function setScrollLeft(value) {\n    var bounds = getScrollBounds();\n    mutableRef.current.scrollLeft = (0, _clamp[\"default\"])(0, bounds.maxLeft, value);\n\n    if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn[mutableRef.current.lastInputType]) {\n      checkAndApplyOverscrollEffectOnScroll('horizontal');\n    }\n\n    if (isHorizontalScrollbarVisible) {\n      updateScrollbarTrack(horizontalScrollbarHandle, bounds);\n    }\n  }\n\n  function setScrollTop(value) {\n    var bounds = getScrollBounds();\n    mutableRef.current.scrollTop = (0, _clamp[\"default\"])(0, bounds.maxTop, value);\n\n    if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn[mutableRef.current.lastInputType]) {\n      checkAndApplyOverscrollEffectOnScroll('vertical');\n    }\n\n    if (isVerticalScrollbarVisible) {\n      updateScrollbarTrack(verticalScrollbarHandle, bounds);\n    }\n  }\n\n  function getReachedEdgeInfo() {\n    var bounds = getScrollBounds(),\n        reachedEdgeInfo = {\n      bottom: false,\n      left: false,\n      right: false,\n      top: false\n    };\n\n    if (canScrollHorizontally(bounds)) {\n      var edge = getEdgeFromPosition(mutableRef.current.scrollLeft, bounds.maxLeft);\n\n      if (edge) {\n        // if edge is null, no need to check which edge is reached.\n        if (edge === 'before' && !rtl || edge === 'after' && rtl) {\n          reachedEdgeInfo.left = true;\n        } else {\n          reachedEdgeInfo.right = true;\n        }\n      }\n    }\n\n    if (canScrollVertically(bounds)) {\n      var _edge = getEdgeFromPosition(mutableRef.current.scrollTop, bounds.maxTop);\n\n      if (_edge === 'before') {\n        reachedEdgeInfo.top = true;\n      } else if (_edge === 'after') {\n        reachedEdgeInfo.bottom = true;\n      }\n    }\n\n    return reachedEdgeInfo;\n  } // scroll start/stop\n  // scrollMode 'translate' [[\n\n\n  function doScrollStop() {\n    mutableRef.current.scrolling = false;\n    forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n  } // scrollMode 'translate' ]]\n\n\n  function start(_ref2) {\n    var targetX = _ref2.targetX,\n        targetY = _ref2.targetY,\n        _ref2$animate = _ref2.animate,\n        animate = _ref2$animate === void 0 ? true : _ref2$animate,\n        _ref2$duration = _ref2.duration,\n        duration = _ref2$duration === void 0 ? animationDuration : _ref2$duration,\n        _ref2$overscrollEffec = _ref2.overscrollEffect,\n        overscrollEffect = _ref2$overscrollEffec === void 0 ? false : _ref2$overscrollEffec;\n    var _mutableRef$current3 = mutableRef.current,\n        scrollLeft = _mutableRef$current3.scrollLeft,\n        scrollTop = _mutableRef$current3.scrollTop,\n        bounds = getScrollBounds(),\n        maxLeft = bounds.maxLeft,\n        maxTop = bounds.maxTop;\n    var updatedAnimationInfo = scrollMode === 'translate' ? {\n      sourceX: scrollLeft,\n      sourceY: scrollTop,\n      targetX: targetX,\n      targetY: targetY,\n      duration: duration\n    } : {\n      targetX: targetX,\n      targetY: targetY\n    }; // bail early when scrolling to the same position\n\n    if ((scrollMode === 'translate' && mutableRef.current.animator.isAnimating() || scrollMode === 'native' && mutableRef.current.scrolling) && mutableRef.current.animationInfo && mutableRef.current.animationInfo.targetX === targetX && mutableRef.current.animationInfo.targetY === targetY) {\n      return;\n    }\n\n    mutableRef.current.animationInfo = updatedAnimationInfo;\n\n    if (scrollMode === 'translate') {\n      mutableRef.current.animator.stop();\n\n      if (!mutableRef.current.scrolling) {\n        mutableRef.current.scrolling = true;\n        forwardScrollEvent('onScrollStart');\n      }\n\n      mutableRef.current.scrollStopJob.stop();\n    }\n\n    if (Math.abs(maxLeft - targetX) < epsilon) {\n      targetX = maxLeft;\n    }\n\n    if (Math.abs(maxTop - targetY) < epsilon) {\n      targetY = maxTop;\n    }\n\n    if (mutableRef.current.overscrollEnabled && overscrollEffect) {\n      if (scrollLeft !== targetX && canScrollHorizontally(bounds)) {\n        checkAndApplyOverscrollEffectOnStart('horizontal', getEdgeFromPosition(targetX, maxLeft), targetX);\n      }\n\n      if (scrollTop !== targetY && canScrollVertically(bounds)) {\n        checkAndApplyOverscrollEffectOnStart('vertical', getEdgeFromPosition(targetY, maxTop), targetY);\n      }\n    }\n\n    if (scrollMode === 'translate') {\n      showScrollbarTrack(bounds);\n\n      if (scrollContentHandle.current && scrollContentHandle.current.setScrollPositionTarget) {\n        scrollContentHandle.current.setScrollPositionTarget(targetX, targetY);\n      }\n\n      if (animate) {\n        mutableRef.current.animator.animate(scrollAnimation(mutableRef.current.animationInfo));\n      } else {\n        scroll(targetX, targetY);\n        stop();\n      }\n    } else {\n      // scrollMode 'native'\n      if (animate) {\n        scrollContentHandle.current.scrollToPosition(targetX, targetY);\n      } else {\n        scrollContentRef.current.style.scrollBehavior = null;\n        scrollContentHandle.current.scrollToPosition(targetX, targetY);\n        scrollContentRef.current.style.scrollBehavior = 'smooth';\n      }\n\n      if (props.start) {\n        props.start(animate);\n      }\n    }\n  } // scrollMode 'translate' [[\n\n\n  function scrollAnimation(animationInfo) {\n    return function (curTime) {\n      var sourceX = animationInfo.sourceX,\n          sourceY = animationInfo.sourceY,\n          targetX = animationInfo.targetX,\n          targetY = animationInfo.targetY,\n          duration = animationInfo.duration,\n          bounds = getScrollBounds();\n\n      if (curTime < duration) {\n        var toBeContinued = false,\n            curTargetX = sourceX,\n            curTargetY = sourceY;\n\n        if (canScrollHorizontally(bounds)) {\n          curTargetX = mutableRef.current.animator.timingFunction(sourceX, targetX, duration, curTime);\n\n          if (Math.abs(curTargetX - targetX) < epsilon) {\n            curTargetX = targetX;\n          } else {\n            toBeContinued = true;\n          }\n        }\n\n        if (canScrollVertically(bounds)) {\n          curTargetY = mutableRef.current.animator.timingFunction(sourceY, targetY, duration, curTime);\n\n          if (Math.abs(curTargetY - targetY) < epsilon) {\n            curTargetY = targetY;\n          } else {\n            toBeContinued = true;\n          }\n        }\n\n        scroll(curTargetX, curTargetY);\n\n        if (!toBeContinued) {\n          stop();\n        }\n      } else {\n        scroll(targetX, targetY);\n        stop();\n      }\n    };\n  }\n\n  function scroll(left, top) {\n    if (left !== mutableRef.current.scrollLeft) {\n      setScrollLeft(left);\n    }\n\n    if (top !== mutableRef.current.scrollTop) {\n      setScrollTop(top);\n    }\n\n    scrollContentHandle.current.setScrollPosition(mutableRef.current.scrollLeft, mutableRef.current.scrollTop, rtl);\n    forwardScrollEvent('onScroll');\n  } // scrollMode 'translate' ]]\n\n\n  function stopForTranslate() {\n    mutableRef.current.animator.stop();\n    mutableRef.current.lastInputType = null;\n    mutableRef.current.isScrollAnimationTargetAccumulated = false;\n    startHidingScrollbarTrack();\n\n    if (mutableRef.current.overscrollEnabled && !mutableRef.current.isDragging) {\n      // not check overscrollEffectOn && overscrollEffectOn for safety\n      clearAllOverscrollEffects();\n    }\n\n    if (props.stop) {\n      props.stop();\n    }\n\n    if (mutableRef.current.scrolling) {\n      mutableRef.current.scrollStopJob.start();\n    }\n  }\n\n  function stopForNative() {\n    scrollContentRef.current.style.scrollBehavior = null;\n    scrollContentHandle.current.scrollToPosition(mutableRef.current.scrollLeft + (rtl ? -0.1 : 0.1), mutableRef.current.scrollTop + 0.1);\n    scrollContentRef.current.style.scrollBehavior = 'smooth';\n  }\n\n  function stop() {\n    if (scrollMode === 'translate') {\n      stopForTranslate();\n    } else {\n      stopForNative();\n    }\n  } // scrollTo API\n\n\n  function getPositionForScrollTo(opt) {\n    var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds),\n        canScrollV = canScrollVertically(bounds);\n    var itemPos,\n        left = null,\n        top = null;\n\n    if (opt instanceof Object) {\n      if (opt.position instanceof Object) {\n        if (canScrollH) {\n          // We need '!=' to check if opt.position.x is null or undefined\n          left = opt.position.x != null ? opt.position.x : mutableRef.current.scrollLeft;\n        } else {\n          left = 0;\n        }\n\n        if (canScrollV) {\n          // We need '!=' to check if opt.position.y is null or undefined\n          top = opt.position.y != null ? opt.position.y : mutableRef.current.scrollTop;\n        } else {\n          top = 0;\n        }\n      } else if (typeof opt.align === 'string') {\n        if (canScrollH) {\n          if (opt.align.includes('left')) {\n            left = 0;\n          } else if (opt.align.includes('right')) {\n            left = bounds.maxLeft;\n          }\n        }\n\n        if (canScrollV) {\n          if (opt.align.includes('top')) {\n            top = 0;\n          } else if (opt.align.includes('bottom')) {\n            top = bounds.maxTop;\n          }\n        }\n      } else {\n        if (typeof opt.index === 'number' && typeof scrollContentHandle.current.getItemPosition === 'function') {\n          itemPos = scrollContentHandle.current.getItemPosition(opt.index, opt.stickTo, opt.offset);\n        } else if (opt.node instanceof Object) {\n          if (opt.node.nodeType === 1 && typeof scrollContentHandle.current.getNodePosition === 'function') {\n            itemPos = scrollContentHandle.current.getNodePosition(opt.node);\n          }\n        }\n\n        if (itemPos) {\n          if (canScrollH) {\n            left = itemPos.left;\n          }\n\n          if (canScrollV) {\n            top = itemPos.top;\n          }\n        }\n      }\n    }\n\n    return {\n      left: left,\n      top: top\n    };\n  }\n\n  function scrollTo(opt) {\n    if (!mutableRef.current.deferScrollTo) {\n      var _getPositionForScroll = getPositionForScrollTo(opt),\n          left = _getPositionForScroll.left,\n          top = _getPositionForScroll.top;\n\n      var targetX = left !== null ? left : mutableRef.current.scrollLeft;\n      var targetY = top !== null ? top : mutableRef.current.scrollTop;\n\n      if (props.scrollTo) {\n        props.scrollTo(opt);\n      }\n\n      mutableRef.current.scrollToInfo = null;\n\n      if (scrollMode === 'native' && scrollContentHandle.current && scrollContentHandle.current.setScrollToPositionTarget) {\n        scrollContentHandle.current.setScrollToPositionTarget(targetX, targetY);\n      }\n\n      start({\n        targetX: targetX,\n        targetY: targetY,\n        animate: opt.animate\n      });\n    } else {\n      mutableRef.current.scrollToInfo = opt;\n    }\n  }\n\n  function canScrollHorizontally(bounds) {\n    return (direction === 'horizontal' || direction === 'both') && bounds.scrollWidth > bounds.clientWidth && !isNaN(bounds.scrollWidth);\n  }\n\n  function canScrollVertically(bounds) {\n    return (direction === 'vertical' || direction === 'both') && bounds.scrollHeight > bounds.clientHeight && !isNaN(bounds.scrollHeight);\n  } // scroll bar\n\n\n  function showScrollbarTrack(bounds) {\n    if (isHorizontalScrollbarVisible && canScrollHorizontally(bounds) && horizontalScrollbarHandle.current) {\n      horizontalScrollbarHandle.current.showScrollbarTrack();\n    }\n\n    if (isVerticalScrollbarVisible && canScrollVertically(bounds) && verticalScrollbarHandle.current) {\n      verticalScrollbarHandle.current.showScrollbarTrack();\n    }\n  }\n\n  function updateScrollbarTrack(scrollbarRef, bounds) {\n    scrollbarRef.current.update(_objectSpread(_objectSpread({}, bounds), {}, {\n      scrollLeft: mutableRef.current.scrollLeft,\n      scrollTop: mutableRef.current.scrollTop\n    }));\n  }\n\n  function startHidingScrollbarTrack() {\n    if (isHorizontalScrollbarVisible && horizontalScrollbarHandle.current) {\n      horizontalScrollbarHandle.current.startHidingScrollbarTrack();\n    }\n\n    if (isVerticalScrollbarVisible && verticalScrollbarHandle.current) {\n      verticalScrollbarHandle.current.startHidingScrollbarTrack();\n    }\n  }\n\n  function updateScrollbars() {\n    var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds),\n        canScrollV = canScrollVertically(bounds),\n        curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollH : horizontalScrollbar === 'visible',\n        curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollV : verticalScrollbar === 'visible'; // determine if we should hide or show any scrollbars\n\n    var isVisibilityChanged = isHorizontalScrollbarVisible !== curHorizontalScrollbarVisible || isVerticalScrollbarVisible !== curVerticalScrollbarVisible;\n\n    if (isVisibilityChanged) {\n      // one or both scrollbars have changed visibility\n      setIsHorizontalScrollbarVisible(curHorizontalScrollbarVisible);\n      setIsVerticalScrollbarVisible(curVerticalScrollbarVisible);\n    } else {\n      mutableRef.current.deferScrollTo = false;\n      updateScrollbarTrackSize();\n    }\n  }\n\n  function updateScrollbarTrackSize() {\n    var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds),\n        canScrollV = canScrollVertically(bounds),\n        curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollH : horizontalScrollbar === 'visible',\n        curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollV : verticalScrollbar === 'visible';\n\n    if (curHorizontalScrollbarVisible || curVerticalScrollbarVisible) {\n      // no visibility change but need to notify whichever scrollbars are visible of the\n      // updated bounds and scroll position\n      var updatedBounds = _objectSpread(_objectSpread({}, bounds), {}, {\n        scrollLeft: mutableRef.current.scrollLeft,\n        scrollTop: mutableRef.current.scrollTop\n      });\n\n      if (curHorizontalScrollbarVisible && horizontalScrollbarHandle.current) {\n        horizontalScrollbarHandle.current.update(updatedBounds);\n      }\n\n      if (curVerticalScrollbarVisible && verticalScrollbarHandle.current) {\n        verticalScrollbarHandle.current.update(updatedBounds);\n      }\n\n      return true;\n    }\n\n    return false;\n  } // ref\n\n\n  function getScrollBounds() {\n    if (scrollContentHandle.current && typeof scrollContentHandle.current.getScrollBounds === 'function') {\n      return scrollContentHandle.current.getScrollBounds();\n    }\n  }\n\n  function getMoreInfo() {\n    if (scrollContentHandle.current && typeof scrollContentHandle.current.getMoreInfo === 'function') {\n      return scrollContentHandle.current.getMoreInfo();\n    }\n  } // FIXME setting event handlers directly to work on the V8 snapshot.\n\n\n  function addEventListeners() {\n    (0, _utilEvent[\"default\"])('wheel').addEventListener(scrollContainerRef, onWheel);\n    (0, _utilEvent[\"default\"])('keydown').addEventListener(scrollContainerRef, onKeyDown);\n    (0, _utilEvent[\"default\"])('mousedown').addEventListener(scrollContainerRef, onMouseDown); // scrollMode 'native' [[\n\n    if (scrollMode === 'native' && scrollContentRef.current) {\n      (0, _utilEvent[\"default\"])('scroll').addEventListener(scrollContentRef, onScroll, {\n        passive: true\n      });\n      scrollContentRef.current.style.scrollBehavior = 'smooth';\n    } // scrollMode 'native' ]]\n\n\n    if (props.addEventListeners) {\n      props.addEventListeners(scrollContentRef);\n    }\n\n    if (window) {\n      (0, _utilEvent[\"default\"])('resize').addEventListener(window, handleResizeWindow);\n    }\n  } // FIXME setting event handlers directly to work on the V8 snapshot.\n\n\n  function removeEventListeners() {\n    (0, _utilEvent[\"default\"])('wheel').removeEventListener(scrollContainerRef, onWheel);\n    (0, _utilEvent[\"default\"])('keydown').removeEventListener(scrollContainerRef, onKeyDown);\n    (0, _utilEvent[\"default\"])('mousedown').removeEventListener(scrollContainerRef, onMouseDown); // scrollMode 'native' [[\n\n    (0, _utilEvent[\"default\"])('scroll').removeEventListener(scrollContentRef, onScroll, {\n      passive: true\n    }); // scrollMode 'native' ]]\n\n    if (props.removeEventListeners) {\n      props.removeEventListeners(scrollContentRef);\n    }\n\n    (0, _utilEvent[\"default\"])('resize').removeEventListener(window, handleResizeWindow);\n  } // render\n  // scrollMode 'translate' [[\n\n\n  function handleScroll() {\n    // Prevent scroll by focus.\n    // VirtualList and VirtualGridList DO NOT receive `onscroll` event.\n    // Only Scroller could get `onscroll` event.\n    if (!mutableRef.current.animator.isAnimating() && scrollContentHandle.current && scrollContentRef.current && scrollContentHandle.current.getRtlPositionX) {\n      // For Scroller\n      scrollContentRef.current.scrollTop = mutableRef.current.scrollTop;\n      scrollContentRef.current.scrollLeft = scrollContentHandle.current.getRtlPositionX(mutableRef.current.scrollLeft);\n    }\n  } // scrollMode 'translate' ]]\n\n\n  function scrollContainerContainsDangerously(target) {\n    return _utilDOM[\"default\"].containsDangerously(scrollContainerRef, target);\n  }\n\n  assignProperties('scrollContainerProps', _objectSpread(_objectSpread({}, rest), {}, {\n    className: [scrollClasses]\n  }));\n  assignProperties('scrollInnerContainerProps', {\n    className: [_useScrollModule[\"default\"].scrollInnerContainer]\n  });\n  assignProperties('scrollContentWrapperProps', _objectSpread({\n    className: scrollMode === 'translate' ? [_useScrollModule[\"default\"].scrollContentWrapper] : [_useScrollModule[\"default\"].scrollContentWrapper, _useScrollModule[\"default\"].scrollContentWrapperNative]\n  }, !noScrollByDrag && {\n    flickConfig: flickConfig,\n    onDrag: onDrag,\n    onDragEnd: onDragEnd,\n    onDragStart: onDragStart,\n    onFlick: onFlick,\n    onTouchStart: scrollMode === 'native' ? onTouchStart : null // scrollMode 'native'\n\n  }));\n  var voiceProps = {\n    'data-webos-voice-disabled': voiceDisabled,\n    'data-webos-voice-focused': voiceFocused,\n    'data-webos-voice-group-label': voiceGroupLabel\n  };\n  var scrollContentProps = props.itemRenderer ? // If the child component is a VirtualList\n  {\n    childProps: childProps,\n    clientSize: clientSize,\n    dataSize: dataSize,\n    itemRenderer: itemRenderer,\n    itemSize: itemSize,\n    itemSizes: itemSizes,\n    overhang: overhang,\n    pageScroll: pageScroll,\n    spacing: spacing,\n    wrap: wrap\n  } : {\n    children: children\n  };\n  assignProperties('scrollContentProps', _objectSpread(_objectSpread(_objectSpread({}, scrollContentProps), voiceProps), {}, {\n    cbScrollTo: scrollTo,\n    className: [_useScrollModule[\"default\"].scrollFill],\n    direction: direction,\n\n    get isHorizontalScrollbarVisible() {\n      return isHorizontalScrollbarVisible;\n    },\n\n    get isVerticalScrollbarVisible() {\n      return isVerticalScrollbarVisible;\n    },\n\n    onScroll: scrollMode === 'translate' ? handleScroll : null,\n    role: role,\n    rtl: rtl,\n    scrollContainerContainsDangerously: scrollContainerContainsDangerously,\n    scrollMode: scrollMode\n  }));\n  assignProperties('verticalScrollbarProps', {\n    clientSize: clientSize,\n    disabled: !isVerticalScrollbarVisible,\n    rtl: rtl,\n    vertical: true\n  });\n  assignProperties('horizontalScrollbarProps', {\n    clientSize: clientSize,\n    corner: isVerticalScrollbarVisible,\n    disabled: !isHorizontalScrollbarVisible,\n    rtl: rtl,\n    vertical: false\n  });\n  assignProperties('resizeContextProps', {\n    value: mutableRef.current.resizeRegistry.register\n  });\n  mutableRef.current.deferScrollTo = true;\n  mutableRef.current.prevState = {\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible\n  };\n  return {\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible,\n    scrollContentWrapper: noScrollByDrag ? 'div' : TouchableDiv,\n    scrollObserver: {\n      addObserverOnScroll: addObserverOnScroll,\n      removeObserverOnScroll: removeObserverOnScroll\n    }\n  };\n};\n\nexports.useScrollBase = useScrollBase;\n\nvar assignPropertiesOf = function assignPropertiesOf(instance) {\n  return function (name, properties) {\n    if (!instance[name]) {\n      instance[name] = {};\n    }\n\n    if (typeof properties === 'object') {\n      for (var property in properties) {\n        if (property === 'className') {\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(Array.isArray(properties.className), 'Unsupported other types for `className` prop except Array') : void 0;\n          instance[name].className = (0, _classnames[\"default\"])(instance[name].className, properties.className);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!instance[name][property], 'Unsupported to push value in the same ' + property + ' prop.') : void 0; // Override the previous value.\n\n          instance[name][property] = properties[property];\n        }\n      }\n    }\n  };\n};\n\nexports.assignPropertiesOf = assignPropertiesOf;\n\nvar useScroll = function useScroll(props) {\n  // Mutable value\n  var scrollContainerRef = (0, _react.useRef)({});\n  var scrollContentHandle = (0, _react.useRef)({});\n  var scrollContentRef = (0, _react.useRef)({});\n  var itemRefs = (0, _react.useRef)([]);\n  var horizontalScrollbarHandle = (0, _react.useRef)({});\n  var verticalScrollbarHandle = (0, _react.useRef)({}); // Hooks\n\n  var collectionOfProperties = {},\n      assignProperties = assignPropertiesOf(collectionOfProperties);\n\n  var _useScrollBase = useScrollBase(_objectSpread(_objectSpread({}, props), {}, {\n    assignProperties: assignProperties,\n    horizontalScrollbarHandle: horizontalScrollbarHandle,\n    scrollContainerRef: scrollContainerRef,\n    scrollContentHandle: scrollContentHandle,\n    scrollContentRef: scrollContentRef,\n    verticalScrollbarHandle: verticalScrollbarHandle\n  })),\n      scrollContentWrapper = _useScrollBase.scrollContentWrapper,\n      isHorizontalScrollbarVisible = _useScrollBase.isHorizontalScrollbarVisible,\n      isVerticalScrollbarVisible = _useScrollBase.isVerticalScrollbarVisible;\n\n  assignProperties('scrollContainerProps', {\n    ref: scrollContainerRef\n  });\n  assignProperties('scrollContentProps', _objectSpread(_objectSpread({}, props.itemRenderer ? {\n    itemRefs: itemRefs\n  } : {}), {}, {\n    scrollContentRef: scrollContentRef\n  }));\n  assignProperties('verticalScrollbarProps', {\n    scrollbarHandle: verticalScrollbarHandle\n  });\n  assignProperties('horizontalScrollbarProps', {\n    scrollbarHandle: horizontalScrollbarHandle\n  }); // Return\n\n  return _objectSpread(_objectSpread({}, collectionOfProperties), {}, {\n    scrollContentWrapper: scrollContentWrapper,\n    scrollContentHandle: scrollContentHandle,\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible\n  });\n};\n\nexports.useScroll = useScroll;\nvar _default = useScroll;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/tak43/remaking/node_modules/@enact/ui/useScroll/useScroll.js"],"names":["Object","defineProperty","exports","value","useScrollBase","useScroll","constants","assignPropertiesOf","_classnames","_interopRequireDefault","require","_handle","_keymap","_platform","_Registry","_util","_clamp","_react","_warning","_ForwardRef","_Resizable","_resolution","_Touchable","_ScrollAnimator","_utilDOM","_utilEvent","_useScrollModule","_jsxRuntime","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","err","isArray","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","animationDuration","epsilon","flickConfig","maxDuration","isPageDown","is","isPageUp","nop","overscrollDefaultRatio","overscrollTypeNone","overscrollTypeHold","overscrollTypeOnce","overscrollTypeDone","overscrollVelocityFactor","paginationPageMultiplier","scrollStopWaiting","scrollWheelPageMultiplierForMaxPixel","TouchableDiv","prop","_ref","componentRef","rest","jsx","ref","useForceUpdate","useReducer","x","props","childProps","children","className","clientSize","voiceDisabled","voiceFocused","voiceGroupLabel","assignProperties","dataSize","direction","horizontalScrollbar","horizontalScrollbarHandle","itemRenderer","itemSize","itemSizes","noScrollByDrag","noScrollByWheel","overhang","overscrollEffectOn","pageScroll","role","rtl","scrollContainerRef","scrollContentHandle","scrollContentRef","scrollMode","setScrollContainerHandle","snapToCenter","spacing","spotlightContainerDisabled","verticalScrollbar","verticalScrollbarHandle","wrap","scrollClasses","scroll","addEventListeners","applyOverscrollEffect","cbScrollTo","clearOverscrollEffect","handleResizeWindow","onFlick","onKeyDown","onMouseDown","onScroll","onScrollStart","onScrollStop","onWheel","removeEventListeners","scrollStopOnScroll","scrollTo","start","stop","_useForceUpdate","_useForceUpdate2","forceUpdate","context","useContext","ResizeContext","_useState","useState","_useState2","isHorizontalScrollbarVisible","setIsHorizontalScrollbarVisible","_useState3","_useState4","isVerticalScrollbarVisible","setIsVerticalScrollbarVisible","mutableRef","useRef","overscrollEnabled","animationInfo","resizeRegistry","pixelPerLine","scrollWheelMultiplierForDeltaPixel","deferScrollTo","isScrollAnimationTargetAccumulated","lastInputType","overscrollStatus","horizontal","before","type","ratio","after","vertical","bounds","clientWidth","clientHeight","scrollWidth","scrollHeight","maxTop","maxLeft","wheelDirection","isDragging","isTouching","scrolling","scrollLeft","scrollTop","scrollToInfo","animator","observerOnScroll","accumulatedTargetX","accumulatedTargetY","flickTarget","dragStartX","dragStartY","scrollStopJob","prevState","current","useLayoutEffect","calculateDistanceByWheel","canScrollHorizontally","canScrollVertically","checkAndApplyOverscrollEffect","getScrollBounds","val","scrollBounds","scrollToAccumulatedTarget","setOverscrollStatus","showScrollbarTrack","startHidingScrollbarTrack","containerRef","ResizeObserver","resizeObserver","syncClientSize","observe","disconnect","parent","_mutableRef$current","forwardScrollEvent","getReachedEdgeInfo","isAnimating","useEffect","enqueueForceUpdate","useCallback","calculateMetrics","propsHandleResizeWindow","setTimeout","position","y","animate","style","scrollBehavior","scrollToPosition","handleResize","ev","action","create","Job","doScrollStop","run","hasDataSizeChanged","_mutableRef$current2","setScrollLeft","setScrollTop","clampScrollPosition","updateScrollbarTrackSize","updateScrollbars","notify","getRtlX","preventDefault","forwardWithPrevent","onTouchStart","onDragStart","forward","onDrag","targetX","targetY","overscrollEffect","drag","checkAndApplyOverscrollEffectOnDrag","onDragEnd","_mutableRef$current$f","duration","clearAllOverscrollEffects","_mutableRef$current$f2","_targetX","_targetY","isVerticalFlick","simulate","velocityX","velocityY","deltaMode","delta","maxPixel","scale","stopPropagation","canScrollH","canScrollV","eventDeltaMode","eventDelta","wheelDeltaY","deltaY","dir","Math","sign","wheel","overscrollEffectRequired","needToHideScrollbarTrack","getContainerRef","containsDangerously","_dir","scrollByPage","keyCode","pageDistance","pageKey","_ev$target","scrollStartOnScroll","platform","ios","safari","chrome","didScroll","getEdgeFromPosition","maxPosition","orientation","edge","overscrollEffectType","status","getOverscrollStatus","calculateOverscrollRatio","isVertical","baseSize","maxPos","overDistance","min","undefined","curPos","applyOverscrollEffectOnDrag","targetPosition","oppositeEdge","checkAndApplyOverscrollEffectOnScroll","_getOverscrollStatus","checkAndApplyOverscrollEffectOnStart","addObserverOnScroll","fn","includes","removeObserverOnScroll","index","splice","reachedEdgeInfo","data","moreInfo","getMoreInfo","updateScrollbarTrack","bottom","left","right","top","_edge","_ref2","_ref2$animate","_ref2$duration","_ref2$overscrollEffec","_mutableRef$current3","updatedAnimationInfo","sourceX","sourceY","abs","setScrollPositionTarget","scrollAnimation","curTime","toBeContinued","curTargetX","curTargetY","timingFunction","setScrollPosition","stopForTranslate","stopForNative","getPositionForScrollTo","opt","itemPos","align","getItemPosition","stickTo","offset","node","nodeType","getNodePosition","_getPositionForScroll","setScrollToPositionTarget","isNaN","scrollbarRef","update","curHorizontalScrollbarVisible","curVerticalScrollbarVisible","isVisibilityChanged","updatedBounds","addEventListener","passive","window","removeEventListener","handleScroll","getRtlPositionX","scrollContainerContainsDangerously","scrollInnerContainer","scrollContentWrapper","scrollContentWrapperNative","voiceProps","scrollContentProps","scrollFill","disabled","corner","register","scrollObserver","instance","properties","property","process","env","NODE_ENV","itemRefs","collectionOfProperties","_useScrollBase","scrollbarHandle","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScrollBase = exports.useScroll = exports.constants = exports.assignPropertiesOf = exports[\"default\"] = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _handle = require(\"@enact/core/handle\");\n\nvar _keymap = require(\"@enact/core/keymap\");\n\nvar _platform = require(\"@enact/core/platform\");\n\nvar _Registry = _interopRequireDefault(require(\"@enact/core/internal/Registry\"));\n\nvar _util = require(\"@enact/core/util\");\n\nvar _clamp = _interopRequireDefault(require(\"ramda/src/clamp\"));\n\nvar _react = require(\"react\");\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _ForwardRef = _interopRequireDefault(require(\"../ForwardRef\"));\n\nvar _Resizable = require(\"../Resizable\");\n\nvar _resolution = _interopRequireDefault(require(\"../resolution\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _ScrollAnimator = _interopRequireDefault(require(\"./ScrollAnimator\"));\n\nvar _utilDOM = _interopRequireDefault(require(\"./utilDOM\"));\n\nvar _utilEvent = _interopRequireDefault(require(\"./utilEvent\"));\n\nvar _useScrollModule = _interopRequireDefault(require(\"./useScroll.module.css\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar constants = {\n  animationDuration: 1000,\n  epsilon: 1,\n  flickConfig: {\n    maxDuration: null\n  },\n  isPageDown: (0, _keymap.is)('pageDown'),\n  isPageUp: (0, _keymap.is)('pageUp'),\n  nop: function nop() {},\n  overscrollDefaultRatio: 0.5,\n  overscrollTypeNone: 0,\n  overscrollTypeHold: 1,\n  overscrollTypeOnce: 2,\n  overscrollTypeDone: 9,\n  overscrollVelocityFactor: 300,\n  // scrollMode 'native'\n  paginationPageMultiplier: 0.66,\n  scrollStopWaiting: 200,\n  scrollWheelPageMultiplierForMaxPixel: 0.2 // The ratio of the maximum distance scrolled by wheel to the size of the viewport.\n\n},\n    animationDuration = constants.animationDuration,\n    epsilon = constants.epsilon,\n    flickConfig = constants.flickConfig,\n    isPageDown = constants.isPageDown,\n    isPageUp = constants.isPageUp,\n    overscrollDefaultRatio = constants.overscrollDefaultRatio,\n    overscrollTypeDone = constants.overscrollTypeDone,\n    overscrollTypeHold = constants.overscrollTypeHold,\n    overscrollTypeNone = constants.overscrollTypeNone,\n    overscrollTypeOnce = constants.overscrollTypeOnce,\n    overscrollVelocityFactor = constants.overscrollVelocityFactor,\n    paginationPageMultiplier = constants.paginationPageMultiplier,\n    scrollStopWaiting = constants.scrollStopWaiting,\n    scrollWheelPageMultiplierForMaxPixel = constants.scrollWheelPageMultiplierForMaxPixel;\nexports.constants = constants;\nvar TouchableDiv = (0, _ForwardRef[\"default\"])({\n  prop: 'componentRef'\n}, (0, _Touchable[\"default\"])(function (_ref) {\n  var componentRef = _ref.componentRef,\n      rest = _objectWithoutProperties(_ref, [\"componentRef\"]);\n\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    ref: componentRef\n  }));\n}));\n\nvar useForceUpdate = function useForceUpdate() {\n  return (0, _react.useReducer)(function (x) {\n    return x + 1;\n  }, 0);\n};\n/**\n * A custom hook that passes scrollable behavior information as its render prop.\n *\n * @class\n * @memberof ui/useScroll\n * @ui\n * @private\n */\n\n\nvar useScrollBase = function useScrollBase(props) {\n  var childProps = props.childProps,\n      children = props.children,\n      className = props.className,\n      clientSize = props.clientSize,\n      voiceDisabled = props['data-webos-voice-disabled'],\n      voiceFocused = props['data-webos-voice-focused'],\n      voiceGroupLabel = props['data-webos-voice-group-label'],\n      assignProperties = props.assignProperties,\n      dataSize = props.dataSize,\n      direction = props.direction,\n      horizontalScrollbar = props.horizontalScrollbar,\n      horizontalScrollbarHandle = props.horizontalScrollbarHandle,\n      itemRenderer = props.itemRenderer,\n      itemSize = props.itemSize,\n      itemSizes = props.itemSizes,\n      noScrollByDrag = props.noScrollByDrag,\n      noScrollByWheel = props.noScrollByWheel,\n      overhang = props.overhang,\n      overscrollEffectOn = props.overscrollEffectOn,\n      pageScroll = props.pageScroll,\n      role = props.role,\n      rtl = props.rtl,\n      scrollContainerRef = props.scrollContainerRef,\n      scrollContentHandle = props.scrollContentHandle,\n      scrollContentRef = props.scrollContentRef,\n      scrollMode = props.scrollMode,\n      setScrollContainerHandle = props.setScrollContainerHandle,\n      snapToCenter = props.snapToCenter,\n      spacing = props.spacing,\n      spotlightContainerDisabled = props.spotlightContainerDisabled,\n      verticalScrollbar = props.verticalScrollbar,\n      verticalScrollbarHandle = props.verticalScrollbarHandle,\n      wrap = props.wrap,\n      rest = _objectWithoutProperties(props, [\"childProps\", \"children\", \"className\", \"clientSize\", \"data-webos-voice-disabled\", \"data-webos-voice-focused\", \"data-webos-voice-group-label\", \"assignProperties\", \"dataSize\", \"direction\", \"horizontalScrollbar\", \"horizontalScrollbarHandle\", \"itemRenderer\", \"itemSize\", \"itemSizes\", \"noScrollByDrag\", \"noScrollByWheel\", \"overhang\", \"overscrollEffectOn\", \"pageScroll\", \"role\", \"rtl\", \"scrollContainerRef\", \"scrollContentHandle\", \"scrollContentRef\", \"scrollMode\", \"setScrollContainerHandle\", \"snapToCenter\", \"spacing\", \"spotlightContainerDisabled\", \"verticalScrollbar\", \"verticalScrollbarHandle\", \"wrap\"]),\n      scrollClasses = (0, _classnames[\"default\"])(_useScrollModule[\"default\"].scroll, className); // The following props are the one having the same naming function in this scope.\n  // So it is better to use props[propName]\n  // instead of extracting it from the `props` and renaming it\n\n\n  delete rest.addEventListeners;\n  delete rest.applyOverscrollEffect;\n  delete rest.cbScrollTo;\n  delete rest.clearOverscrollEffect;\n  delete rest.handleResizeWindow;\n  delete rest.onFlick;\n  delete rest.onKeyDown;\n  delete rest.onMouseDown;\n  delete rest.onScroll;\n  delete rest.onScrollStart;\n  delete rest.onScrollStop;\n  delete rest.onWheel;\n  delete rest.removeEventListeners;\n  delete rest.scrollStopOnScroll; // scrollMode 'native'\n\n  delete rest.scrollTo;\n  delete rest.start; // scrollMode 'native'\n\n  delete rest.stop; // scrollMode 'translate'\n  // Mutable value and Hooks\n\n  var _useForceUpdate = useForceUpdate(),\n      _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),\n      forceUpdate = _useForceUpdate2[1];\n\n  var context = (0, _react.useContext)(_Resizable.ResizeContext);\n\n  var _useState = (0, _react.useState)(horizontalScrollbar === 'visible'),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHorizontalScrollbarVisible = _useState2[0],\n      setIsHorizontalScrollbarVisible = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(verticalScrollbar === 'visible'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isVerticalScrollbarVisible = _useState4[0],\n      setIsVerticalScrollbarVisible = _useState4[1];\n\n  var mutableRef = (0, _react.useRef)({\n    overscrollEnabled: !!props.applyOverscrollEffect,\n    // Enable the early bail out of repeated scrolling to the same position\n    animationInfo: null,\n    resizeRegistry: null,\n    // constants\n    pixelPerLine: 39,\n    scrollWheelMultiplierForDeltaPixel: 1.5,\n    // The ratio of wheel 'delta' units to pixels scrolled.\n    // status\n    deferScrollTo: true,\n    isScrollAnimationTargetAccumulated: false,\n    // overscroll\n    lastInputType: null,\n    overscrollStatus: {\n      horizontal: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      },\n      vertical: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      }\n    },\n    // bounds info\n    bounds: {\n      clientWidth: 0,\n      clientHeight: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      maxTop: 0,\n      maxLeft: 0\n    },\n    // wheel/drag/flick info\n    wheelDirection: 0,\n    isDragging: false,\n    isTouching: false,\n    // scrollMode 'native'\n    // scroll info\n    scrolling: false,\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollToInfo: null,\n    // scroll animator\n    animator: null,\n    // scroll status observer\n    observerOnScroll: [],\n    // non-declared-variable.\n    accumulatedTargetX: null,\n    accumulatedTargetY: null,\n    flickTarget: null,\n    dragStartX: null,\n    dragStartY: null,\n    scrollStopJob: null,\n    prevState: {\n      isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n      isVerticalScrollbarVisible: isVerticalScrollbarVisible\n    }\n  });\n\n  if (mutableRef.current.animator == null) {\n    mutableRef.current.animator = new _ScrollAnimator[\"default\"]();\n  }\n\n  (0, _react.useLayoutEffect)(function () {\n    if (setScrollContainerHandle) {\n      setScrollContainerHandle({\n        animator: mutableRef.current.animator,\n        applyOverscrollEffect: applyOverscrollEffect,\n        bounds: mutableRef.current.bounds,\n        calculateDistanceByWheel: calculateDistanceByWheel,\n        canScrollHorizontally: canScrollHorizontally,\n        canScrollVertically: canScrollVertically,\n        checkAndApplyOverscrollEffect: checkAndApplyOverscrollEffect,\n        getScrollBounds: getScrollBounds,\n\n        get isDragging() {\n          return mutableRef.current.isDragging;\n        },\n\n        set isDragging(val) {\n          mutableRef.current.isDragging = val;\n        },\n\n        get isScrollAnimationTargetAccumulated() {\n          return mutableRef.current.isScrollAnimationTargetAccumulated;\n        },\n\n        set isScrollAnimationTargetAccumulated(val) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = val;\n        },\n\n        get lastInputType() {\n          return mutableRef.current.lastInputType;\n        },\n\n        set lastInputType(val) {\n          mutableRef.current.lastInputType = val;\n        },\n\n        get rtl() {\n          return rtl;\n        },\n\n        get scrollBounds() {\n          return getScrollBounds();\n        },\n\n        get scrollHeight() {\n          return mutableRef.current.bounds.scrollHeight;\n        },\n\n        get scrolling() {\n          return mutableRef.current.scrolling;\n        },\n\n        get scrollLeft() {\n          return mutableRef.current.scrollLeft;\n        },\n\n        scrollTo: scrollTo,\n        scrollToAccumulatedTarget: scrollToAccumulatedTarget,\n\n        get scrollToInfo() {\n          return mutableRef.current.scrollToInfo;\n        },\n\n        get scrollTop() {\n          return mutableRef.current.scrollTop;\n        },\n\n        setOverscrollStatus: setOverscrollStatus,\n        showScrollbarTrack: showScrollbarTrack,\n        start: start,\n        startHidingScrollbarTrack: startHidingScrollbarTrack,\n        stop: stop,\n\n        get wheelDirection() {\n          return mutableRef.current.wheelDirection;\n        },\n\n        set wheelDirection(val) {\n          mutableRef.current.wheelDirection = val;\n        }\n\n      });\n    }\n  });\n  (0, _react.useLayoutEffect)(function () {\n    if (props.cbScrollTo) {\n      props.cbScrollTo(scrollTo);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    var containerRef = scrollContainerRef.current;\n\n    if (!containerRef) {\n      return;\n    }\n\n    if (typeof ResizeObserver === 'function') {\n      var resizeObserver = new ResizeObserver(function () {\n        if (scrollContentHandle.current && scrollContentHandle.current.syncClientSize) {\n          scrollContentHandle.current.syncClientSize();\n        }\n      });\n      resizeObserver.observe(containerRef);\n      return function () {\n        if (resizeObserver) {\n          resizeObserver.disconnect();\n          resizeObserver = null;\n        }\n      };\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useLayoutEffect)(function () {\n    mutableRef.current.resizeRegistry.parent = context; // componentWillUnmount\n\n    return function () {\n      var _mutableRef$current = mutableRef.current,\n          animator = _mutableRef$current.animator,\n          resizeRegistry = _mutableRef$current.resizeRegistry,\n          scrolling = _mutableRef$current.scrolling,\n          scrollStopJob = _mutableRef$current.scrollStopJob; // eslint-disable-line react-hooks/exhaustive-deps\n\n      resizeRegistry.parent = null; // Before call cancelAnimationFrame, you must send scrollStop Event.\n\n      if (scrolling) {\n        forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n      }\n\n      scrollStopJob.stop(); // scrollMode 'translate' [\n\n      if (animator.isAnimating()) {\n        animator.stop();\n      } // scrollMode 'translate' ]\n\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useEffect)(function () {\n    addEventListeners();\n    return function () {\n      removeEventListeners();\n    };\n  }); // scrollMode 'translate' [[\n  // TODO: consider replacing forceUpdate() by storing bounds in state rather than a non-\n  // state member.\n\n  var enqueueForceUpdate = (0, _react.useCallback)(function () {\n    scrollContentHandle.current.calculateMetrics(scrollContentHandle.current.props);\n    forceUpdate();\n  }, [forceUpdate, scrollContentHandle]);\n\n  function handleResizeWindow() {\n    var propsHandleResizeWindow = props.handleResizeWindow; // `handleSize` in `ui/resolution.ResolutionDecorator` should be executed first.\n\n    setTimeout(function () {\n      if (propsHandleResizeWindow) {\n        propsHandleResizeWindow();\n      }\n\n      if (scrollMode === 'translate') {\n        scrollTo({\n          position: {\n            x: 0,\n            y: 0\n          },\n          animate: false\n        });\n      } else {\n        scrollContentRef.current.style.scrollBehavior = null;\n        scrollContentHandle.current.scrollToPosition(0, 0);\n        scrollContentRef.current.style.scrollBehavior = 'smooth';\n      }\n\n      enqueueForceUpdate();\n    });\n  }\n\n  var handleResize = (0, _react.useCallback)(function (ev) {\n    if (ev.action === 'invalidateBounds') {\n      enqueueForceUpdate();\n    }\n  }, [enqueueForceUpdate]); // scrollMode 'translate' ]]\n\n  if (mutableRef.current.resizeRegistry == null) {\n    mutableRef.current.resizeRegistry = _Registry[\"default\"].create(handleResize);\n  }\n\n  (0, _react.useLayoutEffect)(function () {\n    var ref = mutableRef.current;\n\n    if (scrollMode === 'translate') {\n      ref.scrollStopJob = new _util.Job(doScrollStop, scrollStopWaiting);\n    } else {\n      ref.scrollStopJob = new _util.Job(scrollStopOnScroll, scrollStopWaiting);\n    }\n\n    return function () {\n      if (ref.scrolling) {\n        ref.scrollStopJob.run();\n      }\n\n      ref.scrollStopJob.stop();\n    };\n  }, [direction, isHorizontalScrollbarVisible, isVerticalScrollbarVisible, rtl, scrollMode, spotlightContainerDisabled]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useEffect)(function () {\n    var hasDataSizeChanged = scrollContentHandle.current.hasDataSizeChanged,\n        _mutableRef$current2 = mutableRef.current,\n        prevState = _mutableRef$current2.prevState,\n        resizeRegistry = _mutableRef$current2.resizeRegistry,\n        scrollToInfo = _mutableRef$current2.scrollToInfo; // Need to sync calculated client size if it is different from the real size\n\n    if (scrollContentHandle.current.syncClientSize) {\n      // If we actually synced, we need to reset scroll position.\n      if (scrollContentHandle.current.syncClientSize()) {\n        setScrollLeft(0);\n        setScrollTop(0);\n      }\n    }\n\n    clampScrollPosition(); // scrollMode 'translate'\n\n    if (hasDataSizeChanged === false && (isHorizontalScrollbarVisible && !prevState.isHorizontalScrollbarVisible || isVerticalScrollbarVisible && !prevState.isVerticalScrollbarVisible)) {\n      mutableRef.current.deferScrollTo = false;\n      updateScrollbarTrackSize();\n    } else {\n      updateScrollbars();\n    }\n\n    if (scrollToInfo !== null) {\n      if (!mutableRef.current.deferScrollTo) {\n        scrollTo(scrollToInfo);\n      }\n    } // publish container resize changes\n\n\n    var horizontal = isHorizontalScrollbarVisible !== prevState.isHorizontalScrollbarVisible;\n    var vertical = isVerticalScrollbarVisible !== prevState.isVerticalScrollbarVisible;\n\n    if (horizontal || vertical) {\n      resizeRegistry.notify({});\n    }\n  }); // scrollMode 'translate' [[\n\n  function clampScrollPosition() {\n    var bounds = getScrollBounds();\n\n    if (mutableRef.current.scrollTop > bounds.maxTop) {\n      mutableRef.current.scrollTop = bounds.maxTop;\n    }\n\n    if (mutableRef.current.scrollLeft > bounds.maxLeft) {\n      mutableRef.current.scrollLeft = bounds.maxLeft;\n    }\n  } // scrollMode 'translate' ]]\n  // drag/flick event handlers\n\n\n  function getRtlX(x) {\n    return rtl ? -x : x;\n  }\n\n  function onMouseDown(ev) {\n    if (snapToCenter) {\n      ev.preventDefault();\n    }\n\n    if ((0, _handle.forwardWithPrevent)('onMouseDown', ev, props) && !snapToCenter) {\n      stop();\n    }\n  } // scrollMode 'native' [[\n\n\n  function onTouchStart() {\n    mutableRef.current.isTouching = true;\n  } // scrollMode 'native' ]]\n\n\n  function onDragStart(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'dragstart') return;\n      (0, _handle.forward)('onDragStart', ev, props);\n      stop();\n      mutableRef.current.isDragging = true;\n      mutableRef.current.dragStartX = mutableRef.current.scrollLeft + getRtlX(ev.x);\n      mutableRef.current.dragStartY = mutableRef.current.scrollTop + ev.y;\n    } else {\n      if (!mutableRef.current.isTouching) {\n        stop();\n        mutableRef.current.isDragging = true;\n      } // these values are used also for touch inputs\n\n\n      mutableRef.current.dragStartX = mutableRef.current.scrollLeft + getRtlX(ev.x);\n      mutableRef.current.dragStartY = mutableRef.current.scrollTop + ev.y;\n    }\n  }\n\n  function onDrag(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'drag') {\n        return;\n      }\n\n      mutableRef.current.lastInputType = 'drag';\n      (0, _handle.forward)('onDrag', ev, props);\n      start({\n        targetX: direction === 'vertical' ? 0 : mutableRef.current.dragStartX - getRtlX(ev.x),\n        // 'horizontal' or 'both'\n        targetY: direction === 'horizontal' ? 0 : mutableRef.current.dragStartY - ev.y,\n        // 'vertical' or 'both'\n        animate: false,\n        overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n      });\n    } else {\n      var targetX = direction === 'vertical' ? 0 : mutableRef.current.dragStartX - getRtlX(ev.x),\n          // 'horizontal' or 'both'\n      targetY = direction === 'horizontal' ? 0 : mutableRef.current.dragStartY - ev.y; // 'vertical' or 'both'\n\n      mutableRef.current.lastInputType = 'drag';\n\n      if (!mutableRef.current.isTouching) {\n        start({\n          targetX: targetX,\n          targetY: targetY,\n          animate: false,\n          overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n        });\n      } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n        checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollTypeHold);\n      }\n    }\n  }\n\n  function onDragEnd(ev) {\n    if (scrollMode === 'translate') {\n      if (ev.type === 'dragend') {\n        return;\n      }\n\n      mutableRef.current.isDragging = false;\n      (0, _handle.forward)('onDragEnd', ev, props);\n\n      if (mutableRef.current.flickTarget) {\n        var _mutableRef$current$f = mutableRef.current.flickTarget,\n            targetX = _mutableRef$current$f.targetX,\n            targetY = _mutableRef$current$f.targetY,\n            duration = _mutableRef$current$f.duration;\n        mutableRef.current.lastInputType = 'drag';\n        mutableRef.current.isScrollAnimationTargetAccumulated = false;\n        start({\n          targetX: targetX,\n          targetY: targetY,\n          duration: duration,\n          overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n        });\n      } else {\n        stop();\n      }\n\n      if (mutableRef.current.overscrollEnabled) {\n        // not check overscrollEffectOn && overscrollEffectOn.drag for safety\n        clearAllOverscrollEffects();\n      }\n\n      mutableRef.current.flickTarget = null;\n    } else {\n      mutableRef.current.isDragging = false;\n      mutableRef.current.lastInputType = 'drag';\n\n      if (mutableRef.current.flickTarget) {\n        var _mutableRef$current$f2 = mutableRef.current.flickTarget,\n            _targetX = _mutableRef$current$f2.targetX,\n            _targetY = _mutableRef$current$f2.targetY;\n\n        if (!mutableRef.current.isTouching) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = false;\n          start({\n            targetX: _targetX,\n            targetY: _targetY,\n            overscrollEffect: overscrollEffectOn && overscrollEffectOn.drag\n          });\n        } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n          checkAndApplyOverscrollEffectOnDrag(_targetX, _targetY, overscrollTypeOnce);\n        }\n      } else if (!mutableRef.current.isTouching) {\n        stop();\n      }\n\n      if (mutableRef.current.overscrollEnabled) {\n        // not check overscrollEffectOn && overscrollEffectOn.drag for safety\n        clearAllOverscrollEffects();\n      }\n\n      mutableRef.current.isTouching = false;\n      mutableRef.current.flickTarget = null;\n    }\n  }\n\n  function onFlick(ev) {\n    var isVerticalFlick = ev.direction === 'vertical';\n\n    if (scrollMode === 'translate' || !mutableRef.current.isTouching) {\n      // except touch input in 'native' mode\n      mutableRef.current.flickTarget = mutableRef.current.animator.simulate(mutableRef.current.scrollLeft, mutableRef.current.scrollTop, direction !== 'vertical' && !isVerticalFlick ? getRtlX(-ev.velocityX) : 0, direction !== 'horizontal' && isVerticalFlick ? -ev.velocityY : 0);\n    } else if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.drag) {\n      // overscroll is required on touch input in 'native' mode\n      mutableRef.current.flickTarget = {\n        targetX: mutableRef.current.scrollLeft + (!isVerticalFlick ? getRtlX(-ev.velocityX) : 0) * overscrollVelocityFactor,\n        // 'horizontal' or 'both'\n        targetY: mutableRef.current.scrollTop + (isVerticalFlick ? -ev.velocityY : 0) * overscrollVelocityFactor // 'vertical' or 'both'\n\n      };\n    }\n\n    if (props.onFlick) {\n      (0, _handle.forward)('onFlick', ev, props);\n    }\n  }\n\n  function calculateDistanceByWheel(deltaMode, delta, maxPixel) {\n    if (deltaMode === 0) {\n      delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * mutableRef.current.scrollWheelMultiplierForDeltaPixel));\n    } else if (deltaMode === 1) {\n      // line; firefox\n      delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * mutableRef.current.pixelPerLine * mutableRef.current.scrollWheelMultiplierForDeltaPixel));\n    } else if (deltaMode === 2) {\n      // page\n      delta = delta < 0 ? -maxPixel : maxPixel;\n    }\n\n    return delta;\n  }\n  /*\n   * wheel event handler;\n   * - for horizontal scroll, supports wheel action on any children nodes since web engine cannot support this\n   * - for vertical scroll, supports wheel action on scrollbars only\n   */\n\n\n  function onWheel(ev) {\n    if (mutableRef.current.isDragging) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else {\n      var bounds = getScrollBounds(),\n          canScrollH = canScrollHorizontally(bounds),\n          canScrollV = canScrollVertically(bounds),\n          eventDeltaMode = ev.deltaMode,\n          eventDelta = -ev.wheelDeltaY || ev.deltaY;\n      var delta = 0;\n      mutableRef.current.lastInputType = 'wheel';\n\n      if (noScrollByWheel) {\n        if (scrollMode === 'native' && canScrollV) {\n          ev.preventDefault();\n        }\n\n        return;\n      }\n\n      if (snapToCenter) {\n        if (scrollMode === 'native' && (canScrollV || canScrollH)) {\n          ev.preventDefault();\n          (0, _handle.forward)('onWheel', ev, props);\n          return;\n        }\n      }\n\n      if (scrollMode === 'translate') {\n        if (canScrollV) {\n          delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n        } else if (canScrollH) {\n          delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n        }\n\n        var dir = Math.sign(delta);\n\n        if (dir !== mutableRef.current.wheelDirection) {\n          mutableRef.current.isScrollAnimationTargetAccumulated = false;\n          mutableRef.current.wheelDirection = dir;\n        }\n\n        (0, _handle.forward)('onWheel', {\n          delta: delta,\n          horizontalScrollbarHandle: horizontalScrollbarHandle,\n          verticalScrollbarHandle: verticalScrollbarHandle\n        }, props);\n\n        if (delta !== 0) {\n          scrollToAccumulatedTarget(delta, canScrollV, overscrollEffectOn && overscrollEffectOn.wheel);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n      } else {\n        // scrollMode 'native'\n        var overscrollEffectRequired = mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn.wheel;\n        var needToHideScrollbarTrack = false;\n\n        if (props.onWheel) {\n          (0, _handle.forward)('onWheel', ev, props);\n          return;\n        }\n\n        showScrollbarTrack(bounds); // FIXME This routine is a temporary support for horizontal wheel scroll.\n        // FIXME If web engine supports horizontal wheel, this routine should be refined or removed.\n\n        if (canScrollV) {\n          // This routine handles wheel events on scrollbars for vertical scroll.\n          if (eventDelta < 0 && mutableRef.current.scrollTop > 0 || eventDelta > 0 && mutableRef.current.scrollTop < bounds.maxTop) {\n            // Not to check if ev.target is a descendant of a wrapped component which may have a lot of nodes in it.\n            if (horizontalScrollbarHandle.current && horizontalScrollbarHandle.current.getContainerRef && _utilDOM[\"default\"].containsDangerously(horizontalScrollbarHandle.current.getContainerRef(), ev.target) || verticalScrollbarHandle.current && verticalScrollbarHandle.current.getContainerRef && _utilDOM[\"default\"].containsDangerously(verticalScrollbarHandle.current.getContainerRef(), ev.target)) {\n              delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n              needToHideScrollbarTrack = !delta;\n              ev.preventDefault();\n            } else if (overscrollEffectRequired) {\n              checkAndApplyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n\n            ev.stopPropagation();\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && mutableRef.current.scrollTop <= 0 || eventDelta > 0 && mutableRef.current.scrollTop >= bounds.maxTop)) {\n              applyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n\n            needToHideScrollbarTrack = true;\n          }\n        } else if (canScrollH) {\n          // this routine handles wheel events on any children for horizontal scroll.\n          if (eventDelta < 0 && mutableRef.current.scrollLeft > 0 || eventDelta > 0 && mutableRef.current.scrollLeft < bounds.maxLeft) {\n            delta = calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n            needToHideScrollbarTrack = !delta;\n            ev.preventDefault();\n            ev.stopPropagation();\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && mutableRef.current.scrollLeft <= 0 || eventDelta > 0 && mutableRef.current.scrollLeft >= bounds.maxLeft)) {\n              applyOverscrollEffect('horizontal', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n\n            needToHideScrollbarTrack = true;\n          }\n        }\n\n        if (delta !== 0) {\n          var _dir = Math.sign(delta); // Not to accumulate scroll position if wheel direction is different from hold direction\n\n\n          if (_dir !== mutableRef.current.wheelDirection) {\n            mutableRef.current.isScrollAnimationTargetAccumulated = false;\n            mutableRef.current.wheelDirection = _dir;\n          }\n\n          scrollToAccumulatedTarget(delta, canScrollV, overscrollEffectOn && overscrollEffectOn.wheel);\n        }\n\n        if (needToHideScrollbarTrack) {\n          startHidingScrollbarTrack();\n        }\n      }\n    }\n  } // scrollMode 'translate' [[\n\n\n  function scrollByPage(keyCode) {\n    var bounds = getScrollBounds(),\n        canScrollV = canScrollVertically(bounds),\n        pageDistance = (isPageUp(keyCode) ? -1 : 1) * (canScrollV ? bounds.clientHeight : bounds.clientWidth) * paginationPageMultiplier;\n    mutableRef.current.lastInputType = 'pageKey';\n    scrollToAccumulatedTarget(pageDistance, canScrollV, overscrollEffectOn && overscrollEffectOn.pageKey);\n  } // scrollMode 'translate' ]]\n  // scrollMode 'native' [[\n\n\n  function onScroll(ev) {\n    var _ev$target = ev.target,\n        scrollLeft = _ev$target.scrollLeft,\n        scrollTop = _ev$target.scrollTop;\n    var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds);\n\n    if (!mutableRef.current.scrolling) {\n      scrollStartOnScroll();\n    }\n\n    if (rtl && canScrollH) {\n      scrollLeft = _platform.platform.ios || _platform.platform.safari || _platform.platform.chrome >= 85 ? -scrollLeft : bounds.maxLeft - scrollLeft;\n    }\n\n    if (scrollLeft !== mutableRef.current.scrollLeft) {\n      setScrollLeft(scrollLeft);\n    }\n\n    if (scrollTop !== mutableRef.current.scrollTop) {\n      setScrollTop(scrollTop);\n    }\n\n    if (scrollContentHandle.current.didScroll) {\n      scrollContentHandle.current.didScroll(mutableRef.current.scrollLeft, mutableRef.current.scrollTop);\n    }\n\n    forwardScrollEvent('onScroll');\n    mutableRef.current.scrollStopJob.start();\n  } // scrollMode 'native' ]]\n\n\n  function onKeyDown(ev) {\n    if (scrollMode === 'translate') {\n      if (props.onKeyDown) {\n        (0, _handle.forward)('onKeyDown', ev, props);\n      } else if (isPageUp(ev.keyCode) || isPageDown(ev.keyCode)) {\n        scrollByPage(ev.keyCode);\n      }\n    } else {\n      (0, _handle.forward)('onKeyDown', ev, props);\n    }\n  }\n\n  function scrollToAccumulatedTarget(delta, vertical, overscrollEffect) {\n    if (!mutableRef.current.isScrollAnimationTargetAccumulated) {\n      mutableRef.current.accumulatedTargetX = mutableRef.current.scrollLeft;\n      mutableRef.current.accumulatedTargetY = mutableRef.current.scrollTop;\n      mutableRef.current.isScrollAnimationTargetAccumulated = true;\n    }\n\n    if (vertical) {\n      mutableRef.current.accumulatedTargetY += delta;\n    } else {\n      mutableRef.current.accumulatedTargetX += delta;\n    }\n\n    start({\n      targetX: mutableRef.current.accumulatedTargetX,\n      targetY: mutableRef.current.accumulatedTargetY,\n      overscrollEffect: overscrollEffect\n    });\n  } // overscroll effect\n\n\n  function getEdgeFromPosition(position, maxPosition) {\n    if (position <= 0) {\n      return 'before';\n    } else if (position >= maxPosition - epsilon) {\n      return 'after';\n    } else {\n      return null;\n    }\n  }\n\n  function setOverscrollStatus(orientation, edge, overscrollEffectType, ratio) {\n    var status = mutableRef.current.overscrollStatus[orientation][edge];\n    status.type = overscrollEffectType;\n    status.ratio = ratio;\n  }\n\n  function getOverscrollStatus(orientation, edge) {\n    return mutableRef.current.overscrollStatus[orientation][edge];\n  }\n\n  function calculateOverscrollRatio(orientation, position) {\n    var bounds = getScrollBounds(),\n        isVertical = orientation === 'vertical',\n        baseSize = isVertical ? bounds.clientHeight : bounds.clientWidth,\n        maxPos = bounds[isVertical ? 'maxTop' : 'maxLeft'];\n    var overDistance = 0;\n\n    if (position < 0) {\n      overDistance = -position;\n    } else if (position > maxPos) {\n      overDistance = position - maxPos;\n    } else {\n      return 0;\n    }\n\n    return Math.min(1, 2 * overDistance / baseSize);\n  }\n\n  function applyOverscrollEffect(orientation, edge, overscrollEffectType) {\n    var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : overscrollDefaultRatio;\n    props.applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n    setOverscrollStatus(orientation, edge, overscrollEffectType === overscrollTypeOnce ? overscrollTypeDone : overscrollEffectType, ratio);\n  }\n\n  function checkAndApplyOverscrollEffect(orientation, edge, overscrollEffectType) {\n    var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : overscrollDefaultRatio;\n    var isVertical = orientation === 'vertical',\n        curPos = isVertical ? mutableRef.current.scrollTop : mutableRef.current.scrollLeft,\n        maxPos = getScrollBounds()[isVertical ? 'maxTop' : 'maxLeft'];\n\n    if (edge === 'before' && curPos <= 0 || edge === 'after' && curPos >= maxPos - epsilon) {\n      // Already on the edge\n      applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n    } else {\n      setOverscrollStatus(orientation, edge, overscrollEffectType, ratio);\n    }\n  }\n\n  function clearOverscrollEffect(orientation, edge) {\n    if (getOverscrollStatus(orientation, edge).type !== overscrollTypeNone) {\n      if (props.clearOverscrollEffect) {\n        props.clearOverscrollEffect(orientation, edge);\n      } else {\n        applyOverscrollEffect(orientation, edge, overscrollTypeNone, 0);\n      }\n    }\n  }\n\n  function clearAllOverscrollEffects() {\n    ['horizontal', 'vertical'].forEach(function (orientation) {\n      ['before', 'after'].forEach(function (edge) {\n        clearOverscrollEffect(orientation, edge);\n      });\n    });\n  }\n\n  function applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollEffectType) {\n    if (edge) {\n      var oppositeEdge = edge === 'before' ? 'after' : 'before',\n          ratio = calculateOverscrollRatio(orientation, targetPosition);\n      applyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n      clearOverscrollEffect(orientation, oppositeEdge);\n    } else {\n      clearOverscrollEffect(orientation, 'before');\n      clearOverscrollEffect(orientation, 'after');\n    }\n  } // scrollMode 'native' [[\n\n\n  function checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollEffectType) {\n    var bounds = getScrollBounds();\n\n    if (canScrollHorizontally(bounds)) {\n      applyOverscrollEffectOnDrag('horizontal', getEdgeFromPosition(targetX, bounds.maxLeft), targetX, overscrollEffectType);\n    }\n\n    if (canScrollVertically(bounds)) {\n      applyOverscrollEffectOnDrag('vertical', getEdgeFromPosition(targetY, bounds.maxTop), targetY, overscrollEffectType);\n    }\n  } // scrollMode 'native' ]]\n\n\n  function checkAndApplyOverscrollEffectOnScroll(orientation) {\n    ['before', 'after'].forEach(function (edge) {\n      var _getOverscrollStatus = getOverscrollStatus(orientation, edge),\n          ratio = _getOverscrollStatus.ratio,\n          overscrollEffectType = _getOverscrollStatus.type;\n\n      if (overscrollEffectType === overscrollTypeOnce) {\n        checkAndApplyOverscrollEffect(orientation, edge, overscrollEffectType, ratio);\n      }\n    });\n  }\n\n  function checkAndApplyOverscrollEffectOnStart(orientation, edge, targetPosition) {\n    if (mutableRef.current.isDragging) {\n      applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollTypeHold);\n    } else if (edge) {\n      checkAndApplyOverscrollEffect(orientation, edge, overscrollTypeOnce);\n    }\n  } // call scroll callbacks\n\n\n  var addObserverOnScroll = (0, _react.useCallback)(function (fn) {\n    var observerOnScroll = mutableRef.current.observerOnScroll;\n\n    if (typeof fn === 'function' && !observerOnScroll.includes(fn)) {\n      observerOnScroll.push(fn);\n    }\n  }, []);\n  var removeObserverOnScroll = (0, _react.useCallback)(function (fn) {\n    var observerOnScroll = mutableRef.current.observerOnScroll;\n    var index = observerOnScroll.indexOf(fn);\n\n    if (index !== -1) {\n      observerOnScroll.splice(index, 1);\n    }\n  }, []);\n\n  function forwardScrollEvent(type, reachedEdgeInfo) {\n    var data = {\n      scrollLeft: mutableRef.current.scrollLeft,\n      scrollTop: mutableRef.current.scrollTop,\n      moreInfo: getMoreInfo(),\n      reachedEdgeInfo: reachedEdgeInfo\n    };\n    (0, _handle.forward)(type, data, props);\n\n    if (type === 'onScroll') {\n      mutableRef.current.observerOnScroll.forEach(function (fn) {\n        return fn(data);\n      });\n    }\n  } // scrollMode 'native' [[\n  // call scroll callbacks and update scrollbars for native scroll\n\n\n  function scrollStartOnScroll() {\n    mutableRef.current.scrolling = true;\n    showScrollbarTrack(getScrollBounds());\n    forwardScrollEvent('onScrollStart');\n  }\n\n  function scrollStopOnScroll() {\n    if (props.scrollStopOnScroll) {\n      props.scrollStopOnScroll();\n    }\n\n    if (mutableRef.current.overscrollEnabled && !mutableRef.current.isDragging) {\n      // not check overscrollEffectOn && overscrollEffectOn for safety\n      clearAllOverscrollEffects();\n    }\n\n    mutableRef.current.lastInputType = null;\n    mutableRef.current.isScrollAnimationTargetAccumulated = false;\n    mutableRef.current.scrolling = false;\n    forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n    startHidingScrollbarTrack();\n  } // scrollMode 'native' ]]\n  // update scroll position\n\n\n  function setScrollLeft(value) {\n    var bounds = getScrollBounds();\n    mutableRef.current.scrollLeft = (0, _clamp[\"default\"])(0, bounds.maxLeft, value);\n\n    if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn[mutableRef.current.lastInputType]) {\n      checkAndApplyOverscrollEffectOnScroll('horizontal');\n    }\n\n    if (isHorizontalScrollbarVisible) {\n      updateScrollbarTrack(horizontalScrollbarHandle, bounds);\n    }\n  }\n\n  function setScrollTop(value) {\n    var bounds = getScrollBounds();\n    mutableRef.current.scrollTop = (0, _clamp[\"default\"])(0, bounds.maxTop, value);\n\n    if (mutableRef.current.overscrollEnabled && overscrollEffectOn && overscrollEffectOn[mutableRef.current.lastInputType]) {\n      checkAndApplyOverscrollEffectOnScroll('vertical');\n    }\n\n    if (isVerticalScrollbarVisible) {\n      updateScrollbarTrack(verticalScrollbarHandle, bounds);\n    }\n  }\n\n  function getReachedEdgeInfo() {\n    var bounds = getScrollBounds(),\n        reachedEdgeInfo = {\n      bottom: false,\n      left: false,\n      right: false,\n      top: false\n    };\n\n    if (canScrollHorizontally(bounds)) {\n      var edge = getEdgeFromPosition(mutableRef.current.scrollLeft, bounds.maxLeft);\n\n      if (edge) {\n        // if edge is null, no need to check which edge is reached.\n        if (edge === 'before' && !rtl || edge === 'after' && rtl) {\n          reachedEdgeInfo.left = true;\n        } else {\n          reachedEdgeInfo.right = true;\n        }\n      }\n    }\n\n    if (canScrollVertically(bounds)) {\n      var _edge = getEdgeFromPosition(mutableRef.current.scrollTop, bounds.maxTop);\n\n      if (_edge === 'before') {\n        reachedEdgeInfo.top = true;\n      } else if (_edge === 'after') {\n        reachedEdgeInfo.bottom = true;\n      }\n    }\n\n    return reachedEdgeInfo;\n  } // scroll start/stop\n  // scrollMode 'translate' [[\n\n\n  function doScrollStop() {\n    mutableRef.current.scrolling = false;\n    forwardScrollEvent('onScrollStop', getReachedEdgeInfo());\n  } // scrollMode 'translate' ]]\n\n\n  function start(_ref2) {\n    var targetX = _ref2.targetX,\n        targetY = _ref2.targetY,\n        _ref2$animate = _ref2.animate,\n        animate = _ref2$animate === void 0 ? true : _ref2$animate,\n        _ref2$duration = _ref2.duration,\n        duration = _ref2$duration === void 0 ? animationDuration : _ref2$duration,\n        _ref2$overscrollEffec = _ref2.overscrollEffect,\n        overscrollEffect = _ref2$overscrollEffec === void 0 ? false : _ref2$overscrollEffec;\n    var _mutableRef$current3 = mutableRef.current,\n        scrollLeft = _mutableRef$current3.scrollLeft,\n        scrollTop = _mutableRef$current3.scrollTop,\n        bounds = getScrollBounds(),\n        maxLeft = bounds.maxLeft,\n        maxTop = bounds.maxTop;\n    var updatedAnimationInfo = scrollMode === 'translate' ? {\n      sourceX: scrollLeft,\n      sourceY: scrollTop,\n      targetX: targetX,\n      targetY: targetY,\n      duration: duration\n    } : {\n      targetX: targetX,\n      targetY: targetY\n    }; // bail early when scrolling to the same position\n\n    if ((scrollMode === 'translate' && mutableRef.current.animator.isAnimating() || scrollMode === 'native' && mutableRef.current.scrolling) && mutableRef.current.animationInfo && mutableRef.current.animationInfo.targetX === targetX && mutableRef.current.animationInfo.targetY === targetY) {\n      return;\n    }\n\n    mutableRef.current.animationInfo = updatedAnimationInfo;\n\n    if (scrollMode === 'translate') {\n      mutableRef.current.animator.stop();\n\n      if (!mutableRef.current.scrolling) {\n        mutableRef.current.scrolling = true;\n        forwardScrollEvent('onScrollStart');\n      }\n\n      mutableRef.current.scrollStopJob.stop();\n    }\n\n    if (Math.abs(maxLeft - targetX) < epsilon) {\n      targetX = maxLeft;\n    }\n\n    if (Math.abs(maxTop - targetY) < epsilon) {\n      targetY = maxTop;\n    }\n\n    if (mutableRef.current.overscrollEnabled && overscrollEffect) {\n      if (scrollLeft !== targetX && canScrollHorizontally(bounds)) {\n        checkAndApplyOverscrollEffectOnStart('horizontal', getEdgeFromPosition(targetX, maxLeft), targetX);\n      }\n\n      if (scrollTop !== targetY && canScrollVertically(bounds)) {\n        checkAndApplyOverscrollEffectOnStart('vertical', getEdgeFromPosition(targetY, maxTop), targetY);\n      }\n    }\n\n    if (scrollMode === 'translate') {\n      showScrollbarTrack(bounds);\n\n      if (scrollContentHandle.current && scrollContentHandle.current.setScrollPositionTarget) {\n        scrollContentHandle.current.setScrollPositionTarget(targetX, targetY);\n      }\n\n      if (animate) {\n        mutableRef.current.animator.animate(scrollAnimation(mutableRef.current.animationInfo));\n      } else {\n        scroll(targetX, targetY);\n        stop();\n      }\n    } else {\n      // scrollMode 'native'\n      if (animate) {\n        scrollContentHandle.current.scrollToPosition(targetX, targetY);\n      } else {\n        scrollContentRef.current.style.scrollBehavior = null;\n        scrollContentHandle.current.scrollToPosition(targetX, targetY);\n        scrollContentRef.current.style.scrollBehavior = 'smooth';\n      }\n\n      if (props.start) {\n        props.start(animate);\n      }\n    }\n  } // scrollMode 'translate' [[\n\n\n  function scrollAnimation(animationInfo) {\n    return function (curTime) {\n      var sourceX = animationInfo.sourceX,\n          sourceY = animationInfo.sourceY,\n          targetX = animationInfo.targetX,\n          targetY = animationInfo.targetY,\n          duration = animationInfo.duration,\n          bounds = getScrollBounds();\n\n      if (curTime < duration) {\n        var toBeContinued = false,\n            curTargetX = sourceX,\n            curTargetY = sourceY;\n\n        if (canScrollHorizontally(bounds)) {\n          curTargetX = mutableRef.current.animator.timingFunction(sourceX, targetX, duration, curTime);\n\n          if (Math.abs(curTargetX - targetX) < epsilon) {\n            curTargetX = targetX;\n          } else {\n            toBeContinued = true;\n          }\n        }\n\n        if (canScrollVertically(bounds)) {\n          curTargetY = mutableRef.current.animator.timingFunction(sourceY, targetY, duration, curTime);\n\n          if (Math.abs(curTargetY - targetY) < epsilon) {\n            curTargetY = targetY;\n          } else {\n            toBeContinued = true;\n          }\n        }\n\n        scroll(curTargetX, curTargetY);\n\n        if (!toBeContinued) {\n          stop();\n        }\n      } else {\n        scroll(targetX, targetY);\n        stop();\n      }\n    };\n  }\n\n  function scroll(left, top) {\n    if (left !== mutableRef.current.scrollLeft) {\n      setScrollLeft(left);\n    }\n\n    if (top !== mutableRef.current.scrollTop) {\n      setScrollTop(top);\n    }\n\n    scrollContentHandle.current.setScrollPosition(mutableRef.current.scrollLeft, mutableRef.current.scrollTop, rtl);\n    forwardScrollEvent('onScroll');\n  } // scrollMode 'translate' ]]\n\n\n  function stopForTranslate() {\n    mutableRef.current.animator.stop();\n    mutableRef.current.lastInputType = null;\n    mutableRef.current.isScrollAnimationTargetAccumulated = false;\n    startHidingScrollbarTrack();\n\n    if (mutableRef.current.overscrollEnabled && !mutableRef.current.isDragging) {\n      // not check overscrollEffectOn && overscrollEffectOn for safety\n      clearAllOverscrollEffects();\n    }\n\n    if (props.stop) {\n      props.stop();\n    }\n\n    if (mutableRef.current.scrolling) {\n      mutableRef.current.scrollStopJob.start();\n    }\n  }\n\n  function stopForNative() {\n    scrollContentRef.current.style.scrollBehavior = null;\n    scrollContentHandle.current.scrollToPosition(mutableRef.current.scrollLeft + (rtl ? -0.1 : 0.1), mutableRef.current.scrollTop + 0.1);\n    scrollContentRef.current.style.scrollBehavior = 'smooth';\n  }\n\n  function stop() {\n    if (scrollMode === 'translate') {\n      stopForTranslate();\n    } else {\n      stopForNative();\n    }\n  } // scrollTo API\n\n\n  function getPositionForScrollTo(opt) {\n    var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds),\n        canScrollV = canScrollVertically(bounds);\n    var itemPos,\n        left = null,\n        top = null;\n\n    if (opt instanceof Object) {\n      if (opt.position instanceof Object) {\n        if (canScrollH) {\n          // We need '!=' to check if opt.position.x is null or undefined\n          left = opt.position.x != null ? opt.position.x : mutableRef.current.scrollLeft;\n        } else {\n          left = 0;\n        }\n\n        if (canScrollV) {\n          // We need '!=' to check if opt.position.y is null or undefined\n          top = opt.position.y != null ? opt.position.y : mutableRef.current.scrollTop;\n        } else {\n          top = 0;\n        }\n      } else if (typeof opt.align === 'string') {\n        if (canScrollH) {\n          if (opt.align.includes('left')) {\n            left = 0;\n          } else if (opt.align.includes('right')) {\n            left = bounds.maxLeft;\n          }\n        }\n\n        if (canScrollV) {\n          if (opt.align.includes('top')) {\n            top = 0;\n          } else if (opt.align.includes('bottom')) {\n            top = bounds.maxTop;\n          }\n        }\n      } else {\n        if (typeof opt.index === 'number' && typeof scrollContentHandle.current.getItemPosition === 'function') {\n          itemPos = scrollContentHandle.current.getItemPosition(opt.index, opt.stickTo, opt.offset);\n        } else if (opt.node instanceof Object) {\n          if (opt.node.nodeType === 1 && typeof scrollContentHandle.current.getNodePosition === 'function') {\n            itemPos = scrollContentHandle.current.getNodePosition(opt.node);\n          }\n        }\n\n        if (itemPos) {\n          if (canScrollH) {\n            left = itemPos.left;\n          }\n\n          if (canScrollV) {\n            top = itemPos.top;\n          }\n        }\n      }\n    }\n\n    return {\n      left: left,\n      top: top\n    };\n  }\n\n  function scrollTo(opt) {\n    if (!mutableRef.current.deferScrollTo) {\n      var _getPositionForScroll = getPositionForScrollTo(opt),\n          left = _getPositionForScroll.left,\n          top = _getPositionForScroll.top;\n\n      var targetX = left !== null ? left : mutableRef.current.scrollLeft;\n      var targetY = top !== null ? top : mutableRef.current.scrollTop;\n\n      if (props.scrollTo) {\n        props.scrollTo(opt);\n      }\n\n      mutableRef.current.scrollToInfo = null;\n\n      if (scrollMode === 'native' && scrollContentHandle.current && scrollContentHandle.current.setScrollToPositionTarget) {\n        scrollContentHandle.current.setScrollToPositionTarget(targetX, targetY);\n      }\n\n      start({\n        targetX: targetX,\n        targetY: targetY,\n        animate: opt.animate\n      });\n    } else {\n      mutableRef.current.scrollToInfo = opt;\n    }\n  }\n\n  function canScrollHorizontally(bounds) {\n    return (direction === 'horizontal' || direction === 'both') && bounds.scrollWidth > bounds.clientWidth && !isNaN(bounds.scrollWidth);\n  }\n\n  function canScrollVertically(bounds) {\n    return (direction === 'vertical' || direction === 'both') && bounds.scrollHeight > bounds.clientHeight && !isNaN(bounds.scrollHeight);\n  } // scroll bar\n\n\n  function showScrollbarTrack(bounds) {\n    if (isHorizontalScrollbarVisible && canScrollHorizontally(bounds) && horizontalScrollbarHandle.current) {\n      horizontalScrollbarHandle.current.showScrollbarTrack();\n    }\n\n    if (isVerticalScrollbarVisible && canScrollVertically(bounds) && verticalScrollbarHandle.current) {\n      verticalScrollbarHandle.current.showScrollbarTrack();\n    }\n  }\n\n  function updateScrollbarTrack(scrollbarRef, bounds) {\n    scrollbarRef.current.update(_objectSpread(_objectSpread({}, bounds), {}, {\n      scrollLeft: mutableRef.current.scrollLeft,\n      scrollTop: mutableRef.current.scrollTop\n    }));\n  }\n\n  function startHidingScrollbarTrack() {\n    if (isHorizontalScrollbarVisible && horizontalScrollbarHandle.current) {\n      horizontalScrollbarHandle.current.startHidingScrollbarTrack();\n    }\n\n    if (isVerticalScrollbarVisible && verticalScrollbarHandle.current) {\n      verticalScrollbarHandle.current.startHidingScrollbarTrack();\n    }\n  }\n\n  function updateScrollbars() {\n    var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds),\n        canScrollV = canScrollVertically(bounds),\n        curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollH : horizontalScrollbar === 'visible',\n        curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollV : verticalScrollbar === 'visible'; // determine if we should hide or show any scrollbars\n\n    var isVisibilityChanged = isHorizontalScrollbarVisible !== curHorizontalScrollbarVisible || isVerticalScrollbarVisible !== curVerticalScrollbarVisible;\n\n    if (isVisibilityChanged) {\n      // one or both scrollbars have changed visibility\n      setIsHorizontalScrollbarVisible(curHorizontalScrollbarVisible);\n      setIsVerticalScrollbarVisible(curVerticalScrollbarVisible);\n    } else {\n      mutableRef.current.deferScrollTo = false;\n      updateScrollbarTrackSize();\n    }\n  }\n\n  function updateScrollbarTrackSize() {\n    var bounds = getScrollBounds(),\n        canScrollH = canScrollHorizontally(bounds),\n        canScrollV = canScrollVertically(bounds),\n        curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollH : horizontalScrollbar === 'visible',\n        curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollV : verticalScrollbar === 'visible';\n\n    if (curHorizontalScrollbarVisible || curVerticalScrollbarVisible) {\n      // no visibility change but need to notify whichever scrollbars are visible of the\n      // updated bounds and scroll position\n      var updatedBounds = _objectSpread(_objectSpread({}, bounds), {}, {\n        scrollLeft: mutableRef.current.scrollLeft,\n        scrollTop: mutableRef.current.scrollTop\n      });\n\n      if (curHorizontalScrollbarVisible && horizontalScrollbarHandle.current) {\n        horizontalScrollbarHandle.current.update(updatedBounds);\n      }\n\n      if (curVerticalScrollbarVisible && verticalScrollbarHandle.current) {\n        verticalScrollbarHandle.current.update(updatedBounds);\n      }\n\n      return true;\n    }\n\n    return false;\n  } // ref\n\n\n  function getScrollBounds() {\n    if (scrollContentHandle.current && typeof scrollContentHandle.current.getScrollBounds === 'function') {\n      return scrollContentHandle.current.getScrollBounds();\n    }\n  }\n\n  function getMoreInfo() {\n    if (scrollContentHandle.current && typeof scrollContentHandle.current.getMoreInfo === 'function') {\n      return scrollContentHandle.current.getMoreInfo();\n    }\n  } // FIXME setting event handlers directly to work on the V8 snapshot.\n\n\n  function addEventListeners() {\n    (0, _utilEvent[\"default\"])('wheel').addEventListener(scrollContainerRef, onWheel);\n    (0, _utilEvent[\"default\"])('keydown').addEventListener(scrollContainerRef, onKeyDown);\n    (0, _utilEvent[\"default\"])('mousedown').addEventListener(scrollContainerRef, onMouseDown); // scrollMode 'native' [[\n\n    if (scrollMode === 'native' && scrollContentRef.current) {\n      (0, _utilEvent[\"default\"])('scroll').addEventListener(scrollContentRef, onScroll, {\n        passive: true\n      });\n      scrollContentRef.current.style.scrollBehavior = 'smooth';\n    } // scrollMode 'native' ]]\n\n\n    if (props.addEventListeners) {\n      props.addEventListeners(scrollContentRef);\n    }\n\n    if (window) {\n      (0, _utilEvent[\"default\"])('resize').addEventListener(window, handleResizeWindow);\n    }\n  } // FIXME setting event handlers directly to work on the V8 snapshot.\n\n\n  function removeEventListeners() {\n    (0, _utilEvent[\"default\"])('wheel').removeEventListener(scrollContainerRef, onWheel);\n    (0, _utilEvent[\"default\"])('keydown').removeEventListener(scrollContainerRef, onKeyDown);\n    (0, _utilEvent[\"default\"])('mousedown').removeEventListener(scrollContainerRef, onMouseDown); // scrollMode 'native' [[\n\n    (0, _utilEvent[\"default\"])('scroll').removeEventListener(scrollContentRef, onScroll, {\n      passive: true\n    }); // scrollMode 'native' ]]\n\n    if (props.removeEventListeners) {\n      props.removeEventListeners(scrollContentRef);\n    }\n\n    (0, _utilEvent[\"default\"])('resize').removeEventListener(window, handleResizeWindow);\n  } // render\n  // scrollMode 'translate' [[\n\n\n  function handleScroll() {\n    // Prevent scroll by focus.\n    // VirtualList and VirtualGridList DO NOT receive `onscroll` event.\n    // Only Scroller could get `onscroll` event.\n    if (!mutableRef.current.animator.isAnimating() && scrollContentHandle.current && scrollContentRef.current && scrollContentHandle.current.getRtlPositionX) {\n      // For Scroller\n      scrollContentRef.current.scrollTop = mutableRef.current.scrollTop;\n      scrollContentRef.current.scrollLeft = scrollContentHandle.current.getRtlPositionX(mutableRef.current.scrollLeft);\n    }\n  } // scrollMode 'translate' ]]\n\n\n  function scrollContainerContainsDangerously(target) {\n    return _utilDOM[\"default\"].containsDangerously(scrollContainerRef, target);\n  }\n\n  assignProperties('scrollContainerProps', _objectSpread(_objectSpread({}, rest), {}, {\n    className: [scrollClasses]\n  }));\n  assignProperties('scrollInnerContainerProps', {\n    className: [_useScrollModule[\"default\"].scrollInnerContainer]\n  });\n  assignProperties('scrollContentWrapperProps', _objectSpread({\n    className: scrollMode === 'translate' ? [_useScrollModule[\"default\"].scrollContentWrapper] : [_useScrollModule[\"default\"].scrollContentWrapper, _useScrollModule[\"default\"].scrollContentWrapperNative]\n  }, !noScrollByDrag && {\n    flickConfig: flickConfig,\n    onDrag: onDrag,\n    onDragEnd: onDragEnd,\n    onDragStart: onDragStart,\n    onFlick: onFlick,\n    onTouchStart: scrollMode === 'native' ? onTouchStart : null // scrollMode 'native'\n\n  }));\n  var voiceProps = {\n    'data-webos-voice-disabled': voiceDisabled,\n    'data-webos-voice-focused': voiceFocused,\n    'data-webos-voice-group-label': voiceGroupLabel\n  };\n  var scrollContentProps = props.itemRenderer ? // If the child component is a VirtualList\n  {\n    childProps: childProps,\n    clientSize: clientSize,\n    dataSize: dataSize,\n    itemRenderer: itemRenderer,\n    itemSize: itemSize,\n    itemSizes: itemSizes,\n    overhang: overhang,\n    pageScroll: pageScroll,\n    spacing: spacing,\n    wrap: wrap\n  } : {\n    children: children\n  };\n  assignProperties('scrollContentProps', _objectSpread(_objectSpread(_objectSpread({}, scrollContentProps), voiceProps), {}, {\n    cbScrollTo: scrollTo,\n    className: [_useScrollModule[\"default\"].scrollFill],\n    direction: direction,\n\n    get isHorizontalScrollbarVisible() {\n      return isHorizontalScrollbarVisible;\n    },\n\n    get isVerticalScrollbarVisible() {\n      return isVerticalScrollbarVisible;\n    },\n\n    onScroll: scrollMode === 'translate' ? handleScroll : null,\n    role: role,\n    rtl: rtl,\n    scrollContainerContainsDangerously: scrollContainerContainsDangerously,\n    scrollMode: scrollMode\n  }));\n  assignProperties('verticalScrollbarProps', {\n    clientSize: clientSize,\n    disabled: !isVerticalScrollbarVisible,\n    rtl: rtl,\n    vertical: true\n  });\n  assignProperties('horizontalScrollbarProps', {\n    clientSize: clientSize,\n    corner: isVerticalScrollbarVisible,\n    disabled: !isHorizontalScrollbarVisible,\n    rtl: rtl,\n    vertical: false\n  });\n  assignProperties('resizeContextProps', {\n    value: mutableRef.current.resizeRegistry.register\n  });\n  mutableRef.current.deferScrollTo = true;\n  mutableRef.current.prevState = {\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible\n  };\n  return {\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible,\n    scrollContentWrapper: noScrollByDrag ? 'div' : TouchableDiv,\n    scrollObserver: {\n      addObserverOnScroll: addObserverOnScroll,\n      removeObserverOnScroll: removeObserverOnScroll\n    }\n  };\n};\n\nexports.useScrollBase = useScrollBase;\n\nvar assignPropertiesOf = function assignPropertiesOf(instance) {\n  return function (name, properties) {\n    if (!instance[name]) {\n      instance[name] = {};\n    }\n\n    if (typeof properties === 'object') {\n      for (var property in properties) {\n        if (property === 'className') {\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(Array.isArray(properties.className), 'Unsupported other types for `className` prop except Array') : void 0;\n          instance[name].className = (0, _classnames[\"default\"])(instance[name].className, properties.className);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(!instance[name][property], 'Unsupported to push value in the same ' + property + ' prop.') : void 0; // Override the previous value.\n\n          instance[name][property] = properties[property];\n        }\n      }\n    }\n  };\n};\n\nexports.assignPropertiesOf = assignPropertiesOf;\n\nvar useScroll = function useScroll(props) {\n  // Mutable value\n  var scrollContainerRef = (0, _react.useRef)({});\n  var scrollContentHandle = (0, _react.useRef)({});\n  var scrollContentRef = (0, _react.useRef)({});\n  var itemRefs = (0, _react.useRef)([]);\n  var horizontalScrollbarHandle = (0, _react.useRef)({});\n  var verticalScrollbarHandle = (0, _react.useRef)({}); // Hooks\n\n  var collectionOfProperties = {},\n      assignProperties = assignPropertiesOf(collectionOfProperties);\n\n  var _useScrollBase = useScrollBase(_objectSpread(_objectSpread({}, props), {}, {\n    assignProperties: assignProperties,\n    horizontalScrollbarHandle: horizontalScrollbarHandle,\n    scrollContainerRef: scrollContainerRef,\n    scrollContentHandle: scrollContentHandle,\n    scrollContentRef: scrollContentRef,\n    verticalScrollbarHandle: verticalScrollbarHandle\n  })),\n      scrollContentWrapper = _useScrollBase.scrollContentWrapper,\n      isHorizontalScrollbarVisible = _useScrollBase.isHorizontalScrollbarVisible,\n      isVerticalScrollbarVisible = _useScrollBase.isVerticalScrollbarVisible;\n\n  assignProperties('scrollContainerProps', {\n    ref: scrollContainerRef\n  });\n  assignProperties('scrollContentProps', _objectSpread(_objectSpread({}, props.itemRenderer ? {\n    itemRefs: itemRefs\n  } : {}), {}, {\n    scrollContentRef: scrollContentRef\n  }));\n  assignProperties('verticalScrollbarProps', {\n    scrollbarHandle: verticalScrollbarHandle\n  });\n  assignProperties('horizontalScrollbarProps', {\n    scrollbarHandle: horizontalScrollbarHandle\n  }); // Return\n\n  return _objectSpread(_objectSpread({}, collectionOfProperties), {}, {\n    scrollContentWrapper: scrollContentWrapper,\n    scrollContentHandle: scrollContentHandle,\n    isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n    isVerticalScrollbarVisible: isVerticalScrollbarVisible\n  });\n};\n\nexports.useScroll = useScroll;\nvar _default = useScroll;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}