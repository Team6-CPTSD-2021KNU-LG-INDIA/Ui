{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useChainRefs = useChainRefs;\nexports.chainRefs = chainRefs;\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Updates multiple reference callbacks or objects\n *\n * @module core/useChainRefs\n * @exports useChainRefs\n * @exports chainRefs\n * @private\n */\n// Safely handles functional and object refs (and ignores invalid refs)\n\n\nfunction updateRef(ref, node) {\n  if (ref) {\n    if (typeof ref === 'function') {\n      ref(node);\n    } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n      ref.current = node;\n    } else {\n      // warn for a truthy ref that isn't a function or is an object without `current`\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(ref, \"Invalid ref \\\"\".concat(ref, \"\\\" passed to useChainRefs.\")) : void 0;\n    }\n  }\n}\n/**\n * Creates a reference callback that updates each of the provided references\n *\n * @memberof core/useChainRefs\n * @param {Object|Function} ...handlers  List of references to be updated.\n * @returns {Function}                   A callback that updates each reference\n * @public\n */\n\n\nfunction chainRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return function (node) {\n    refs.forEach(function (ref) {\n      return updateRef(ref, node);\n    });\n  };\n}\n/**\n * Creates a memoized reference callback that updates each of the provided references\n *\n * @memberof core/useChainRefs\n * @param {Object|Function} ...handlers  List of references to be updated.\n * @returns {Function}                   A memoized callback that updates each reference\n * @public\n */\n\n\nfunction useChainRefs() {\n  for (var _len2 = arguments.length, refs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    refs[_key2] = arguments[_key2];\n  } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  return (0, _react.useCallback)(chainRefs.apply(void 0, refs), refs);\n}\n\nvar _default = useChainRefs;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/tak43/remaking/node_modules/@enact/core/useChainRefs/useChainRefs.js"],"names":["Object","defineProperty","exports","value","useChainRefs","chainRefs","_react","require","_warning","_interopRequireDefault","obj","__esModule","updateRef","ref","node","prototype","hasOwnProperty","call","current","process","env","NODE_ENV","concat","_len","arguments","length","refs","Array","_key","forEach","_len2","_key2","useCallback","apply","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;AACAF,OAAO,CAACG,SAAR,GAAoBA,SAApB;AACAH,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAII,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAACF,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,SAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAC5B,MAAID,GAAJ,EAAS;AACP,QAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,MAAAA,GAAG,CAACC,IAAD,CAAH;AACD,KAFD,MAEO,IAAId,MAAM,CAACe,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,GAArC,EAA0C,SAA1C,CAAJ,EAA0D;AAC/DA,MAAAA,GAAG,CAACK,OAAJ,GAAcJ,IAAd;AACD,KAFM,MAEA;AACL;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,CAAC,GAAGb,QAAQ,CAAC,SAAD,CAAZ,EAAyBK,GAAzB,EAA8B,iBAAiBS,MAAjB,CAAwBT,GAAxB,EAA6B,4BAA7B,CAA9B,CAAxC,GAAoI,KAAK,CAAzI;AACD;AACF;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASR,SAAT,GAAqB;AACnB,OAAK,IAAIkB,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,IAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,SAAO,UAAUd,IAAV,EAAgB;AACrBY,IAAAA,IAAI,CAACG,OAAL,CAAa,UAAUhB,GAAV,EAAe;AAC1B,aAAOD,SAAS,CAACC,GAAD,EAAMC,IAAN,CAAhB;AACD,KAFD;AAGD,GAJD;AAKD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASV,YAAT,GAAwB;AACtB,OAAK,IAAI0B,KAAK,GAAGN,SAAS,CAACC,MAAtB,EAA8BC,IAAI,GAAG,IAAIC,KAAJ,CAAUG,KAAV,CAArC,EAAuDC,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGD,KAA/E,EAAsFC,KAAK,EAA3F,EAA+F;AAC7FL,IAAAA,IAAI,CAACK,KAAD,CAAJ,GAAcP,SAAS,CAACO,KAAD,CAAvB;AACD,GAHqB,CAKtB;;;AACA,SAAO,CAAC,GAAGzB,MAAM,CAAC0B,WAAX,EAAwB3B,SAAS,CAAC4B,KAAV,CAAgB,KAAK,CAArB,EAAwBP,IAAxB,CAAxB,EAAuDA,IAAvD,CAAP;AACD;;AAED,IAAIQ,QAAQ,GAAG9B,YAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBgC,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useChainRefs = useChainRefs;\nexports.chainRefs = chainRefs;\nexports[\"default\"] = void 0;\n\nvar _react = require(\"react\");\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Updates multiple reference callbacks or objects\n *\n * @module core/useChainRefs\n * @exports useChainRefs\n * @exports chainRefs\n * @private\n */\n// Safely handles functional and object refs (and ignores invalid refs)\nfunction updateRef(ref, node) {\n  if (ref) {\n    if (typeof ref === 'function') {\n      ref(node);\n    } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n      ref.current = node;\n    } else {\n      // warn for a truthy ref that isn't a function or is an object without `current`\n      process.env.NODE_ENV !== \"production\" ? (0, _warning[\"default\"])(ref, \"Invalid ref \\\"\".concat(ref, \"\\\" passed to useChainRefs.\")) : void 0;\n    }\n  }\n}\n/**\n * Creates a reference callback that updates each of the provided references\n *\n * @memberof core/useChainRefs\n * @param {Object|Function} ...handlers  List of references to be updated.\n * @returns {Function}                   A callback that updates each reference\n * @public\n */\n\n\nfunction chainRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return function (node) {\n    refs.forEach(function (ref) {\n      return updateRef(ref, node);\n    });\n  };\n}\n/**\n * Creates a memoized reference callback that updates each of the provided references\n *\n * @memberof core/useChainRefs\n * @param {Object|Function} ...handlers  List of references to be updated.\n * @returns {Function}                   A memoized callback that updates each reference\n * @public\n */\n\n\nfunction useChainRefs() {\n  for (var _len2 = arguments.length, refs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    refs[_key2] = arguments[_key2];\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return (0, _react.useCallback)(chainRefs.apply(void 0, refs), refs);\n}\n\nvar _default = useChainRefs;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}