{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useThemeScroller = exports[\"default\"] = void 0;\n\nvar _handle = require(\"@enact/core/handle\");\n\nvar _keymap = require(\"@enact/core/keymap\");\n\nvar _platform = _interopRequireDefault(require(\"@enact/core/platform\"));\n\nvar _spotlight = _interopRequireDefault(require(\"@enact/spotlight\"));\n\nvar _utils = require(\"@enact/spotlight/src/utils\");\n\nvar _resolution = _interopRequireDefault(require(\"@enact/ui/resolution\"));\n\nvar _utilDOM = _interopRequireDefault(require(\"@enact/ui/useScroll/utilDOM\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = require(\"react\");\n\nvar _useScroll = require(\"../useScroll\");\n\nvar _useEvent = require(\"./useEvent\");\n\nvar _ScrollerModule = _interopRequireDefault(require(\"./Scroller.module.css\"));\n\nvar _ScrollbarTrackModule = _interopRequireDefault(require(\"../useScroll/ScrollbarTrack.module.css\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar isCancel = (0, _keymap.is)('cancel'),\n    isEnter = (0, _keymap.is)('enter'),\n    isBody = function isBody(elem) {\n  return elem.classList.contains(_ScrollerModule[\"default\"].focusableBody);\n};\n\nvar getFocusableBodyProps = function getFocusableBodyProps(scrollContainerRef, contentId, isScrollbarVisible) {\n  var spotlightId = scrollContainerRef.current && scrollContainerRef.current.dataset.spotlightId;\n\n  var setNavigableFilter = function setNavigableFilter(_ref) {\n    var filterTarget = _ref.filterTarget;\n    spotlightId = scrollContainerRef.current && scrollContainerRef.current.dataset.spotlightId;\n\n    if (spotlightId && filterTarget) {\n      var targetClassName = filterTarget === 'body' ? _ScrollerModule[\"default\"].focusableBody : _ScrollbarTrackModule[\"default\"].thumb;\n\n      _spotlight[\"default\"].set(spotlightId, {\n        navigableFilter: function navigableFilter(elem) {\n          return typeof elem === 'string' || !elem.classList.contains(targetClassName);\n        }\n      });\n\n      return true;\n    }\n\n    return false;\n  };\n\n  var getNavigableFilterTarget = function getNavigableFilterTarget(ev) {\n    var keyCode = ev.keyCode,\n        target = ev.target,\n        type = ev.type;\n    var filterTarget = null;\n\n    if (!isScrollbarVisible) {\n      return {\n        filterTarget: filterTarget\n      };\n    }\n\n    if (type === 'focus') {\n      filterTarget = isBody(target) ? 'thumb' : 'body';\n    } else if (type === 'blur') {\n      filterTarget = 'body';\n    } else if (type === 'keydown') {\n      filterTarget = !_spotlight[\"default\"].getPointerMode() && isEnter(keyCode) && isBody(target) && 'body' || isEnter(keyCode) && !isBody(target) && 'thumb' || isCancel(keyCode) && !isBody(target) && 'thumb' || null;\n    }\n\n    return {\n      filterTarget: filterTarget\n    };\n  };\n\n  var consumeEventWithFocus = function consumeEventWithFocus(ev) {\n    var target = ev.target;\n    var nextTarget;\n\n    if (isBody(target)) {\n      // Enter key on scroll Body.\n      // Scroll thumb get focus.\n      var spottableDescendants = _spotlight[\"default\"].getSpottableDescendants(spotlightId);\n\n      if (spottableDescendants.length > 0) {\n        // Last spottable descendant(thumb) get focus.\n        nextTarget = spottableDescendants.pop(); // If there are both thumbs, vertical thumb is the next target\n\n        var verticalThumb = spottableDescendants.pop();\n        nextTarget = verticalThumb && verticalThumb.classList.contains(_ScrollbarTrackModule[\"default\"].thumb) ? verticalThumb : nextTarget;\n      }\n    } else {\n      // Enter or Cancel key on scroll thumb.\n      // Scroll body get focus.\n      nextTarget = target.closest(\".\".concat(_ScrollerModule[\"default\"].focusableBody));\n    }\n\n    if (nextTarget) {\n      _spotlight[\"default\"].focus(nextTarget);\n\n      ev.preventDefault();\n      ev.nativeEvent.stopImmediatePropagation();\n    }\n  };\n\n  return {\n    'aria-labelledby': contentId,\n    className: _ScrollerModule[\"default\"].focusableBody,\n    onFocus: (0, _handle.handle)((0, _handle.forward)('onFocus'), (0, _handle.adaptEvent)(getNavigableFilterTarget, setNavigableFilter)),\n    onBlur: (0, _handle.handle)( // Focus out to external element.\n    (0, _handle.forward)('onBlur'), (0, _handle.adaptEvent)(getNavigableFilterTarget, setNavigableFilter)),\n    onKeyDown: (0, _handle.handle)((0, _handle.forward)('onKeyDown'), (0, _handle.adaptEvent)(getNavigableFilterTarget, setNavigableFilter), consumeEventWithFocus),\n    setNavigableFilter: setNavigableFilter\n  };\n};\n\nvar useSpottable = function useSpottable(props, instances) {\n  var scrollContainerRef = instances.scrollContainerRef,\n      scrollContentHandle = instances.scrollContentHandle,\n      scrollContentRef = instances.scrollContentRef; // Hooks\n\n  var _useEventKey = (0, _useEvent.useEventKey)(),\n      addGlobalKeyDownEventListener = _useEventKey.addGlobalKeyDownEventListener,\n      removeGlobalKeyDownEventListener = _useEventKey.removeGlobalKeyDownEventListener;\n\n  var setContainerDisabled = (0, _react.useCallback)(function (bool) {\n    if (scrollContainerRef.current) {\n      scrollContainerRef.current.dataset.spotlightContainerDisabled = bool;\n\n      if (bool) {\n        addGlobalKeyDownEventListener(function () {\n          setContainerDisabled(false);\n        });\n      } else {\n        removeGlobalKeyDownEventListener();\n      }\n    }\n  }, [addGlobalKeyDownEventListener, removeGlobalKeyDownEventListener, scrollContainerRef]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      return setContainerDisabled(false);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useEffect)(function () {\n    var onUpdate = props.onUpdate;\n\n    if (onUpdate) {\n      onUpdate();\n    }\n  }); // Functions\n\n  /**\n   * Returns the first spotlight container between `node` and the scroller\n   *\n   * @param {Node} node A DOM node\n   *\n   * @returns {Node|Null} Spotlight container for `node`\n   * @private\n   */\n\n  function getSpotlightContainerForNode(node) {\n    do {\n      if (node.dataset.spotlightId && node.dataset.spotlightContainer && !node.dataset.expandableContainer) {\n        return node;\n      }\n    } while ((node = node.parentNode) && node !== scrollContentRef.current);\n  }\n  /**\n   * Calculates the \"focus bounds\" of a node. If the node is within a spotlight container, that\n   * container is scrolled into view rather than just the element.\n   *\n   * @param {Node} node Focused node\n   *\n   * @returns {Object} Bounds as returned by `getBoundingClientRect`\n   * @private\n   */\n\n\n  function getFocusedItemBounds(node) {\n    node = getSpotlightContainerForNode(node) || node;\n    return node.getBoundingClientRect();\n  }\n  /**\n   * Calculates the new `scrollTop`.\n   *\n   * @param {Node} item Focused item node\n   *\n   * @returns {Number} Calculated `scrollTop`\n   * @private\n   */\n\n\n  function calculateScrollTop(item) {\n    var threshold = _resolution[\"default\"].scale(48);\n\n    var roundToStart = function roundToStart(sb, st) {\n      // round to start\n      if (st < threshold) return 0;\n      return st;\n    };\n\n    var roundToEnd = function roundToEnd(sb, st, sh) {\n      // round to end\n      if (sh - (st + sb.height) < threshold) return sh - sb.height;\n      return st + _resolution[\"default\"].scale(_useScroll.affordanceSize);\n    }; // adding threshold into these determinations ensures that items that are within that are\n    // near the bounds of the scroller cause the edge to be scrolled into view even when the\n    // item itself is in view (e.g. due to margins)\n\n\n    var isItemBeforeView = function isItemBeforeView(ib, sb, d) {\n      return ib.top + d - threshold < sb.top;\n    };\n\n    var isItemAfterView = function isItemAfterView(ib, sb, d) {\n      return ib.top + d + ib.height + threshold > sb.top + sb.height;\n    };\n\n    var canItemFit = function canItemFit(ib, sb) {\n      return ib.height <= sb.height;\n    };\n\n    var calcItemAtStart = function calcItemAtStart(ib, sb, st, d) {\n      return ib.top + st + d - sb.top;\n    };\n\n    var calcItemAtEnd = function calcItemAtEnd(ib, sb, st, d) {\n      return ib.top + ib.height + st + d - (sb.top + sb.height);\n    };\n\n    var calcItemInView = function calcItemInView(ib, sb, st, sh, d) {\n      if (isItemBeforeView(ib, sb, d)) {\n        return roundToStart(sb, calcItemAtStart(ib, sb, st, d));\n      } else if (isItemAfterView(ib, sb, d)) {\n        return roundToEnd(sb, calcItemAtEnd(ib, sb, st, d), sh);\n      }\n\n      return st;\n    };\n\n    var container = getSpotlightContainerForNode(item);\n    var scrollerBounds = scrollContentRef.current.getBoundingClientRect();\n    var _scrollContentRef$cur = scrollContentRef.current,\n        scrollHeight = _scrollContentRef$cur.scrollHeight,\n        scrollTop = _scrollContentRef$cur.scrollTop;\n    var scrollTopDelta = 0;\n\n    var adjustScrollTop = function adjustScrollTop(v) {\n      scrollTopDelta = scrollTop - v;\n      scrollTop = v;\n    };\n\n    if (container) {\n      var containerBounds = container.getBoundingClientRect(); // if the entire container fits in the scroller, scroll it into view\n\n      if (canItemFit(containerBounds, scrollerBounds)) {\n        return calcItemInView(containerBounds, scrollerBounds, scrollTop, scrollHeight, scrollTopDelta);\n      } // if the container doesn't fit, adjust the scroll top ...\n\n\n      if (containerBounds.top > scrollerBounds.top) {\n        // ... to the top of the container if the top is below the top of the scroller\n        adjustScrollTop(calcItemAtStart(containerBounds, scrollerBounds, scrollTop, scrollTopDelta));\n      } // removing support for \"snap to bottom\" for 2.2.8\n      // } else if (containerBounds.top + containerBounds.height < scrollerBounds.top + scrollerBounds.height) {\n      // \t// ... to the bottom of the container if the bottom is above the bottom of the\n      // \t// scroller\n      // \tadjustScrollTop(calcItemAtEnd(containerBounds, scrollerBounds, scrollTop, scrollTopDelta));\n      // }\n      // N.B. if the container covers the scrollable area (its top is above the top of the\n      // scroller and its bottom is below the bottom of the scroller), we need not adjust the\n      // scroller to ensure the container is wholly in view.\n\n    }\n\n    var itemBounds = item.getBoundingClientRect();\n    return calcItemInView(itemBounds, scrollerBounds, scrollTop, scrollHeight, scrollTopDelta);\n  }\n  /**\n   * Calculates the new `scrollLeft`.\n   *\n   * @param {Node} focusedItem node\n   * @param {Number} scrollPosition last target position, passed when scroll animation is ongoing\n   *\n   * @returns {Number} Calculated `scrollLeft`\n   * @private\n   */\n\n\n  function calculateScrollLeft(item, scrollPosition) {\n    var scrollContentNode = scrollContentRef.current;\n\n    var _getFocusedItemBounds = getFocusedItemBounds(item),\n        itemLeft = _getFocusedItemBounds.left,\n        itemWidth = _getFocusedItemBounds.width;\n\n    var rtl = props.rtl,\n        coordinateCoefficient = rtl && (_platform[\"default\"].ios || _platform[\"default\"].safari || _platform[\"default\"].chrome >= 85) ? -1 : 1,\n        clientWidth = scrollContentHandle.current.scrollBounds.clientWidth,\n        rtlDirection = rtl ? -1 : 1,\n        _scrollContentNode$ge = scrollContentNode.getBoundingClientRect(),\n        containerLeft = _scrollContentNode$ge.left,\n        scrollLastPosition = scrollPosition ? scrollPosition : scrollContentHandle.current.scrollPos.left,\n        currentScrollLeft = rtl && coordinateCoefficient === 1 ? scrollContentHandle.current.scrollBounds.maxLeft - scrollLastPosition : scrollLastPosition,\n        newItemLeft = coordinateCoefficient * scrollContentNode.scrollLeft + (itemLeft - containerLeft);\n\n    var nextScrollLeft = scrollContentHandle.current.scrollPos.left;\n\n    if (newItemLeft + itemWidth > clientWidth + currentScrollLeft && itemWidth < clientWidth) {\n      // If focus is moved to an element outside of view area (to the right), scroller will move\n      // to the right just enough to show the current `focusedItem`. This does not apply to\n      // `focusedItem` that has a width that is bigger than `scrollBounds.clientWidth`.\n      nextScrollLeft += rtlDirection * (newItemLeft + itemWidth - (clientWidth + currentScrollLeft));\n    } else if (newItemLeft < currentScrollLeft) {\n      // If focus is outside of the view area to the left, move scroller to the left accordingly.\n      nextScrollLeft += rtlDirection * (newItemLeft - currentScrollLeft);\n    }\n\n    return nextScrollLeft;\n  }\n  /**\n   * Calculates the new top and left position for scroller based on focusedItem.\n   *\n   * @param {Node} item node\n   * @param {Number} scrollPosition last target position, passed scroll animation is ongoing\n   *\n   * @returns {Object} with keys {top, left} containing calculated top and left positions for scroll.\n   * @private\n   */\n\n\n  function calculatePositionOnFocus(_ref2) {\n    var item = _ref2.item,\n        scrollPosition = _ref2.scrollPosition;\n    var containerNode = scrollContentRef.current;\n    var horizontal = scrollContentHandle.current.isHorizontal();\n    var vertical = scrollContentHandle.current.isVertical();\n\n    if (!vertical && !horizontal || !item || !_utilDOM[\"default\"].containsDangerously(containerNode, item)) {\n      return;\n    }\n\n    var containerRect = (0, _utils.getRect)(containerNode);\n    var itemRect = (0, _utils.getRect)(item);\n\n    if (horizontal && !(itemRect.left >= containerRect.left + _resolution[\"default\"].scale(_useScroll.affordanceSize) && itemRect.right <= containerRect.right - _resolution[\"default\"].scale(_useScroll.affordanceSize))) {\n      scrollContentHandle.current.scrollPos.left = calculateScrollLeft(item, scrollPosition);\n    }\n\n    if (vertical && !(itemRect.top >= containerRect.top && itemRect.bottom <= containerRect.bottom - _resolution[\"default\"].scale(_useScroll.affordanceSize))) {\n      scrollContentHandle.current.scrollPos.top = calculateScrollTop(item);\n    }\n\n    return scrollContentHandle.current.scrollPos;\n  }\n\n  function focusOnNode(node) {\n    if (node) {\n      _spotlight[\"default\"].focus(node);\n    }\n  } // Return\n\n\n  return {\n    calculatePositionOnFocus: calculatePositionOnFocus,\n    focusOnNode: focusOnNode,\n    setContainerDisabled: setContainerDisabled\n  };\n};\n\nvar useThemeScroller = function useThemeScroller(props, scrollContentProps, contentId, isHorizontalScrollbarVisible, isVerticalScrollbarVisible) {\n  var className = scrollContentProps.className,\n      fadeOut = scrollContentProps.fadeOut,\n      scrollContainerRef = scrollContentProps.scrollContainerRef,\n      rest = _objectWithoutProperties(scrollContentProps, [\"className\", \"fadeOut\", \"scrollContainerRef\"]);\n\n  var scrollContentHandle = rest.scrollContentHandle,\n      scrollContentRef = rest.scrollContentRef;\n  delete rest.onUpdate;\n  delete rest.scrollContainerContainsDangerously;\n  delete rest.scrollContainerHandle;\n  delete rest.scrollContentHandle;\n  delete rest.setThemeScrollContentHandle;\n  delete rest.spotlightId; // Hooks\n\n  var isScrollbarVisible = isHorizontalScrollbarVisible || isVerticalScrollbarVisible;\n\n  var _useSpottable = useSpottable(scrollContentProps, {\n    scrollContainerRef: scrollContainerRef,\n    scrollContentHandle: scrollContentHandle,\n    scrollContentRef: scrollContentRef\n  }),\n      calculatePositionOnFocus = _useSpottable.calculatePositionOnFocus,\n      focusOnNode = _useSpottable.focusOnNode,\n      setContainerDisabled = _useSpottable.setContainerDisabled;\n\n  var _ref3 = props.focusableScrollbar === 'byEnter' ? getFocusableBodyProps(scrollContainerRef, contentId, isScrollbarVisible) : {},\n      setNavigableFilter = _ref3.setNavigableFilter,\n      focusableBodyProps = _objectWithoutProperties(_ref3, [\"setNavigableFilter\"]);\n\n  (0, _react.useLayoutEffect)(function () {\n    // Initial filter setting\n    if (setNavigableFilter) {\n      setNavigableFilter({\n        filterTarget: 'body'\n      });\n    }\n  }, [props.focusableScrollbar, scrollContainerRef.current]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  scrollContentProps.setThemeScrollContentHandle({\n    calculatePositionOnFocus: calculatePositionOnFocus,\n    focusOnNode: focusOnNode,\n    setContainerDisabled: setContainerDisabled\n  }); // Render\n\n  rest.className = (0, _classnames[\"default\"])(className, !isHorizontalScrollbarVisible && isVerticalScrollbarVisible && fadeOut ? _ScrollerModule[\"default\"].verticalFadeout : null, isHorizontalScrollbarVisible && !isVerticalScrollbarVisible && fadeOut ? _ScrollerModule[\"default\"].horizontalFadeout : null);\n  return {\n    focusableBodyProps: focusableBodyProps,\n    themeScrollContentProps: rest\n  };\n};\n\nexports.useThemeScroller = useThemeScroller;\nvar _default = useThemeScroller;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/tak43/remaking/node_modules/@enact/sandstone/Scroller/useThemeScroller.js"],"names":["Object","defineProperty","exports","value","useThemeScroller","_handle","require","_keymap","_platform","_interopRequireDefault","_spotlight","_utils","_resolution","_utilDOM","_classnames","_react","_useScroll","_useEvent","_ScrollerModule","_ScrollbarTrackModule","obj","__esModule","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","isCancel","is","isEnter","isBody","elem","classList","contains","focusableBody","getFocusableBodyProps","scrollContainerRef","contentId","isScrollbarVisible","spotlightId","current","dataset","setNavigableFilter","_ref","filterTarget","targetClassName","thumb","set","navigableFilter","getNavigableFilterTarget","ev","keyCode","type","getPointerMode","consumeEventWithFocus","nextTarget","spottableDescendants","getSpottableDescendants","pop","verticalThumb","closest","concat","focus","preventDefault","nativeEvent","stopImmediatePropagation","className","onFocus","handle","forward","adaptEvent","onBlur","onKeyDown","useSpottable","props","instances","scrollContentHandle","scrollContentRef","_useEventKey","useEventKey","addGlobalKeyDownEventListener","removeGlobalKeyDownEventListener","setContainerDisabled","useCallback","bool","spotlightContainerDisabled","useEffect","onUpdate","getSpotlightContainerForNode","node","spotlightContainer","expandableContainer","parentNode","getFocusedItemBounds","getBoundingClientRect","calculateScrollTop","item","threshold","scale","roundToStart","sb","st","roundToEnd","sh","height","affordanceSize","isItemBeforeView","ib","d","top","isItemAfterView","canItemFit","calcItemAtStart","calcItemAtEnd","calcItemInView","container","scrollerBounds","_scrollContentRef$cur","scrollHeight","scrollTop","scrollTopDelta","adjustScrollTop","v","containerBounds","itemBounds","calculateScrollLeft","scrollPosition","scrollContentNode","_getFocusedItemBounds","itemLeft","left","itemWidth","width","rtl","coordinateCoefficient","ios","safari","chrome","clientWidth","scrollBounds","rtlDirection","_scrollContentNode$ge","containerLeft","scrollLastPosition","scrollPos","currentScrollLeft","maxLeft","newItemLeft","scrollLeft","nextScrollLeft","calculatePositionOnFocus","_ref2","containerNode","horizontal","isHorizontal","vertical","isVertical","containsDangerously","containerRect","getRect","itemRect","right","bottom","focusOnNode","scrollContentProps","isHorizontalScrollbarVisible","isVerticalScrollbarVisible","fadeOut","rest","scrollContainerContainsDangerously","scrollContainerHandle","setThemeScrollContentHandle","_useSpottable","_ref3","focusableScrollbar","focusableBodyProps","useLayoutEffect","verticalFadeout","horizontalFadeout","themeScrollContentProps","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useThemeScroller = exports[\"default\"] = void 0;\n\nvar _handle = require(\"@enact/core/handle\");\n\nvar _keymap = require(\"@enact/core/keymap\");\n\nvar _platform = _interopRequireDefault(require(\"@enact/core/platform\"));\n\nvar _spotlight = _interopRequireDefault(require(\"@enact/spotlight\"));\n\nvar _utils = require(\"@enact/spotlight/src/utils\");\n\nvar _resolution = _interopRequireDefault(require(\"@enact/ui/resolution\"));\n\nvar _utilDOM = _interopRequireDefault(require(\"@enact/ui/useScroll/utilDOM\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = require(\"react\");\n\nvar _useScroll = require(\"../useScroll\");\n\nvar _useEvent = require(\"./useEvent\");\n\nvar _ScrollerModule = _interopRequireDefault(require(\"./Scroller.module.css\"));\n\nvar _ScrollbarTrackModule = _interopRequireDefault(require(\"../useScroll/ScrollbarTrack.module.css\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar isCancel = (0, _keymap.is)('cancel'),\n    isEnter = (0, _keymap.is)('enter'),\n    isBody = function isBody(elem) {\n  return elem.classList.contains(_ScrollerModule[\"default\"].focusableBody);\n};\n\nvar getFocusableBodyProps = function getFocusableBodyProps(scrollContainerRef, contentId, isScrollbarVisible) {\n  var spotlightId = scrollContainerRef.current && scrollContainerRef.current.dataset.spotlightId;\n\n  var setNavigableFilter = function setNavigableFilter(_ref) {\n    var filterTarget = _ref.filterTarget;\n    spotlightId = scrollContainerRef.current && scrollContainerRef.current.dataset.spotlightId;\n\n    if (spotlightId && filterTarget) {\n      var targetClassName = filterTarget === 'body' ? _ScrollerModule[\"default\"].focusableBody : _ScrollbarTrackModule[\"default\"].thumb;\n\n      _spotlight[\"default\"].set(spotlightId, {\n        navigableFilter: function navigableFilter(elem) {\n          return typeof elem === 'string' || !elem.classList.contains(targetClassName);\n        }\n      });\n\n      return true;\n    }\n\n    return false;\n  };\n\n  var getNavigableFilterTarget = function getNavigableFilterTarget(ev) {\n    var keyCode = ev.keyCode,\n        target = ev.target,\n        type = ev.type;\n    var filterTarget = null;\n\n    if (!isScrollbarVisible) {\n      return {\n        filterTarget: filterTarget\n      };\n    }\n\n    if (type === 'focus') {\n      filterTarget = isBody(target) ? 'thumb' : 'body';\n    } else if (type === 'blur') {\n      filterTarget = 'body';\n    } else if (type === 'keydown') {\n      filterTarget = !_spotlight[\"default\"].getPointerMode() && isEnter(keyCode) && isBody(target) && 'body' || isEnter(keyCode) && !isBody(target) && 'thumb' || isCancel(keyCode) && !isBody(target) && 'thumb' || null;\n    }\n\n    return {\n      filterTarget: filterTarget\n    };\n  };\n\n  var consumeEventWithFocus = function consumeEventWithFocus(ev) {\n    var target = ev.target;\n    var nextTarget;\n\n    if (isBody(target)) {\n      // Enter key on scroll Body.\n      // Scroll thumb get focus.\n      var spottableDescendants = _spotlight[\"default\"].getSpottableDescendants(spotlightId);\n\n      if (spottableDescendants.length > 0) {\n        // Last spottable descendant(thumb) get focus.\n        nextTarget = spottableDescendants.pop(); // If there are both thumbs, vertical thumb is the next target\n\n        var verticalThumb = spottableDescendants.pop();\n        nextTarget = verticalThumb && verticalThumb.classList.contains(_ScrollbarTrackModule[\"default\"].thumb) ? verticalThumb : nextTarget;\n      }\n    } else {\n      // Enter or Cancel key on scroll thumb.\n      // Scroll body get focus.\n      nextTarget = target.closest(\".\".concat(_ScrollerModule[\"default\"].focusableBody));\n    }\n\n    if (nextTarget) {\n      _spotlight[\"default\"].focus(nextTarget);\n\n      ev.preventDefault();\n      ev.nativeEvent.stopImmediatePropagation();\n    }\n  };\n\n  return {\n    'aria-labelledby': contentId,\n    className: _ScrollerModule[\"default\"].focusableBody,\n    onFocus: (0, _handle.handle)((0, _handle.forward)('onFocus'), (0, _handle.adaptEvent)(getNavigableFilterTarget, setNavigableFilter)),\n    onBlur: (0, _handle.handle)( // Focus out to external element.\n    (0, _handle.forward)('onBlur'), (0, _handle.adaptEvent)(getNavigableFilterTarget, setNavigableFilter)),\n    onKeyDown: (0, _handle.handle)((0, _handle.forward)('onKeyDown'), (0, _handle.adaptEvent)(getNavigableFilterTarget, setNavigableFilter), consumeEventWithFocus),\n    setNavigableFilter: setNavigableFilter\n  };\n};\n\nvar useSpottable = function useSpottable(props, instances) {\n  var scrollContainerRef = instances.scrollContainerRef,\n      scrollContentHandle = instances.scrollContentHandle,\n      scrollContentRef = instances.scrollContentRef; // Hooks\n\n  var _useEventKey = (0, _useEvent.useEventKey)(),\n      addGlobalKeyDownEventListener = _useEventKey.addGlobalKeyDownEventListener,\n      removeGlobalKeyDownEventListener = _useEventKey.removeGlobalKeyDownEventListener;\n\n  var setContainerDisabled = (0, _react.useCallback)(function (bool) {\n    if (scrollContainerRef.current) {\n      scrollContainerRef.current.dataset.spotlightContainerDisabled = bool;\n\n      if (bool) {\n        addGlobalKeyDownEventListener(function () {\n          setContainerDisabled(false);\n        });\n      } else {\n        removeGlobalKeyDownEventListener();\n      }\n    }\n  }, [addGlobalKeyDownEventListener, removeGlobalKeyDownEventListener, scrollContainerRef]);\n  (0, _react.useEffect)(function () {\n    return function () {\n      return setContainerDisabled(false);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  (0, _react.useEffect)(function () {\n    var onUpdate = props.onUpdate;\n\n    if (onUpdate) {\n      onUpdate();\n    }\n  }); // Functions\n\n  /**\n   * Returns the first spotlight container between `node` and the scroller\n   *\n   * @param {Node} node A DOM node\n   *\n   * @returns {Node|Null} Spotlight container for `node`\n   * @private\n   */\n\n  function getSpotlightContainerForNode(node) {\n    do {\n      if (node.dataset.spotlightId && node.dataset.spotlightContainer && !node.dataset.expandableContainer) {\n        return node;\n      }\n    } while ((node = node.parentNode) && node !== scrollContentRef.current);\n  }\n  /**\n   * Calculates the \"focus bounds\" of a node. If the node is within a spotlight container, that\n   * container is scrolled into view rather than just the element.\n   *\n   * @param {Node} node Focused node\n   *\n   * @returns {Object} Bounds as returned by `getBoundingClientRect`\n   * @private\n   */\n\n\n  function getFocusedItemBounds(node) {\n    node = getSpotlightContainerForNode(node) || node;\n    return node.getBoundingClientRect();\n  }\n  /**\n   * Calculates the new `scrollTop`.\n   *\n   * @param {Node} item Focused item node\n   *\n   * @returns {Number} Calculated `scrollTop`\n   * @private\n   */\n\n\n  function calculateScrollTop(item) {\n    var threshold = _resolution[\"default\"].scale(48);\n\n    var roundToStart = function roundToStart(sb, st) {\n      // round to start\n      if (st < threshold) return 0;\n      return st;\n    };\n\n    var roundToEnd = function roundToEnd(sb, st, sh) {\n      // round to end\n      if (sh - (st + sb.height) < threshold) return sh - sb.height;\n      return st + _resolution[\"default\"].scale(_useScroll.affordanceSize);\n    }; // adding threshold into these determinations ensures that items that are within that are\n    // near the bounds of the scroller cause the edge to be scrolled into view even when the\n    // item itself is in view (e.g. due to margins)\n\n\n    var isItemBeforeView = function isItemBeforeView(ib, sb, d) {\n      return ib.top + d - threshold < sb.top;\n    };\n\n    var isItemAfterView = function isItemAfterView(ib, sb, d) {\n      return ib.top + d + ib.height + threshold > sb.top + sb.height;\n    };\n\n    var canItemFit = function canItemFit(ib, sb) {\n      return ib.height <= sb.height;\n    };\n\n    var calcItemAtStart = function calcItemAtStart(ib, sb, st, d) {\n      return ib.top + st + d - sb.top;\n    };\n\n    var calcItemAtEnd = function calcItemAtEnd(ib, sb, st, d) {\n      return ib.top + ib.height + st + d - (sb.top + sb.height);\n    };\n\n    var calcItemInView = function calcItemInView(ib, sb, st, sh, d) {\n      if (isItemBeforeView(ib, sb, d)) {\n        return roundToStart(sb, calcItemAtStart(ib, sb, st, d));\n      } else if (isItemAfterView(ib, sb, d)) {\n        return roundToEnd(sb, calcItemAtEnd(ib, sb, st, d), sh);\n      }\n\n      return st;\n    };\n\n    var container = getSpotlightContainerForNode(item);\n    var scrollerBounds = scrollContentRef.current.getBoundingClientRect();\n    var _scrollContentRef$cur = scrollContentRef.current,\n        scrollHeight = _scrollContentRef$cur.scrollHeight,\n        scrollTop = _scrollContentRef$cur.scrollTop;\n    var scrollTopDelta = 0;\n\n    var adjustScrollTop = function adjustScrollTop(v) {\n      scrollTopDelta = scrollTop - v;\n      scrollTop = v;\n    };\n\n    if (container) {\n      var containerBounds = container.getBoundingClientRect(); // if the entire container fits in the scroller, scroll it into view\n\n      if (canItemFit(containerBounds, scrollerBounds)) {\n        return calcItemInView(containerBounds, scrollerBounds, scrollTop, scrollHeight, scrollTopDelta);\n      } // if the container doesn't fit, adjust the scroll top ...\n\n\n      if (containerBounds.top > scrollerBounds.top) {\n        // ... to the top of the container if the top is below the top of the scroller\n        adjustScrollTop(calcItemAtStart(containerBounds, scrollerBounds, scrollTop, scrollTopDelta));\n      } // removing support for \"snap to bottom\" for 2.2.8\n      // } else if (containerBounds.top + containerBounds.height < scrollerBounds.top + scrollerBounds.height) {\n      // \t// ... to the bottom of the container if the bottom is above the bottom of the\n      // \t// scroller\n      // \tadjustScrollTop(calcItemAtEnd(containerBounds, scrollerBounds, scrollTop, scrollTopDelta));\n      // }\n      // N.B. if the container covers the scrollable area (its top is above the top of the\n      // scroller and its bottom is below the bottom of the scroller), we need not adjust the\n      // scroller to ensure the container is wholly in view.\n\n    }\n\n    var itemBounds = item.getBoundingClientRect();\n    return calcItemInView(itemBounds, scrollerBounds, scrollTop, scrollHeight, scrollTopDelta);\n  }\n  /**\n   * Calculates the new `scrollLeft`.\n   *\n   * @param {Node} focusedItem node\n   * @param {Number} scrollPosition last target position, passed when scroll animation is ongoing\n   *\n   * @returns {Number} Calculated `scrollLeft`\n   * @private\n   */\n\n\n  function calculateScrollLeft(item, scrollPosition) {\n    var scrollContentNode = scrollContentRef.current;\n\n    var _getFocusedItemBounds = getFocusedItemBounds(item),\n        itemLeft = _getFocusedItemBounds.left,\n        itemWidth = _getFocusedItemBounds.width;\n\n    var rtl = props.rtl,\n        coordinateCoefficient = rtl && (_platform[\"default\"].ios || _platform[\"default\"].safari || _platform[\"default\"].chrome >= 85) ? -1 : 1,\n        clientWidth = scrollContentHandle.current.scrollBounds.clientWidth,\n        rtlDirection = rtl ? -1 : 1,\n        _scrollContentNode$ge = scrollContentNode.getBoundingClientRect(),\n        containerLeft = _scrollContentNode$ge.left,\n        scrollLastPosition = scrollPosition ? scrollPosition : scrollContentHandle.current.scrollPos.left,\n        currentScrollLeft = rtl && coordinateCoefficient === 1 ? scrollContentHandle.current.scrollBounds.maxLeft - scrollLastPosition : scrollLastPosition,\n        newItemLeft = coordinateCoefficient * scrollContentNode.scrollLeft + (itemLeft - containerLeft);\n\n    var nextScrollLeft = scrollContentHandle.current.scrollPos.left;\n\n    if (newItemLeft + itemWidth > clientWidth + currentScrollLeft && itemWidth < clientWidth) {\n      // If focus is moved to an element outside of view area (to the right), scroller will move\n      // to the right just enough to show the current `focusedItem`. This does not apply to\n      // `focusedItem` that has a width that is bigger than `scrollBounds.clientWidth`.\n      nextScrollLeft += rtlDirection * (newItemLeft + itemWidth - (clientWidth + currentScrollLeft));\n    } else if (newItemLeft < currentScrollLeft) {\n      // If focus is outside of the view area to the left, move scroller to the left accordingly.\n      nextScrollLeft += rtlDirection * (newItemLeft - currentScrollLeft);\n    }\n\n    return nextScrollLeft;\n  }\n  /**\n   * Calculates the new top and left position for scroller based on focusedItem.\n   *\n   * @param {Node} item node\n   * @param {Number} scrollPosition last target position, passed scroll animation is ongoing\n   *\n   * @returns {Object} with keys {top, left} containing calculated top and left positions for scroll.\n   * @private\n   */\n\n\n  function calculatePositionOnFocus(_ref2) {\n    var item = _ref2.item,\n        scrollPosition = _ref2.scrollPosition;\n    var containerNode = scrollContentRef.current;\n    var horizontal = scrollContentHandle.current.isHorizontal();\n    var vertical = scrollContentHandle.current.isVertical();\n\n    if (!vertical && !horizontal || !item || !_utilDOM[\"default\"].containsDangerously(containerNode, item)) {\n      return;\n    }\n\n    var containerRect = (0, _utils.getRect)(containerNode);\n    var itemRect = (0, _utils.getRect)(item);\n\n    if (horizontal && !(itemRect.left >= containerRect.left + _resolution[\"default\"].scale(_useScroll.affordanceSize) && itemRect.right <= containerRect.right - _resolution[\"default\"].scale(_useScroll.affordanceSize))) {\n      scrollContentHandle.current.scrollPos.left = calculateScrollLeft(item, scrollPosition);\n    }\n\n    if (vertical && !(itemRect.top >= containerRect.top && itemRect.bottom <= containerRect.bottom - _resolution[\"default\"].scale(_useScroll.affordanceSize))) {\n      scrollContentHandle.current.scrollPos.top = calculateScrollTop(item);\n    }\n\n    return scrollContentHandle.current.scrollPos;\n  }\n\n  function focusOnNode(node) {\n    if (node) {\n      _spotlight[\"default\"].focus(node);\n    }\n  } // Return\n\n\n  return {\n    calculatePositionOnFocus: calculatePositionOnFocus,\n    focusOnNode: focusOnNode,\n    setContainerDisabled: setContainerDisabled\n  };\n};\n\nvar useThemeScroller = function useThemeScroller(props, scrollContentProps, contentId, isHorizontalScrollbarVisible, isVerticalScrollbarVisible) {\n  var className = scrollContentProps.className,\n      fadeOut = scrollContentProps.fadeOut,\n      scrollContainerRef = scrollContentProps.scrollContainerRef,\n      rest = _objectWithoutProperties(scrollContentProps, [\"className\", \"fadeOut\", \"scrollContainerRef\"]);\n\n  var scrollContentHandle = rest.scrollContentHandle,\n      scrollContentRef = rest.scrollContentRef;\n  delete rest.onUpdate;\n  delete rest.scrollContainerContainsDangerously;\n  delete rest.scrollContainerHandle;\n  delete rest.scrollContentHandle;\n  delete rest.setThemeScrollContentHandle;\n  delete rest.spotlightId; // Hooks\n\n  var isScrollbarVisible = isHorizontalScrollbarVisible || isVerticalScrollbarVisible;\n\n  var _useSpottable = useSpottable(scrollContentProps, {\n    scrollContainerRef: scrollContainerRef,\n    scrollContentHandle: scrollContentHandle,\n    scrollContentRef: scrollContentRef\n  }),\n      calculatePositionOnFocus = _useSpottable.calculatePositionOnFocus,\n      focusOnNode = _useSpottable.focusOnNode,\n      setContainerDisabled = _useSpottable.setContainerDisabled;\n\n  var _ref3 = props.focusableScrollbar === 'byEnter' ? getFocusableBodyProps(scrollContainerRef, contentId, isScrollbarVisible) : {},\n      setNavigableFilter = _ref3.setNavigableFilter,\n      focusableBodyProps = _objectWithoutProperties(_ref3, [\"setNavigableFilter\"]);\n\n  (0, _react.useLayoutEffect)(function () {\n    // Initial filter setting\n    if (setNavigableFilter) {\n      setNavigableFilter({\n        filterTarget: 'body'\n      });\n    }\n  }, [props.focusableScrollbar, scrollContainerRef.current]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  scrollContentProps.setThemeScrollContentHandle({\n    calculatePositionOnFocus: calculatePositionOnFocus,\n    focusOnNode: focusOnNode,\n    setContainerDisabled: setContainerDisabled\n  }); // Render\n\n  rest.className = (0, _classnames[\"default\"])(className, !isHorizontalScrollbarVisible && isVerticalScrollbarVisible && fadeOut ? _ScrollerModule[\"default\"].verticalFadeout : null, isHorizontalScrollbarVisible && !isVerticalScrollbarVisible && fadeOut ? _ScrollerModule[\"default\"].horizontalFadeout : null);\n  return {\n    focusableBodyProps: focusableBodyProps,\n    themeScrollContentProps: rest\n  };\n};\n\nexports.useThemeScroller = useThemeScroller;\nvar _default = useThemeScroller;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}