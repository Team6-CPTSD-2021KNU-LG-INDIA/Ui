{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSpotlightRestore = void 0;\n\nvar _react = require(\"react\");\n\nvar _SharedStateDecorator = require(\"../internal/SharedStateDecorator/SharedStateDecorator\");\n\nvar useSpotlightRestore = function useSpotlightRestore(props, instances) {\n  var scrollContainerHandle = instances.scrollContainerHandle;\n  var context = (0, _react.useContext)(_SharedStateDecorator.SharedState); // Hooks\n\n  (0, _react.useEffect)(function () {\n    // Only intended to be used within componentDidMount, this method will fetch the last stored\n    // scroll position from SharedState and scroll (without animation) to that position\n    function restoreScrollPosition() {\n      var id = props.id;\n\n      if (id && context && context.get) {\n        var scrollPosition = context.get(\"\".concat(id, \".scrollPosition\"));\n\n        if (scrollPosition) {\n          scrollContainerHandle.current.scrollTo({\n            position: scrollPosition,\n            animate: false\n          });\n        }\n      }\n    }\n\n    restoreScrollPosition();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n};\n\nexports.useSpotlightRestore = useSpotlightRestore;","map":{"version":3,"sources":["C:/Users/tak43/remaking/node_modules/@enact/sandstone/useScroll/useSpotlight.js"],"names":["Object","defineProperty","exports","value","useSpotlightRestore","_react","require","_SharedStateDecorator","props","instances","scrollContainerHandle","context","useContext","SharedState","useEffect","restoreScrollPosition","id","get","scrollPosition","concat","current","scrollTo","position","animate"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,uDAAD,CAAnC;;AAEA,IAAIF,mBAAmB,GAAG,SAASA,mBAAT,CAA6BI,KAA7B,EAAoCC,SAApC,EAA+C;AACvE,MAAIC,qBAAqB,GAAGD,SAAS,CAACC,qBAAtC;AACA,MAAIC,OAAO,GAAG,CAAC,GAAGN,MAAM,CAACO,UAAX,EAAuBL,qBAAqB,CAACM,WAA7C,CAAd,CAFuE,CAEE;;AAEzE,GAAC,GAAGR,MAAM,CAACS,SAAX,EAAsB,YAAY;AAChC;AACA;AACA,aAASC,qBAAT,GAAiC;AAC/B,UAAIC,EAAE,GAAGR,KAAK,CAACQ,EAAf;;AAEA,UAAIA,EAAE,IAAIL,OAAN,IAAiBA,OAAO,CAACM,GAA7B,EAAkC;AAChC,YAAIC,cAAc,GAAGP,OAAO,CAACM,GAAR,CAAY,GAAGE,MAAH,CAAUH,EAAV,EAAc,iBAAd,CAAZ,CAArB;;AAEA,YAAIE,cAAJ,EAAoB;AAClBR,UAAAA,qBAAqB,CAACU,OAAtB,CAA8BC,QAA9B,CAAuC;AACrCC,YAAAA,QAAQ,EAAEJ,cAD2B;AAErCK,YAAAA,OAAO,EAAE;AAF4B,WAAvC;AAID;AACF;AACF;;AAEDR,IAAAA,qBAAqB;AACtB,GAnBD,EAmBG,EAnBH,EAJuE,CAuB/D;AACT,CAxBD;;AA0BAb,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSpotlightRestore = void 0;\n\nvar _react = require(\"react\");\n\nvar _SharedStateDecorator = require(\"../internal/SharedStateDecorator/SharedStateDecorator\");\n\nvar useSpotlightRestore = function useSpotlightRestore(props, instances) {\n  var scrollContainerHandle = instances.scrollContainerHandle;\n  var context = (0, _react.useContext)(_SharedStateDecorator.SharedState); // Hooks\n\n  (0, _react.useEffect)(function () {\n    // Only intended to be used within componentDidMount, this method will fetch the last stored\n    // scroll position from SharedState and scroll (without animation) to that position\n    function restoreScrollPosition() {\n      var id = props.id;\n\n      if (id && context && context.get) {\n        var scrollPosition = context.get(\"\".concat(id, \".scrollPosition\"));\n\n        if (scrollPosition) {\n          scrollContainerHandle.current.scrollTo({\n            position: scrollPosition,\n            animate: false\n          });\n        }\n      }\n    }\n\n    restoreScrollPosition();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n};\n\nexports.useSpotlightRestore = useSpotlightRestore;"]},"metadata":{},"sourceType":"module"}