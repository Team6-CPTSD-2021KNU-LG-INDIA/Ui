{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"useSkins\", {\n  enumerable: true,\n  get: function get() {\n    return _useSkins[\"default\"];\n  }\n});\nexports.Skinnable = exports[\"default\"] = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _useSkins = _interopRequireDefault(require(\"./useSkins\"));\n\nvar _util = require(\"./util\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Default config for `Skinnable`.\n *\n * @memberof ui/Skinnable.Skinnable\n * @hocconfig\n * @public\n */\n\n\nvar defaultConfig = {\n  /**\n   * The prop in which to pass the skinVariants value to the wrapped component. The recommended\n   * value is \"skinVariants\".\n   *\n   * If left unset, the skinVariant will not be passed to the wrapped component.\n   *\n   * @type {String}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  variantsProp: null,\n\n  /**\n   * The prop in which to pass the effective skin to the wrapped component.\n   *\n   * If left unset, the current skin will not be passed to the wrapped component.\n   *\n   * @type {String}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  prop: null,\n\n  /**\n   * A hash mapping the available skin names to their CSS class name.\n   *\n   * The keys are accepted as the only valid values for the `skin` prop on the wrapped component.\n   *\n   * @type {Object}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  skins: null,\n\n  /**\n   * Assign a default skin from the `skins` list.\n   *\n   * This will be used if the instantiator of the wrapped component provides no value to the\n   * `skin` prop.\n   *\n   * @type {String}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  defaultSkin: null,\n\n  /**\n   * Initial collection of applied variants\n   *\n   * This will be used if the instantiator of the wrapped component provides no value to the\n   * `skinVariants` prop.\n   *\n   * @type {String|String[]}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  defaultVariants: null,\n\n  /**\n   * A complete list of all supported variants.\n   *\n   * These will translate to CSS class names so should not conflict with any skin names.\n   * CamelCase is recommended for the values.\n   *\n   * @type {String[]}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  allowedVariants: null\n};\n/**\n * A higher-order component that assigns skinning classes for the purposes of styling children components.\n *\n * Use the config options to specify the skins your theme has. Set this up in your theme's decorator\n * component to establish your supported skins.\n *\n * Note: This HoC passes `className` to the wrapped component. It must be passed to the main DOM\n * node. Additionally, it can be configured to pass the skin and skin variant as props.\n *\n * Example:\n * ```\n * const MyApp = ({skinName, ...rest) => (<div {...props}>{skinName}</div>);\n * ...\n * App = Skinnable({\n * \tprop: 'skinName',\n * \tskins: {\n * \t\tdark: 'moonstone',\n * \t\tlight: 'moonstone-light'\n * \t},\n * \tdefaultTheme: 'dark'\n * \tdefaultVariants: ['highContrast'],\n * \tallowedVariants: ['highContrast', 'largeText', 'grayscale']\n * }, MyApp);\n * ```\n *\n * @class Skinnable\n * @memberof ui/Skinnable\n * @hoc\n * @public\n */\n\nvar Skinnable = (0, _hoc[\"default\"])(defaultConfig, function (config, Wrapped) {\n  var prop = config.prop,\n      skins = config.skins,\n      defaultSkin = config.defaultSkin,\n      variants = config.allowedVariants,\n      variantsProp = config.variantsProp;\n  var defaultVariants = (0, _util.objectify)(config.defaultVariants); // eslint-disable-next-line no-shadow\n\n  function Skinnable(_ref) {\n    var className = _ref.className,\n        skin = _ref.skin,\n        skinVariants = _ref.skinVariants,\n        rest = _objectWithoutProperties(_ref, [\"className\", \"skin\", \"skinVariants\"]);\n\n    var hook = (0, _useSkins[\"default\"])({\n      defaultSkin: defaultSkin,\n      defaultVariants: defaultVariants,\n      skin: skin,\n      skins: skins,\n      skinVariants: skinVariants,\n      variants: variants\n    });\n    var allClassNames = (0, _classnames[\"default\"])(hook.className, className);\n\n    if (allClassNames) {\n      rest.className = allClassNames;\n    }\n\n    if (prop) {\n      rest[prop] = hook.skin;\n    }\n\n    if (variantsProp) {\n      rest[variantsProp] = hook.variants;\n    }\n\n    return hook.provideSkins( /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread({}, rest)));\n  }\n\n  Skinnable.propTypes =\n  /** @lends ui/Skinnable.Skinnable.prototype */\n  {\n    /**\n     * The name of the skin a component should use to render itself. Available skins are\n     * defined in the \"defaultConfig\" for this HOC.\n     *\n     * @type {String}\n     * @public\n     */\n    skin: _propTypes[\"default\"].string,\n\n    /**\n     * The variant(s) on a skin that a component should use when rendering. These will\n     * typically alter the appearance of a skin's existing definition in a way that does not\n     * override that skin's general styling.\n     *\n     * Multiple data types are supported by this prop, which afford different conveniences\n     * and abilities. String and Array are effectively the same, supporting just additions\n     * to the variants being applied to a component, and are much more convenient. Objects\n     * may also be used, and have the ability to disable variants being passed by their\n     * ancestors. Objects take the format of a basic hash, with variants as key names and\n     * true/false Booleans as values, depicting their state. If a variant is excluded from\n     * any version of data type used to set this prop, that variant will ignored, falling\n     * back to the defaultVariant or parent variant, in that order.\n     *\n     * skinVariants examples:\n     * ```\n     *  // String\n     *  skinVariants=\"highContrast\"\n     *\n     *  // Array\n     *  skinVariants={['highContrast']}\n     *\n     *  // Object\n     *  skinVariants={{\n     *  \thighContrast: true,\n     *  \tgrayscale: false\n     *  }}\n     * ```\n     *\n     * @type {String|String[]|Object}\n     * @public\n     */\n    skinVariants: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].array, _propTypes[\"default\"].object])\n  };\n  return Skinnable;\n});\nexports.Skinnable = Skinnable;\nvar _default = Skinnable;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/tak43/remaking/node_modules/@enact/ui/Skinnable/Skinnable.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_useSkins","Skinnable","_classnames","_interopRequireDefault","require","_hoc","_propTypes","_util","_jsxRuntime","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","defaultConfig","variantsProp","prop","skins","defaultSkin","defaultVariants","allowedVariants","config","Wrapped","variants","objectify","_ref","className","skin","skinVariants","rest","hook","allClassNames","provideSkins","jsx","propTypes","string","oneOfType","array","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,UAA/B,EAA2C;AACzCE,EAAAA,UAAU,EAAE,IAD6B;AAEzCC,EAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,WAAOC,SAAS,CAAC,SAAD,CAAhB;AACD;AAJwC,CAA3C;AAMAJ,OAAO,CAACK,SAAR,GAAoBL,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA9C;;AAEA,IAAIM,WAAW,GAAGC,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAxC;;AAEA,IAAIC,IAAI,GAAGF,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAjC;;AAEA,IAAIE,UAAU,GAAGH,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIJ,SAAS,GAAGG,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC;;AAEA,IAAIG,KAAK,GAAGH,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAII,WAAW,GAAGJ,OAAO,CAAC,mBAAD,CAAzB;;AAEA,SAASD,sBAAT,CAAgCM,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,SAASE,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGpB,MAAM,CAACoB,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIlB,MAAM,CAACqB,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGtB,MAAM,CAACqB,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOxB,MAAM,CAACyB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CpB,UAApD;AAAiE,KAAjG,CAAV;AAA8GgB,IAAAA,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgBP,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASQ,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEb,MAAAA,OAAO,CAACjB,MAAM,CAACiC,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAInC,MAAM,CAACqC,yBAAX,EAAsC;AAAErC,MAAAA,MAAM,CAACsC,gBAAP,CAAwBT,MAAxB,EAAgC7B,MAAM,CAACqC,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEhB,MAAAA,OAAO,CAACjB,MAAM,CAACiC,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAEnC,QAAAA,MAAM,CAACC,cAAP,CAAsB4B,MAAtB,EAA8BM,GAA9B,EAAmCnC,MAAM,CAACyB,wBAAP,CAAgCQ,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBrB,GAAzB,EAA8BoB,GAA9B,EAAmChC,KAAnC,EAA0C;AAAE,MAAIgC,GAAG,IAAIpB,GAAX,EAAgB;AAAEf,IAAAA,MAAM,CAACC,cAAP,CAAsBc,GAAtB,EAA2BoB,GAA3B,EAAgC;AAAEhC,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,UAAU,EAAE,IAA5B;AAAkCmC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEzB,IAAAA,GAAG,CAACoB,GAAD,CAAH,GAAWhC,KAAX;AAAmB;;AAAC,SAAOY,GAAP;AAAa;;AAEjN,SAAS0B,wBAAT,CAAkCR,MAAlC,EAA0CS,QAA1C,EAAoD;AAAE,MAAIT,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;;AAAW,MAAIJ,MAAM,GAAGc,6BAA6B,CAACV,MAAD,EAASS,QAAT,CAA1C;;AAA8D,MAAIP,GAAJ,EAASL,CAAT;;AAAY,MAAI9B,MAAM,CAACqB,qBAAX,EAAkC;AAAE,QAAIuB,gBAAgB,GAAG5C,MAAM,CAACqB,qBAAP,CAA6BY,MAA7B,CAAvB;;AAA6D,SAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGc,gBAAgB,CAACZ,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAAEK,MAAAA,GAAG,GAAGS,gBAAgB,CAACd,CAAD,CAAtB;AAA2B,UAAIY,QAAQ,CAACG,OAAT,CAAiBV,GAAjB,KAAyB,CAA7B,EAAgC;AAAU,UAAI,CAACnC,MAAM,CAAC8C,SAAP,CAAiBC,oBAAjB,CAAsCC,IAAtC,CAA2Cf,MAA3C,EAAmDE,GAAnD,CAAL,EAA8D;AAAUN,MAAAA,MAAM,CAACM,GAAD,CAAN,GAAcF,MAAM,CAACE,GAAD,CAApB;AAA4B;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAE5e,SAASc,6BAAT,CAAuCV,MAAvC,EAA+CS,QAA/C,EAAyD;AAAE,MAAIT,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AAAW,MAAIJ,MAAM,GAAG,EAAb;AAAiB,MAAIoB,UAAU,GAAGjD,MAAM,CAACoB,IAAP,CAAYa,MAAZ,CAAjB;AAAsC,MAAIE,GAAJ,EAASL,CAAT;;AAAY,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGmB,UAAU,CAACjB,MAA3B,EAAmCF,CAAC,EAApC,EAAwC;AAAEK,IAAAA,GAAG,GAAGc,UAAU,CAACnB,CAAD,CAAhB;AAAqB,QAAIY,QAAQ,CAACG,OAAT,CAAiBV,GAAjB,KAAyB,CAA7B,EAAgC;AAAUN,IAAAA,MAAM,CAACM,GAAD,CAAN,GAAcF,MAAM,CAACE,GAAD,CAApB;AAA4B;;AAAC,SAAON,MAAP;AAAgB;AAEnT;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIqB,aAAa,GAAG;AAClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,YAAY,EAAE,IAVI;;AAYlB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,IAAI,EAAE,IApBY;;AAsBlB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,KAAK,EAAE,IA9BW;;AAgClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAE,IAzCK;;AA2ClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,IApDC;;AAsDlB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE;AA/DC,CAApB;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIjD,SAAS,GAAG,CAAC,GAAGI,IAAI,CAAC,SAAD,CAAR,EAAqBuC,aAArB,EAAoC,UAAUO,MAAV,EAAkBC,OAAlB,EAA2B;AAC7E,MAAIN,IAAI,GAAGK,MAAM,CAACL,IAAlB;AAAA,MACIC,KAAK,GAAGI,MAAM,CAACJ,KADnB;AAAA,MAEIC,WAAW,GAAGG,MAAM,CAACH,WAFzB;AAAA,MAGIK,QAAQ,GAAGF,MAAM,CAACD,eAHtB;AAAA,MAIIL,YAAY,GAAGM,MAAM,CAACN,YAJ1B;AAKA,MAAII,eAAe,GAAG,CAAC,GAAG1C,KAAK,CAAC+C,SAAV,EAAqBH,MAAM,CAACF,eAA5B,CAAtB,CAN6E,CAMT;;AAEpE,WAAShD,SAAT,CAAmBsD,IAAnB,EAAyB;AACvB,QAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,QACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;AAAA,QAEIC,YAAY,GAAGH,IAAI,CAACG,YAFxB;AAAA,QAGIC,IAAI,GAAGxB,wBAAwB,CAACoB,IAAD,EAAO,CAAC,WAAD,EAAc,MAAd,EAAsB,cAAtB,CAAP,CAHnC;;AAKA,QAAIK,IAAI,GAAG,CAAC,GAAG5D,SAAS,CAAC,SAAD,CAAb,EAA0B;AACnCgD,MAAAA,WAAW,EAAEA,WADsB;AAEnCC,MAAAA,eAAe,EAAEA,eAFkB;AAGnCQ,MAAAA,IAAI,EAAEA,IAH6B;AAInCV,MAAAA,KAAK,EAAEA,KAJ4B;AAKnCW,MAAAA,YAAY,EAAEA,YALqB;AAMnCL,MAAAA,QAAQ,EAAEA;AANyB,KAA1B,CAAX;AAQA,QAAIQ,aAAa,GAAG,CAAC,GAAG3D,WAAW,CAAC,SAAD,CAAf,EAA4B0D,IAAI,CAACJ,SAAjC,EAA4CA,SAA5C,CAApB;;AAEA,QAAIK,aAAJ,EAAmB;AACjBF,MAAAA,IAAI,CAACH,SAAL,GAAiBK,aAAjB;AACD;;AAED,QAAIf,IAAJ,EAAU;AACRa,MAAAA,IAAI,CAACb,IAAD,CAAJ,GAAac,IAAI,CAACH,IAAlB;AACD;;AAED,QAAIZ,YAAJ,EAAkB;AAChBc,MAAAA,IAAI,CAACd,YAAD,CAAJ,GAAqBe,IAAI,CAACP,QAA1B;AACD;;AAED,WAAOO,IAAI,CAACE,YAAL,EAAmB,aAAa,CAAC,GAAGtD,WAAW,CAACuD,GAAhB,EAAqBX,OAArB,EAA8B9B,aAAa,CAAC,EAAD,EAAKqC,IAAL,CAA3C,CAAhC,CAAP;AACD;;AAED1D,EAAAA,SAAS,CAAC+D,SAAV;AACA;AACA;AACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACIP,IAAAA,IAAI,EAAEnD,UAAU,CAAC,SAAD,CAAV,CAAsB2D,MAR9B;;AAUE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIP,IAAAA,YAAY,EAAEpD,UAAU,CAAC,SAAD,CAAV,CAAsB4D,SAAtB,CAAgC,CAAC5D,UAAU,CAAC,SAAD,CAAV,CAAsB2D,MAAvB,EAA+B3D,UAAU,CAAC,SAAD,CAAV,CAAsB6D,KAArD,EAA4D7D,UAAU,CAAC,SAAD,CAAV,CAAsBM,MAAlF,CAAhC;AA1ChB,GAFA;AA8CA,SAAOX,SAAP;AACD,CAtFe,CAAhB;AAuFAL,OAAO,CAACK,SAAR,GAAoBA,SAApB;AACA,IAAImE,QAAQ,GAAGnE,SAAf;AACAL,OAAO,CAAC,SAAD,CAAP,GAAqBwE,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"useSkins\", {\n  enumerable: true,\n  get: function get() {\n    return _useSkins[\"default\"];\n  }\n});\nexports.Skinnable = exports[\"default\"] = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _useSkins = _interopRequireDefault(require(\"./useSkins\"));\n\nvar _util = require(\"./util\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Default config for `Skinnable`.\n *\n * @memberof ui/Skinnable.Skinnable\n * @hocconfig\n * @public\n */\nvar defaultConfig = {\n  /**\n   * The prop in which to pass the skinVariants value to the wrapped component. The recommended\n   * value is \"skinVariants\".\n   *\n   * If left unset, the skinVariant will not be passed to the wrapped component.\n   *\n   * @type {String}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  variantsProp: null,\n\n  /**\n   * The prop in which to pass the effective skin to the wrapped component.\n   *\n   * If left unset, the current skin will not be passed to the wrapped component.\n   *\n   * @type {String}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  prop: null,\n\n  /**\n   * A hash mapping the available skin names to their CSS class name.\n   *\n   * The keys are accepted as the only valid values for the `skin` prop on the wrapped component.\n   *\n   * @type {Object}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  skins: null,\n\n  /**\n   * Assign a default skin from the `skins` list.\n   *\n   * This will be used if the instantiator of the wrapped component provides no value to the\n   * `skin` prop.\n   *\n   * @type {String}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  defaultSkin: null,\n\n  /**\n   * Initial collection of applied variants\n   *\n   * This will be used if the instantiator of the wrapped component provides no value to the\n   * `skinVariants` prop.\n   *\n   * @type {String|String[]}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  defaultVariants: null,\n\n  /**\n   * A complete list of all supported variants.\n   *\n   * These will translate to CSS class names so should not conflict with any skin names.\n   * CamelCase is recommended for the values.\n   *\n   * @type {String[]}\n   * @memberof ui/Skinnable.Skinnable.defaultConfig\n   */\n  allowedVariants: null\n};\n/**\n * A higher-order component that assigns skinning classes for the purposes of styling children components.\n *\n * Use the config options to specify the skins your theme has. Set this up in your theme's decorator\n * component to establish your supported skins.\n *\n * Note: This HoC passes `className` to the wrapped component. It must be passed to the main DOM\n * node. Additionally, it can be configured to pass the skin and skin variant as props.\n *\n * Example:\n * ```\n * const MyApp = ({skinName, ...rest) => (<div {...props}>{skinName}</div>);\n * ...\n * App = Skinnable({\n * \tprop: 'skinName',\n * \tskins: {\n * \t\tdark: 'moonstone',\n * \t\tlight: 'moonstone-light'\n * \t},\n * \tdefaultTheme: 'dark'\n * \tdefaultVariants: ['highContrast'],\n * \tallowedVariants: ['highContrast', 'largeText', 'grayscale']\n * }, MyApp);\n * ```\n *\n * @class Skinnable\n * @memberof ui/Skinnable\n * @hoc\n * @public\n */\n\nvar Skinnable = (0, _hoc[\"default\"])(defaultConfig, function (config, Wrapped) {\n  var prop = config.prop,\n      skins = config.skins,\n      defaultSkin = config.defaultSkin,\n      variants = config.allowedVariants,\n      variantsProp = config.variantsProp;\n  var defaultVariants = (0, _util.objectify)(config.defaultVariants); // eslint-disable-next-line no-shadow\n\n  function Skinnable(_ref) {\n    var className = _ref.className,\n        skin = _ref.skin,\n        skinVariants = _ref.skinVariants,\n        rest = _objectWithoutProperties(_ref, [\"className\", \"skin\", \"skinVariants\"]);\n\n    var hook = (0, _useSkins[\"default\"])({\n      defaultSkin: defaultSkin,\n      defaultVariants: defaultVariants,\n      skin: skin,\n      skins: skins,\n      skinVariants: skinVariants,\n      variants: variants\n    });\n    var allClassNames = (0, _classnames[\"default\"])(hook.className, className);\n\n    if (allClassNames) {\n      rest.className = allClassNames;\n    }\n\n    if (prop) {\n      rest[prop] = hook.skin;\n    }\n\n    if (variantsProp) {\n      rest[variantsProp] = hook.variants;\n    }\n\n    return hook.provideSkins( /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread({}, rest)));\n  }\n\n  Skinnable.propTypes =\n  /** @lends ui/Skinnable.Skinnable.prototype */\n  {\n    /**\n     * The name of the skin a component should use to render itself. Available skins are\n     * defined in the \"defaultConfig\" for this HOC.\n     *\n     * @type {String}\n     * @public\n     */\n    skin: _propTypes[\"default\"].string,\n\n    /**\n     * The variant(s) on a skin that a component should use when rendering. These will\n     * typically alter the appearance of a skin's existing definition in a way that does not\n     * override that skin's general styling.\n     *\n     * Multiple data types are supported by this prop, which afford different conveniences\n     * and abilities. String and Array are effectively the same, supporting just additions\n     * to the variants being applied to a component, and are much more convenient. Objects\n     * may also be used, and have the ability to disable variants being passed by their\n     * ancestors. Objects take the format of a basic hash, with variants as key names and\n     * true/false Booleans as values, depicting their state. If a variant is excluded from\n     * any version of data type used to set this prop, that variant will ignored, falling\n     * back to the defaultVariant or parent variant, in that order.\n     *\n     * skinVariants examples:\n     * ```\n     *  // String\n     *  skinVariants=\"highContrast\"\n     *\n     *  // Array\n     *  skinVariants={['highContrast']}\n     *\n     *  // Object\n     *  skinVariants={{\n     *  \thighContrast: true,\n     *  \tgrayscale: false\n     *  }}\n     * ```\n     *\n     * @type {String|String[]|Object}\n     * @public\n     */\n    skinVariants: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].array, _propTypes[\"default\"].object])\n  };\n  return Skinnable;\n});\nexports.Skinnable = Skinnable;\nvar _default = Skinnable;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}