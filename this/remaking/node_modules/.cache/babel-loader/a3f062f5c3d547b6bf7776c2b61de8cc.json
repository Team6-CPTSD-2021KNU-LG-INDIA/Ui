{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapWithView = exports.View = exports[\"default\"] = void 0;\n\nvar _util = require(\"@enact/core/util\");\n\nvar _react = require(\"react\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _Arranger = require(\"./Arranger\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n} // If the View was \"appearing\", then entering will always be false and this will not result in a\n// re-render. If the view should enter, state.enter will be true and this will toggle it to false\n// causing a re-render.\n\n\nvar clearEntering = function clearEntering(_ref) {\n  var entering = _ref.entering;\n  return entering ? {\n    entering: false\n  } : null;\n};\n/**\n * A `View` wraps a set of children for {@link ui/ViewManager.ViewManager}.\n * It is not intended to be used directly\n *\n * @class View\n * @memberof ui/ViewManager\n * @private\n */\n\n\nvar View = /*#__PURE__*/function (_Component) {\n  _inherits(View, _Component);\n\n  var _super = _createSuper(View);\n\n  function View(props) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _super.call(this, props);\n    _this.enteringJob = new _util.Job(function () {\n      _this.setState(clearEntering);\n    });\n\n    _this.prepareTransition = function (arranger, callback, noAnimation) {\n      var _this$props = _this.props,\n          duration = _this$props.duration,\n          index = _this$props.index,\n          _this$props$previousI = _this$props.previousIndex,\n          previousIndex = _this$props$previousI === void 0 ? index : _this$props$previousI,\n          reverseTransition = _this$props.reverseTransition,\n          rtl = _this$props.rtl; // Need to ensure that we have a valid node reference before we animation. Sometimes, React\n      // will replace the node after mount causing a reference cached there to be invalid.\n      // eslint-disable-next-line react/no-find-dom-node\n\n      _this.node = _reactDom[\"default\"].findDOMNode(_assertThisInitialized(_this));\n\n      if (_this.animation && _this.animation.playState !== 'finished' && _this.changeDirection) {\n        _this.animation.reverse();\n      } else {\n        _this.animation = arranger({\n          from: previousIndex,\n          node: _this.node,\n          reverse: reverseTransition,\n          rtl: rtl,\n          to: index,\n          fill: 'forwards',\n          duration: duration\n        });\n      } // Must set a new handler here to ensure the right callback is invoked\n\n\n      _this.animation.onfinish = function () {\n        _this.animation = null; // Possible for the animation callback to still be fired after the node has been\n        // unmounted if it finished before the unmount can cancel it so we check for that.\n\n        if (_this.node) {\n          callback();\n        }\n      }; // disable animation when the instance or props flag is true\n\n\n      if (noAnimation || _this.props.noAnimation) {\n        _this.animation.finish();\n      }\n    };\n\n    _this.animation = null;\n    _this.state = {\n      entering: !props.appearing\n    };\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.leaving) {\n        // FIXME: This is generally a bad practice to mutate local state in sCU but is necessary\n        // for the time being to ensure that a view that is reversed before it completes\n        // entering will transition correctly out of the viewport.\n        this.changeDirection = this.shouldChangeDirection(this.props, nextProps);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.changeDirection = this.shouldChangeDirection(prevProps, this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.enteringJob.stop();\n      this.node = null;\n\n      if (this.animation) {\n        this.animation.cancel();\n      }\n    }\n  }, {\n    key: \"shouldChangeDirection\",\n    value: function shouldChangeDirection(prevProps, nextProps) {\n      return this.animation ? prevProps.reverseTransition !== nextProps.reverseTransition : false;\n    }\n  }, {\n    key: \"componentWillAppear\",\n    value: function componentWillAppear(callback) {\n      var arranger = this.props.arranger;\n\n      if (arranger && arranger.stay) {\n        this.prepareTransition(arranger.stay, callback, true);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"componentDidAppear\",\n    value: function componentDidAppear() {\n      this.setState(clearEntering);\n    } // This is called at the same time as componentDidMount() for components added to an existing\n    // TransitionGroup. It will block other animations from occurring until callback is called. It\n    // will not be called on the initial render of a TransitionGroup.\n\n  }, {\n    key: \"componentWillEnter\",\n    value: function componentWillEnter(callback) {\n      var _this$props2 = this.props,\n          appearing = _this$props2.appearing,\n          arranger = _this$props2.arranger,\n          reverseTransition = _this$props2.reverseTransition,\n          enteringProp = _this$props2.enteringProp; // This can happen if the panel was going to be removed and the animation was canceled,\n      // causing this panel to re-enter.\n\n      if (!appearing && enteringProp && !this.state.entering) {\n        this.setState({\n          entering: true\n        });\n      }\n\n      if (arranger) {\n        this.prepareTransition(reverseTransition ? arranger.leave : arranger.enter, callback);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"componentDidEnter\",\n    value: function componentDidEnter() {\n      var _this$props3 = this.props,\n          enteringDelay = _this$props3.enteringDelay,\n          enteringProp = _this$props3.enteringProp;\n\n      if (enteringProp) {\n        // FIXME: `startRafAfter` is a temporary solution using rAF. We need a better way to handle\n        // transition cycle and component life cycle to be in sync. See ENYO-4835.\n        this.enteringJob.startRafAfter(enteringDelay);\n      }\n    }\n  }, {\n    key: \"componentWillStay\",\n    value: function componentWillStay(callback) {\n      var arranger = this.props.arranger;\n\n      if (arranger && arranger.stay) {\n        this.prepareTransition(arranger.stay, callback);\n      } else {\n        callback();\n      }\n    } // This is called when the child has been removed from the ReactTransitionGroup. Though the\n    // child has been removed, ReactTransitionGroup will keep it in the DOM until callback is\n    // called.\n\n  }, {\n    key: \"componentWillLeave\",\n    value: function componentWillLeave(callback) {\n      var _this$props4 = this.props,\n          arranger = _this$props4.arranger,\n          reverseTransition = _this$props4.reverseTransition;\n      this.enteringJob.stop();\n\n      if (arranger) {\n        this.prepareTransition(reverseTransition ? arranger.enter : arranger.leave, callback);\n      } else {\n        callback();\n      }\n    }\n    /**\n     * Initiates a new transition\n     *\n     * @param\t{Function}\tarranger\t\tArranger function to call (enter, leave)\n     * @param\t{Function}\tcallback\t\tCompletion callback\n     * @param\t{Boolean}\t[noAnimation]\t`true` to disable animation for this transition\n     * @returns {undefined}\n     * @private\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          enteringProp = _this$props5.enteringProp,\n          children = _this$props5.children,\n          childProps = _this$props5.childProps;\n\n      if (enteringProp || childProps) {\n        var props = Object.assign({}, childProps);\n\n        if (enteringProp) {\n          props[enteringProp] = this.state.entering;\n        }\n\n        return /*#__PURE__*/(0, _react.cloneElement)(children, props);\n      } else {\n        return _react.Children.only(children);\n      }\n    }\n  }]);\n\n  return View;\n}(_react.Component); // Not a true render method but instead a wrapper for TransitionGroup to wrap arbitrary children\n// with a TransitionGroup-compatible child that supports animation\n//\n// eslint-disable-next-line enact/display-name\n\n\nexports.View = View;\nView.propTypes =\n/** @lends ui/ViewManager.View.prototype */\n{\n  children: _propTypes[\"default\"].node.isRequired,\n\n  /**\n   * Time in milliseconds to complete a transition\n   *\n   * @type {Number}\n   * @required\n   * @public\n   */\n  duration: _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Set to `true` when the View should 'appear' without transitioning into the viewport\n   *\n   * @type {Boolean}\n   * @public\n   */\n  appearing: _propTypes[\"default\"].bool,\n\n  /**\n   * Arranger to control the animation\n   *\n   * @type {Arranger}\n   * @public\n   */\n  arranger: _Arranger.shape,\n\n  /**\n   * An object containing properties to be passed to each child.\n   *\n   * @type {Object}\n   * @public\n   */\n  childProps: _propTypes[\"default\"].object,\n\n  /**\n   * Time, in milliseconds, to wait after a view has entered to inform it by passing the\n   * `enteringProp` as `false`.\n   *\n   * @type {Number}\n   * @default 0\n   * @public\n   */\n  enteringDelay: _propTypes[\"default\"].number,\n\n  /**\n   * Name of the property to pass to the wrapped view to indicate when it is entering the\n   * viewport. When `true`, the view has been created but has not transitioned into place.\n   * When `false`, the view has finished its transition.\n   *\n   * The notification can be delayed by setting `enteringDelay`. If not set, the view will not\n   * be notified of the change in transition.\n   *\n   * @type {String}\n   * @public\n   */\n  enteringProp: _propTypes[\"default\"].string,\n\n  /**\n   * Index of the currently 'active' view.\n   *\n   * @type {Number}\n   */\n  index: _propTypes[\"default\"].number,\n\n  /**\n   * When `true`, indicates if a view is currently leaving.\n   *\n   * @type {Boolean}\n   */\n  leaving: _propTypes[\"default\"].bool,\n\n  /**\n   * When `true`, indicates if the transition should be animated\n   *\n   * @type {Boolean}\n   * @default true\n   * @public\n   */\n  noAnimation: _propTypes[\"default\"].bool,\n\n  /**\n   * Index of the previously 'active' view.\n   *\n   * @type {Number}\n   */\n  previousIndex: _propTypes[\"default\"].number,\n\n  /**\n   * When `true`, indicates if the transition should be reversed. The effect depends on how the provided\n   * `arranger` handles reversal.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  reverseTransition: _propTypes[\"default\"].bool,\n\n  /**\n   * When `true`, indicates the current locale uses right-to-left reading order.\n   *\n   * The effect depends on how the provided `arranger` handles this option.\n   *\n   * @type {Boolean}\n   */\n  rtl: _propTypes[\"default\"].bool\n};\nView.defaultProps = {\n  appearing: false,\n  enteringDelay: 0,\n  index: 0,\n  reverseTransition: false\n};\n\nvar wrapWithView = function wrapWithView(config) {\n  return function (child) {\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(View, _objectSpread(_objectSpread({}, config), {}, {\n      children: child\n    }));\n  };\n};\n\nexports.wrapWithView = wrapWithView;\nvar _default = View;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["C:/Users/tak43/remaking/node_modules/@enact/ui/ViewManager/View.js"],"names":["Object","defineProperty","exports","value","wrapWithView","View","_util","require","_react","_propTypes","_interopRequireDefault","_reactDom","_Arranger","_jsxRuntime","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","_inherits","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","clearEntering","_ref","entering","_Component","_super","_this","enteringJob","Job","setState","prepareTransition","arranger","callback","noAnimation","_this$props","duration","index","_this$props$previousI","previousIndex","reverseTransition","rtl","node","findDOMNode","animation","playState","changeDirection","reverse","from","to","fill","onfinish","finish","state","appearing","shouldComponentUpdate","nextProps","leaving","shouldChangeDirection","componentDidUpdate","prevProps","componentWillUnmount","stop","cancel","componentWillAppear","stay","componentDidAppear","componentWillEnter","_this$props2","enteringProp","leave","enter","componentDidEnter","_this$props3","enteringDelay","startRafAfter","componentWillStay","componentWillLeave","_this$props4","render","_this$props5","children","childProps","assign","cloneElement","Children","only","Component","propTypes","isRequired","number","bool","shape","string","defaultProps","config","child","jsx","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapWithView = exports.View = exports[\"default\"] = void 0;\n\nvar _util = require(\"@enact/core/util\");\n\nvar _react = require(\"react\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _Arranger = require(\"./Arranger\");\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// If the View was \"appearing\", then entering will always be false and this will not result in a\n// re-render. If the view should enter, state.enter will be true and this will toggle it to false\n// causing a re-render.\nvar clearEntering = function clearEntering(_ref) {\n  var entering = _ref.entering;\n  return entering ? {\n    entering: false\n  } : null;\n};\n/**\n * A `View` wraps a set of children for {@link ui/ViewManager.ViewManager}.\n * It is not intended to be used directly\n *\n * @class View\n * @memberof ui/ViewManager\n * @private\n */\n\n\nvar View = /*#__PURE__*/function (_Component) {\n  _inherits(View, _Component);\n\n  var _super = _createSuper(View);\n\n  function View(props) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _super.call(this, props);\n    _this.enteringJob = new _util.Job(function () {\n      _this.setState(clearEntering);\n    });\n\n    _this.prepareTransition = function (arranger, callback, noAnimation) {\n      var _this$props = _this.props,\n          duration = _this$props.duration,\n          index = _this$props.index,\n          _this$props$previousI = _this$props.previousIndex,\n          previousIndex = _this$props$previousI === void 0 ? index : _this$props$previousI,\n          reverseTransition = _this$props.reverseTransition,\n          rtl = _this$props.rtl; // Need to ensure that we have a valid node reference before we animation. Sometimes, React\n      // will replace the node after mount causing a reference cached there to be invalid.\n      // eslint-disable-next-line react/no-find-dom-node\n\n      _this.node = _reactDom[\"default\"].findDOMNode(_assertThisInitialized(_this));\n\n      if (_this.animation && _this.animation.playState !== 'finished' && _this.changeDirection) {\n        _this.animation.reverse();\n      } else {\n        _this.animation = arranger({\n          from: previousIndex,\n          node: _this.node,\n          reverse: reverseTransition,\n          rtl: rtl,\n          to: index,\n          fill: 'forwards',\n          duration: duration\n        });\n      } // Must set a new handler here to ensure the right callback is invoked\n\n\n      _this.animation.onfinish = function () {\n        _this.animation = null; // Possible for the animation callback to still be fired after the node has been\n        // unmounted if it finished before the unmount can cancel it so we check for that.\n\n        if (_this.node) {\n          callback();\n        }\n      }; // disable animation when the instance or props flag is true\n\n\n      if (noAnimation || _this.props.noAnimation) {\n        _this.animation.finish();\n      }\n    };\n\n    _this.animation = null;\n    _this.state = {\n      entering: !props.appearing\n    };\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.leaving) {\n        // FIXME: This is generally a bad practice to mutate local state in sCU but is necessary\n        // for the time being to ensure that a view that is reversed before it completes\n        // entering will transition correctly out of the viewport.\n        this.changeDirection = this.shouldChangeDirection(this.props, nextProps);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.changeDirection = this.shouldChangeDirection(prevProps, this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.enteringJob.stop();\n      this.node = null;\n\n      if (this.animation) {\n        this.animation.cancel();\n      }\n    }\n  }, {\n    key: \"shouldChangeDirection\",\n    value: function shouldChangeDirection(prevProps, nextProps) {\n      return this.animation ? prevProps.reverseTransition !== nextProps.reverseTransition : false;\n    }\n  }, {\n    key: \"componentWillAppear\",\n    value: function componentWillAppear(callback) {\n      var arranger = this.props.arranger;\n\n      if (arranger && arranger.stay) {\n        this.prepareTransition(arranger.stay, callback, true);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"componentDidAppear\",\n    value: function componentDidAppear() {\n      this.setState(clearEntering);\n    } // This is called at the same time as componentDidMount() for components added to an existing\n    // TransitionGroup. It will block other animations from occurring until callback is called. It\n    // will not be called on the initial render of a TransitionGroup.\n\n  }, {\n    key: \"componentWillEnter\",\n    value: function componentWillEnter(callback) {\n      var _this$props2 = this.props,\n          appearing = _this$props2.appearing,\n          arranger = _this$props2.arranger,\n          reverseTransition = _this$props2.reverseTransition,\n          enteringProp = _this$props2.enteringProp; // This can happen if the panel was going to be removed and the animation was canceled,\n      // causing this panel to re-enter.\n\n      if (!appearing && enteringProp && !this.state.entering) {\n        this.setState({\n          entering: true\n        });\n      }\n\n      if (arranger) {\n        this.prepareTransition(reverseTransition ? arranger.leave : arranger.enter, callback);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"componentDidEnter\",\n    value: function componentDidEnter() {\n      var _this$props3 = this.props,\n          enteringDelay = _this$props3.enteringDelay,\n          enteringProp = _this$props3.enteringProp;\n\n      if (enteringProp) {\n        // FIXME: `startRafAfter` is a temporary solution using rAF. We need a better way to handle\n        // transition cycle and component life cycle to be in sync. See ENYO-4835.\n        this.enteringJob.startRafAfter(enteringDelay);\n      }\n    }\n  }, {\n    key: \"componentWillStay\",\n    value: function componentWillStay(callback) {\n      var arranger = this.props.arranger;\n\n      if (arranger && arranger.stay) {\n        this.prepareTransition(arranger.stay, callback);\n      } else {\n        callback();\n      }\n    } // This is called when the child has been removed from the ReactTransitionGroup. Though the\n    // child has been removed, ReactTransitionGroup will keep it in the DOM until callback is\n    // called.\n\n  }, {\n    key: \"componentWillLeave\",\n    value: function componentWillLeave(callback) {\n      var _this$props4 = this.props,\n          arranger = _this$props4.arranger,\n          reverseTransition = _this$props4.reverseTransition;\n      this.enteringJob.stop();\n\n      if (arranger) {\n        this.prepareTransition(reverseTransition ? arranger.enter : arranger.leave, callback);\n      } else {\n        callback();\n      }\n    }\n    /**\n     * Initiates a new transition\n     *\n     * @param\t{Function}\tarranger\t\tArranger function to call (enter, leave)\n     * @param\t{Function}\tcallback\t\tCompletion callback\n     * @param\t{Boolean}\t[noAnimation]\t`true` to disable animation for this transition\n     * @returns {undefined}\n     * @private\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          enteringProp = _this$props5.enteringProp,\n          children = _this$props5.children,\n          childProps = _this$props5.childProps;\n\n      if (enteringProp || childProps) {\n        var props = Object.assign({}, childProps);\n\n        if (enteringProp) {\n          props[enteringProp] = this.state.entering;\n        }\n\n        return /*#__PURE__*/(0, _react.cloneElement)(children, props);\n      } else {\n        return _react.Children.only(children);\n      }\n    }\n  }]);\n\n  return View;\n}(_react.Component); // Not a true render method but instead a wrapper for TransitionGroup to wrap arbitrary children\n// with a TransitionGroup-compatible child that supports animation\n//\n// eslint-disable-next-line enact/display-name\n\n\nexports.View = View;\nView.propTypes =\n/** @lends ui/ViewManager.View.prototype */\n{\n  children: _propTypes[\"default\"].node.isRequired,\n\n  /**\n   * Time in milliseconds to complete a transition\n   *\n   * @type {Number}\n   * @required\n   * @public\n   */\n  duration: _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Set to `true` when the View should 'appear' without transitioning into the viewport\n   *\n   * @type {Boolean}\n   * @public\n   */\n  appearing: _propTypes[\"default\"].bool,\n\n  /**\n   * Arranger to control the animation\n   *\n   * @type {Arranger}\n   * @public\n   */\n  arranger: _Arranger.shape,\n\n  /**\n   * An object containing properties to be passed to each child.\n   *\n   * @type {Object}\n   * @public\n   */\n  childProps: _propTypes[\"default\"].object,\n\n  /**\n   * Time, in milliseconds, to wait after a view has entered to inform it by passing the\n   * `enteringProp` as `false`.\n   *\n   * @type {Number}\n   * @default 0\n   * @public\n   */\n  enteringDelay: _propTypes[\"default\"].number,\n\n  /**\n   * Name of the property to pass to the wrapped view to indicate when it is entering the\n   * viewport. When `true`, the view has been created but has not transitioned into place.\n   * When `false`, the view has finished its transition.\n   *\n   * The notification can be delayed by setting `enteringDelay`. If not set, the view will not\n   * be notified of the change in transition.\n   *\n   * @type {String}\n   * @public\n   */\n  enteringProp: _propTypes[\"default\"].string,\n\n  /**\n   * Index of the currently 'active' view.\n   *\n   * @type {Number}\n   */\n  index: _propTypes[\"default\"].number,\n\n  /**\n   * When `true`, indicates if a view is currently leaving.\n   *\n   * @type {Boolean}\n   */\n  leaving: _propTypes[\"default\"].bool,\n\n  /**\n   * When `true`, indicates if the transition should be animated\n   *\n   * @type {Boolean}\n   * @default true\n   * @public\n   */\n  noAnimation: _propTypes[\"default\"].bool,\n\n  /**\n   * Index of the previously 'active' view.\n   *\n   * @type {Number}\n   */\n  previousIndex: _propTypes[\"default\"].number,\n\n  /**\n   * When `true`, indicates if the transition should be reversed. The effect depends on how the provided\n   * `arranger` handles reversal.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  reverseTransition: _propTypes[\"default\"].bool,\n\n  /**\n   * When `true`, indicates the current locale uses right-to-left reading order.\n   *\n   * The effect depends on how the provided `arranger` handles this option.\n   *\n   * @type {Boolean}\n   */\n  rtl: _propTypes[\"default\"].bool\n};\nView.defaultProps = {\n  appearing: false,\n  enteringDelay: 0,\n  index: 0,\n  reverseTransition: false\n};\n\nvar wrapWithView = function wrapWithView(config) {\n  return function (child) {\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(View, _objectSpread(_objectSpread({}, config), {}, {\n      children: child\n    }));\n  };\n};\n\nexports.wrapWithView = wrapWithView;\nvar _default = View;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}