"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setInputType = exports.getInputType = exports.activateInputType = exports.SpotlightRootDecorator = exports["default"] = void 0;

var _hoc = _interopRequireDefault(require("@enact/core/hoc"));

var _keymap = require("@enact/core/keymap");

var _react = require("react");

var _spotlight = _interopRequireDefault(require("../src/spotlight"));

var _Spottable = require("../Spottable");

var _container = require("../src/container");

require("../styles/debug.less");

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var input = {
  activated: false,
  applied: false,
  types: {
    key: true,
    mouse: false,
    touch: false
  }
};

var activateInputType = function activateInputType(activated) {
  input.activated = activated;
};

exports.activateInputType = activateInputType;

var getInputType = function getInputType() {
  return Object.keys(input.types).find(function (type) {
    return input.types[type];
  });
};

exports.getInputType = getInputType;

var setInputType = function setInputType(inputType) {
  if (Object.prototype.hasOwnProperty.call(input.types, inputType) && !input.types[inputType]) {
    Object.keys(input.types).map(function (type) {
      input.types[type] = false;
    });
    input.types[inputType] = true;
    input.applied = false;
  }
};
/**
 * Default configuration for SpotlightRootDecorator
 *
 * @hocconfig
 * @memberof spotlight/SpotlightRootDecorator.SpotlightRootDecorator
 */


exports.setInputType = setInputType;
var defaultConfig = {
  /**
   * When `true`, the contents of the component will not receive spotlight focus after being rendered.
   *
   * @type {Boolean}
   * @default false
   * @public
   * @memberof spotlight/SpotlightRootDecorator.SpotlightRootDecorator.defaultConfig
   */
  noAutoFocus: false
};
/**
 * Constructs a higher-order component that initializes and enables Spotlight 5-way navigation
 * within an application.
 *
 * No additional properties are passed to the wrapped component.
 *
 * Example:
 * ```
 *	const App = SpotlightRootDecorator(ApplicationView);
 * ```
 *
 * @class SpotlightRootDecorator
 * @memberof spotlight/SpotlightRootDecorator
 * @param  {Object} defaultConfig Set of default configuration parameters
 * @param  {Function} Wrapped higher-order component
 * @returns {Function} SpotlightRootDecorator
 * @hoc
 */

var SpotlightRootDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var noAutoFocus = config.noAutoFocus;
  return _temp = _class = /*#__PURE__*/function (_Component) {
    _inherits(_class, _Component);

    var _super = _createSuper(_class);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _super.call(this, props);

      _this.applyInputType = function () {
        if (_assertThisInitialized(_this) && _this.containerRef && _this.containerRef.current) {
          Object.keys(input.types).map(function (type) {
            _this.containerRef.current.classList.toggle('spotlight-input-' + type, input.types[type]);
          });
          input.applied = true;
        }
      };

      _this.handleFocusIn = function () {
        if (!input.applied) {
          _this.applyInputType();
        }
      };

      _this.handleKeyDown = function (ev) {
        var keyCode = ev.keyCode;

        if ((0, _keymap.is)('enter', keyCode) && _this.containerRef.current.classList.contains('spotlight-input-touch')) {
          // Prevent onclick event trigger by enter key
          ev.preventDefault();
        }

        setTimeout(function () {
          if (!input.activated) {
            setInputType('key');
          }

          _this.applyInputType();
        }, 0);
      };

      _this.handlePointerMove = function (ev) {
        if (ev.pointerType === 'mouse') {
          setInputType('mouse');

          _this.applyInputType();
        }
      };

      _this.handlePointerOver = function (ev) {
        if (ev.pointerType === 'touch') {
          setInputType('touch');

          _this.applyInputType();
        }
      };

      _this.navigableFilter = function (elem) {
        while (elem && elem !== document && elem.nodeType === 1) {
          if (elem.getAttribute('data-spotlight-container-disabled') === 'true') return false;
          elem = elem.parentNode;
        }
      };

      _this.containerRef = /*#__PURE__*/(0, _react.createRef)();

      if (typeof window === 'object') {
        _spotlight["default"].initialize({
          selector: '.' + _Spottable.spottableClass,
          restrict: 'none'
        });

        _spotlight["default"].set(_container.rootContainerId, {
          overflow: true
        });
      }

      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (!noAutoFocus) {
          _spotlight["default"].focus();
        }

        if (typeof document === 'object') {
          document.addEventListener('focusin', this.handleFocusIn, {
            capture: true
          });
          document.addEventListener('keydown', this.handleKeyDown, {
            capture: true
          });
          document.addEventListener('pointermove', this.handlePointerMove, {
            capture: true
          });
          document.addEventListener('pointerover', this.handlePointerOver, {
            capture: true
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _spotlight["default"].terminate();

        if (typeof document === 'object') {
          document.removeEventListener('focusin', this.handleFocusIn, {
            capture: true
          });
          document.removeEventListener('keydown', this.handleKeyDown, {
            capture: true
          });
          document.removeEventListener('pointermove', this.handlePointerMove, {
            capture: true
          });
          document.removeEventListener('pointerover', this.handlePointerOver, {
            capture: true
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        return /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
          ref: this.containerRef,
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(Wrapped, _objectSpread({}, this.props))
        });
      }
    }]);

    return _class;
  }(_react.Component), _class.displayName = 'SpotlightRootDecorator', _temp;
});
exports.SpotlightRootDecorator = SpotlightRootDecorator;
var _default = SpotlightRootDecorator;
exports["default"] = _default;