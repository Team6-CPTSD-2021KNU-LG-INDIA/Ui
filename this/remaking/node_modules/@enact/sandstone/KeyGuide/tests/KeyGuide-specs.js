"use strict";

var _enzyme = require("enzyme");

var _FloatingLayer = require("@enact/ui/FloatingLayer");

var _KeyGuide = _interopRequireDefault(require("../KeyGuide"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var FloatingLayerController = (0, _FloatingLayer.FloatingLayerDecorator)('div');
describe('KeyGuide Specs', function () {
  test('should not error with undefined children', function () {
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_KeyGuide["default"], {
        open: true
      })
    }));
    var expected = true;
    var actual = subject.exists();
    expect(actual).toBe(expected);
  });
  test('should not render open floating layer if open with no children', function () {
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_KeyGuide["default"], {
        open: true,
        children: []
      })
    }));
    var expected = false;
    var actual = subject.find('FloatingLayer').prop('open');
    expect(actual).toBe(expected);
  });
  test('should not render open floating layer if not open with children', function () {
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_KeyGuide["default"], {
        children: [{
          icon: 'red',
          children: 'a',
          key: 'a'
        }]
      })
    }));
    var expected = false;
    var actual = subject.find('FloatingLayer').prop('open');
    expect(actual).toBe(expected);
  });
  test('should not render open floating layer if open with children', function () {
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_KeyGuide["default"], {
        open: true,
        children: [{
          icon: 'red',
          children: 'a',
          key: 'a'
        }]
      })
    }));
    var expected = true;
    var actual = subject.find('FloatingLayer').prop('open');
    expect(actual).toBe(expected);
  });
  test('should apply color class if a color key is in the icon slot', function () {
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_KeyGuide["default"], {
        open: true,
        children: [{
          icon: 'red',
          children: 'a',
          key: 'a'
        }]
      })
    }));
    var expected = true;
    var actual = subject.find('.red').exists();
    expect(actual).toBe(expected);
  });
  test('should create an icon if asked to', function () {
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_KeyGuide["default"], {
        open: true,
        children: [{
          icon: 'plus',
          children: 'a',
          key: 'a'
        }]
      })
    }));
    var expected = true;
    var actual = subject.find('Icon').exists();
    expect(actual).toBe(expected);
  });
  test('should not create an icon if a color is specified', function () {
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_KeyGuide["default"], {
        open: true,
        children: [{
          icon: 'green',
          children: 'a',
          key: 'a'
        }]
      })
    }));
    var expected = false;
    var actual = subject.find('Icon').exists();
    expect(actual).toBe(expected);
  });
});