"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extractVoiceProps = exports.compareChildren = void 0;

var _equals = _interopRequireDefault(require("ramda/src/equals"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Removes voice control related props from `props` and returns them in a new object.
 *
 * @function
 * @param   {Object}    props    Props object
 *
 * @returns {Object}             voice control related props
 * @memberof sandstone/internal/util
 * @private
 */
var extractVoiceProps = function extractVoiceProps(props) {
  var obj = {};
  Object.keys(props).forEach(function (key) {
    if (key.indexOf('data-webos-voice-') === 0) {
      obj[key] = props[key];
      delete props[key];
    }
  });
  return obj;
};
/**
 * Compares two children and returns true if they are equivalent, false otherwise.
 *
 * @function
 * @param   {children}    a    children props
*  @param   {children}    b    children props
 *
 * @returns {Boolean}          `true` if same
 * @memberof sandstone/internal/util
 * @private
 */


exports.extractVoiceProps = extractVoiceProps;

var compareChildren = function compareChildren(a, b) {
  if (!a || !b || a.length !== b.length) return false;
  var type = null;

  for (var i = 0; i < a.length; i++) {
    type = type || typeof a[i];

    if (type === 'string') {
      if (a[i] !== b[i]) {
        return false;
      }
    } else if (!(0, _equals["default"])(a[i], b[i])) {
      return false;
    }
  }

  return true;
};

exports.compareChildren = compareChildren;