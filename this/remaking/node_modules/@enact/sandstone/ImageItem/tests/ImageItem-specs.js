"use strict";

var _enzyme = require("enzyme");

var _ImageItem = require("../ImageItem");

var _jsxRuntime = require("react/jsx-runtime");

function SelectionComponent() {
  return null;
}

describe('ImageItem', function () {
  test('should support `centered` prop', function () {
    var children = 'caption';
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      centered: true,
      children: children
    }));
    var expected = 'center';
    var actual = subject.find('.text').prop('style');
    expect(actual).toHaveProperty('textAlign', expected);
  });
  test('should support `centered` prop to label', function () {
    var label = 'label';
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      centered: true,
      label: label
    }));
    var expected = 'center';
    var actual = subject.find('.label .text').prop('style');
    expect(actual).toHaveProperty('textAlign', expected);
  });
  test('should support not apply `centered` with horizontal', function () {
    var children = 'caption';
    var subject = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      centered: true,
      orientation: "horizontal",
      children: children
    }));
    var unexpected = 'center';
    var actual = subject.find('.text').prop('style');
    expect(actual).not.toHaveProperty('textAlign', unexpected);
  });
  test('should support `children` prop', function () {
    var children = 'caption';
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      children: children
    }));
    var expected = children;
    var actual = subject.find('.caption').prop('children');
    expect(actual).toBe(expected);
  });
  test('should support `label` prop', function () {
    var label = 'label';
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      label: label
    }));
    var expected = label;
    var actual = subject.find('.label').prop('children');
    expect(actual).toBe(expected);
  });
  test('should support `imageIconSrc` prop when `orientation="vertical"`', function () {
    var imageIconSrc = 'imageIconSrc';
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      imageIconSrc: imageIconSrc,
      orientation: "vertical"
    }));
    var expected = imageIconSrc;
    var actual = subject.find('.imageIcon').prop('src');
    expect(actual).toBe(expected);
  });
  test('should not support `imageIconSrc` prop when `orientation="horizontal"`', function () {
    var imageIconSrc = 'imageIconSrc';
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      imageIconSrc: imageIconSrc,
      orientation: "horizontal"
    }));
    var expected = false;
    var actual = subject.find('.imageIcon').exists();
    expect(actual).toBe(expected);
  });
  test('should omit `.imageIcon` when `imageIconSrc` is unset and `caption` is set', function () {
    var children = 'caption';
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      children: children
    }));
    var actual = subject.find('.imageIcon');
    expect(actual).toHaveLength(0);
  });
  test('should omit `.imageIcon` when `imageIconSrc` is unset and `label` is set', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      label: "label"
    }));
    var actual = subject.find('.imageIcon');
    expect(actual).toHaveLength(0);
  });
  test('should omit children when `imageIconSrc`, `children`, and `label` are unset', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {}));
    var actual = subject.prop('children');
    expect(actual).toBeUndefined();
  });
  test('should omit `.selectionContainer` when `showSelection` is unset', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {}));
    var imageSubject = (0, _enzyme.shallow)(subject.prop('imageComponent'));
    var actual = imageSubject.find('.selectionContainer');
    expect(actual).toHaveLength(0);
  });
  test('should include `.selectionContainer` when `showSelection`', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      showSelection: true
    }));
    var imageSubject = (0, _enzyme.shallow)(subject.prop('imageComponent'));
    var actual = imageSubject.find('.selectionContainer');
    expect(actual).toHaveLength(1);
  });
  test('should support `selectionComponent` prop', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ImageItem.ImageItemBase, {
      showSelection: true,
      selectionComponent: SelectionComponent
    }));
    var imageSubject = (0, _enzyme.shallow)(subject.prop('imageComponent'));
    var actual = imageSubject.find(SelectionComponent);
    expect(actual).toHaveLength(1);
  });
});