"use strict";

var _enzyme = require("enzyme");

var _FloatingLayer = require("@enact/ui/FloatingLayer");

var _Alert = require("../Alert");

var _Button = _interopRequireDefault(require("../../Button"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var FloatingLayerController = (0, _FloatingLayer.FloatingLayerDecorator)('div');
describe('Alert', function () {
  test('should be rendered opened if open is set to true', function () {
    var alert = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.Alert, {
        open: true
      })
    }));
    var expected = true;
    var actual = alert.find('FloatingLayer').prop('open');
    expect(actual).toBe(expected);
  });
  test('should not be rendered if open is set to false', function () {
    var alert = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.Alert, {})
    }));
    var expected = false;
    var actual = alert.find('FloatingLayer').prop('open');
    expect(actual).toBe(expected);
  });
  test('should render title', function () {
    var alert = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.AlertBase, {
      open: true,
      id: "test",
      title: "alert title"
    }));
    var expected = 'alert title';
    var actual = alert.find('#test_title').prop('children');
    expect(actual).toBe(expected);
  });
  test('should render content', function () {
    var alert = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.AlertBase, {
      open: true,
      id: "test",
      title: "alert title",
      children: 'alert message'
    }));
    var expected = 'alert message';
    var actual = alert.find('#test_content').prop('children');
    expect(actual).toBe(expected);
  });
  test('should render to empty string if children is not set', function () {
    var alert = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.AlertBase, {
      open: true,
      id: "test",
      title: "alert title"
    }));
    var actual = alert.find('#test_content').prop('children');
    expect(actual).toBeFalsy();
  });
  test('should render icon type of image if `image` prop is set to `icon`', function () {
    var alert = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Alert.Alert, {
        open: true,
        id: "test",
        title: "alert title",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("image", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.AlertImage, {
            src: "testIconImage.png",
            type: "icon"
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("buttons", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Button["default"], {
            children: "yes"
          })
        })]
      })
    }));
    var expected = 'testIconImage.png';
    var actual = alert.find('AlertImage').prop('src');
    expect(actual).toBe(expected);
  });
  test('should render icon type of image if `image` prop is set to `thumbnail`', function () {
    var alert = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Alert.Alert, {
        open: true,
        id: "test",
        title: "alert title",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("image", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.AlertImage, {
            src: "testThumbnailImage.png",
            type: "thumbnail"
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("buttons", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Button["default"], {
            children: "yes"
          })
        })]
      })
    }));
    var expected = 'testThumbnailImage.png';
    var actual = alert.find('AlertImage').prop('src');
    expect(actual).toBe(expected);
  });
});
describe('AlertOverlay specs', function () {
  test('should be rendered opened if open is set to true', function () {
    var alertOverlay = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.Alert, {
        type: "overlay",
        open: true
      })
    }));
    var expected = true;
    var actual = alertOverlay.find('FloatingLayer').prop('open');
    expect(actual).toBe(expected);
  });
  test('should not be rendered if open is set to false', function () {
    var alertOverlay = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.Alert, {
        type: "overlay"
      })
    }));
    var expected = false;
    var actual = alertOverlay.find('FloatingLayer').prop('open');
    expect(actual).toBe(expected);
  });
  test('should render content', function () {
    var alertOverlay = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Alert.Alert, {
      type: "overlay",
      open: true,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        children: "this is alert overlay."
      }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("buttons", {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Button["default"], {
          children: "yes"
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Button["default"], {
          children: "yes"
        })]
      })]
    }));
    var expected = 'this is alert overlay.';
    var actual = alertOverlay.find('span').prop('children');
    expect(actual).toBe(expected);
  });
  test('should render icon type of image if `image` prop is set to `icon`', function () {
    var alertOverlay = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Alert.Alert, {
        type: "overlay",
        open: true,
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("image", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.AlertImage, {
            src: "testIconImage.png",
            type: "icon"
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("buttons", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Button["default"], {
            children: "yes"
          })
        })]
      })
    }));
    var expected = 'testIconImage.png';
    var actual = alertOverlay.find('AlertImage').prop('src');
    expect(actual).toBe(expected);
  });
  test('should render icon type of image if `image` prop is set to `thumbnail`', function () {
    var alertOverlay = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(FloatingLayerController, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(_Alert.Alert, {
        type: "overlay",
        open: true,
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("image", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Alert.AlertImage, {
            src: "testThumbnailImage.png",
            type: "thumbnail"
          })
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)("buttons", {
          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_Button["default"], {
            children: "yes"
          })
        })]
      })
    }));
    var expected = 'testThumbnailImage.png';
    var actual = alertOverlay.find('AlertImage').prop('src');
    expect(actual).toBe(expected);
  });
});