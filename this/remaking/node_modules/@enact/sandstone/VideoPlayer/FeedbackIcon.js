"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FeedbackIconBase = exports.FeedbackIcon = exports["default"] = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Skinnable = _interopRequireDefault(require("../Skinnable"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _FeedbackIcons = _interopRequireDefault(require("./FeedbackIcons.js"));

var _FeedbackModule = _interopRequireDefault(require("./Feedback.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * Feedback Icon for {@link sandstone/VideoPlayer.Feedback}.
 *
 * @class FeedbackIcon
 * @memberof sandstone/VideoPlayer
 * @ui
 * @private
 */
var FeedbackIconBase = (0, _kind["default"])({
  name: 'FeedbackIcon',
  propTypes:
  /** @lends sandstone/VideoPlayer.FeedbackIcon.prototype */
  {
    /**
     * Refers to one of the following possible media playback states.
     * `'play'`, `'pause'`, `'rewind'`, `'fastForward'` ,
     * `'jumpBackward'`, `'jumpForward'`, `'jumpToStart'`, `'jumpToEnd'`, `'stop'`.
     *
     * @type {('play'|'pause'|'rewind'|'fastForward'|'jumpBackward'|'jumpForward'|'jumpToStart'|'jumpToEnd'|'stop')}
     * @public
     */
    children: _propTypes["default"].oneOf(Object.keys(_FeedbackIcons["default"]))
  },
  styles: {
    css: _FeedbackModule["default"],
    className: 'icon'
  },
  computed: {
    children: function children(_ref) {
      var _children = _ref.children;
      return _children && _FeedbackIcons["default"][_children] && _FeedbackIcons["default"][_children].icon;
    }
  },
  render: function render(_ref2) {
    var children = _ref2.children,
        rest = _objectWithoutProperties(_ref2, ["children"]);

    if (children) {
      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_Icon["default"], _objectSpread(_objectSpread({}, rest), {}, {
        children: children
      }));
    }

    return null;
  }
});
exports.FeedbackIconBase = FeedbackIconBase;
var FeedbackIcon = (0, _Skinnable["default"])(FeedbackIconBase);
exports.FeedbackIcon = FeedbackIcon;
var _default = FeedbackIcon;
exports["default"] = _default;