"use strict";

var _enzyme = require("enzyme");

var _ProgressBar = _interopRequireDefault(require("../ProgressBar"));

var _ProgressBarModule = _interopRequireDefault(require("../ProgressBar.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('ProgressBar Specs', function () {
  test('should return a DOM node reference for `componentRef`', function () {
    var ref = jest.fn();
    (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
      ref: ref
    }));
    var expected = 'DIV';
    var actual = ref.mock.calls[0][0].nodeName;
    expect(actual).toBe(expected);
  });
  describe('horizontal', function () {
    test('should have width of 0.5', function () {
      var progressBar = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        progress: 0.5
      }));
      var style = progressBar.find(".".concat(_ProgressBarModule["default"].progressBar)).prop('style');
      var expected = 0.5;
      var actual = style['--ui-progressbar-proportion-end'];
      expect(actual).toBe(expected);
    });
    test('should have background width of 0.75', function () {
      var progressBar = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        backgroundProgress: 0.75
      }));
      var style = progressBar.find(".".concat(_ProgressBarModule["default"].progressBar)).prop('style');
      var expected = 0.75;
      var actual = style['--ui-progressbar-proportion-end-background'];
      expect(actual).toBe(expected);
    });
  });
  describe('vertical', function () {
    test('should have height of 0.5', function () {
      var progressBar = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        progress: 0.5,
        orientation: "vertical"
      }));
      var style = progressBar.find(".".concat(_ProgressBarModule["default"].progressBar)).prop('style');
      var expected = 0.5;
      var actual = style['--ui-progressbar-proportion-end'];
      expect(actual).toBe(expected);
    });
    test('should have background height of 0.75', function () {
      var progressBar = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        progress: 0.5,
        backgroundProgress: 0.75,
        orientation: "vertical"
      }));
      var style = progressBar.find(".".concat(_ProgressBarModule["default"].progressBar)).prop('style');
      var expected = 0.75;
      var actual = style['--ui-progressbar-proportion-end-background'];
      expect(actual).toBe(expected);
    });
  });
  describe('radial', function () {
    test('should have a radius of 0.5', function () {
      var progressBar = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        progress: 0.5,
        orientation: "radial"
      }));
      var style = progressBar.find(".".concat(_ProgressBarModule["default"].progressBar)).prop('style');
      var expected = 0.5;
      var actual = style['--ui-progressbar-proportion-end'];
      expect(actual).toBe(expected);
    });
    test('should have background radius of 0.75', function () {
      var progressBar = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_ProgressBar["default"], {
        progress: 0.5,
        backgroundProgress: 0.75,
        orientation: "radial"
      }));
      var style = progressBar.find(".".concat(_ProgressBarModule["default"].progressBar)).prop('style');
      var expected = 0.75;
      var actual = style['--ui-progressbar-proportion-end-background'];
      expect(actual).toBe(expected);
    });
  });
});