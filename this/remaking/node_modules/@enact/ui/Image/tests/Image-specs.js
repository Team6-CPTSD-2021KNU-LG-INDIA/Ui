"use strict";

var _enzyme = require("enzyme");

var _Image = _interopRequireWildcard(require("../Image"));

var _ImageModule = _interopRequireDefault(require("../Image.module.css"));

var _jsxRuntime = require("react/jsx-runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var src = {
  'hd': 'http://lorempixel.com/64/64/city/1/',
  'fhd': 'http://lorempixel.com/128/128/city/1/',
  'uhd': 'http://lorempixel.com/256/256/city/1/'
};
describe('Image Specs', function () {
  test('should only have image class without sizing', function () {
    var image = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      src: src,
      sizing: "none"
    }));
    var expected = _ImageModule["default"].image;
    var actual = image.find('.image').prop('className');
    expect(actual).toBe(expected);
  });
  test('should have class for fill', function () {
    var image = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      src: src,
      sizing: "fill"
    }));
    var expected = true;
    var actual = image.find('.image').hasClass(_ImageModule["default"].fill);
    expect(actual).toBe(expected);
  });
  test('should have class for fit', function () {
    var image = (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      src: src,
      sizing: "fit"
    }));
    var expected = true;
    var actual = image.find('.image').hasClass(_ImageModule["default"].fit);
    expect(actual).toBe(expected);
  });
  test('should set role to img by default', function () {
    var image = (0, _enzyme.shallow)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image.ImageBase, {
      src: src,
      sizing: "fit"
    }));
    var expected = 'img';
    var actual = image.find('.image').prop('role');
    expect(actual).toBe(expected);
  });
  test('should return a DOM node reference for `componentRef`', function () {
    var ref = jest.fn();
    (0, _enzyme.mount)( /*#__PURE__*/(0, _jsxRuntime.jsx)(_Image["default"], {
      ref: ref,
      src: src
    }));
    var expected = 'DIV';
    var actual = ref.mock.calls[0][0].nodeName;
    expect(actual).toBe(expected);
  });
});